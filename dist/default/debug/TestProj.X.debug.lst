

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri May 04 17:54:44 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF2321
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41  0000                     
    42                           ; Version 1.45
    43                           ; Generated 16/11/2017 GMT
    44                           ; 
    45                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18LF2321 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     
    77                           	psect	idataCOMRAM
    78  0011F8                     __pidataCOMRAM:
    79                           	opt stack 0
    80                           
    81                           ;initializer for _adcPrev
    82  0011F8  03E8               	dw	1000
    83                           
    84                           	psect	idataBANK0
    85  001044                     __pidataBANK0:
    86                           	opt stack 0
    87                           
    88                           ;initializer for appendUnits@F2916
    89  001044  6D                 	db	109
    90  001045  6D                 	db	109
    91  001046  48                 	db	72
    92  001047  67                 	db	103
    93  001048  00                 	db	0
    94                           
    95                           ;initializer for _measurePointer
    96  001049  CF                 	db	low _measuringDisplay
    97  00104A  00                 	db	high _measuringDisplay
    98                           
    99                           ;initializer for _bpmPointer
   100  00104B  8D                 	db	low _bpmDisplay
   101  00104C  00                 	db	high _bpmDisplay
   102                           
   103                           ;initializer for _sysPointer
   104  00104D  BB                 	db	low _sysDisplay
   105  00104E  00                 	db	high _sysDisplay
   106                           
   107                           ;initializer for _diasPointer
   108  00104F  A6                 	db	low _diasDisplay
   109  001050  00                 	db	high _diasDisplay
   110                           
   111                           ;initializer for _bpmDisplay
   112  001051  48                 	db	72
   113  001052  65                 	db	101
   114  001053  61                 	db	97
   115  001054  72                 	db	114
   116  001055  74                 	db	116
   117  001056  20                 	db	32
   118  001057  42                 	db	66
   119  001058  65                 	db	101
   120  001059  61                 	db	97
   121  00105A  74                 	db	116
   122  00105B  73                 	db	115
   123  00105C  20                 	db	32
   124  00105D  70                 	db	112
   125  00105E  65                 	db	101
   126  00105F  72                 	db	114
   127  001060  20                 	db	32
   128  001061  4D                 	db	77
   129  001062  69                 	db	105
   130  001063  6E                 	db	110
   131  001064  75                 	db	117
   132  001065  74                 	db	116
   133  001066  65                 	db	101
   134  001067  3A                 	db	58
   135  001068  20                 	db	32
   136  001069  00                 	db	0
   137                           
   138                           ;initializer for _diasDisplay
   139  00106A  44                 	db	68
   140  00106B  69                 	db	105
   141  00106C  61                 	db	97
   142  00106D  73                 	db	115
   143  00106E  74                 	db	116
   144  00106F  6F                 	db	111
   145  001070  6C                 	db	108
   146  001071  69                 	db	105
   147  001072  63                 	db	99
   148  001073  20                 	db	32
   149  001074  50                 	db	80
   150  001075  72                 	db	114
   151  001076  65                 	db	101
   152  001077  73                 	db	115
   153  001078  73                 	db	115
   154  001079  75                 	db	117
   155  00107A  72                 	db	114
   156  00107B  65                 	db	101
   157  00107C  3A                 	db	58
   158  00107D  20                 	db	32
   159  00107E  00                 	db	0
   160                           
   161                           ;initializer for _sysDisplay
   162  00107F  53                 	db	83
   163  001080  79                 	db	121
   164  001081  73                 	db	115
   165  001082  74                 	db	116
   166  001083  6F                 	db	111
   167  001084  6C                 	db	108
   168  001085  69                 	db	105
   169  001086  63                 	db	99
   170  001087  20                 	db	32
   171  001088  50                 	db	80
   172  001089  72                 	db	114
   173  00108A  65                 	db	101
   174  00108B  73                 	db	115
   175  00108C  73                 	db	115
   176  00108D  75                 	db	117
   177  00108E  72                 	db	114
   178  00108F  65                 	db	101
   179  001090  3A                 	db	58
   180  001091  20                 	db	32
   181  001092  00                 	db	0
   182                           
   183                           ;initializer for _measuringDisplay
   184  001093  4D                 	db	77
   185  001094  65                 	db	101
   186  001095  61                 	db	97
   187  001096  73                 	db	115
   188  001097  75                 	db	117
   189  001098  72                 	db	114
   190  001099  69                 	db	105
   191  00109A  6E                 	db	110
   192  00109B  67                 	db	103
   193  00109C  2E                 	db	46
   194  00109D  2E                 	db	46
   195  00109E  2E                 	db	46
   196  00109F  00                 	db	0
   197  0000                     _LATAbits	set	3977
   198  0000                     _TRISAbits	set	3986
   199  0000                     _TRISBbits	set	3987
   200  0000                     _LATCbits	set	3979
   201  0000                     _TRISCbits	set	3988
   202  0000                     _ADRES	set	4035
   203  0000                     _PIE1bits	set	3997
   204  0000                     _RCSTAbits	set	4011
   205  0000                     _TXSTAbits	set	4012
   206  0000                     _SPBRG	set	4015
   207  0000                     _BAUDCONbits	set	4024
   208  0000                     _PIR1bits	set	3998
   209  0000                     _RCONbits	set	4048
   210  0000                     _ADCON1	set	4033
   211  0000                     _ADCON0	set	4034
   212  0000                     _ADCON2bits	set	4032
   213  0000                     _ADCON0bits	set	4034
   214  0000                     _TXREG	set	4013
   215  0000                     _RCREG	set	4014
   216  0000                     _OSCCONbits	set	4051
   217  0000                     _RCIF	set	31989
   218  0000                     _T0CON	set	4053
   219  0000                     _T0CONbits	set	4053
   220  0000                     _TMR0L	set	4054
   221  0000                     _TMR0H	set	4055
   222  0000                     _INTCONbits	set	4082
   223  0000                     _TMR0IF	set	32658
   224  0000                     _TMR0IE	set	32661
   225                           
   226                           	psect	smallconst
   227  000200                     __psmallconst:
   228                           	opt stack 0
   229  000200  00                 	db	0
   230  000201                     STR_2:
   231  000201  50                 	db	80	;'P'
   232  000202  72                 	db	114	;'r'
   233  000203  65                 	db	101	;'e'
   234  000204  73                 	db	115	;'s'
   235  000205  73                 	db	115	;'s'
   236  000206  20                 	db	32
   237  000207  31                 	db	49	;'1'
   238  000208  20                 	db	32
   239  000209  74                 	db	116	;'t'
   240  00020A  6F                 	db	111	;'o'
   241  00020B  20                 	db	32
   242  00020C  73                 	db	115	;'s'
   243  00020D  74                 	db	116	;'t'
   244  00020E  61                 	db	97	;'a'
   245  00020F  72                 	db	114	;'r'
   246  000210  74                 	db	116	;'t'
   247  000211  20                 	db	32
   248  000212  6F                 	db	111	;'o'
   249  000213  76                 	db	118	;'v'
   250  000214  65                 	db	101	;'e'
   251  000215  72                 	db	114	;'r'
   252  000216  21                 	db	33
   253  000217  0D                 	db	13
   254  000218  0A                 	db	10
   255  000219  00                 	db	0
   256  00021A                     STR_1:
   257  00021A  46                 	db	70	;'F'
   258  00021B  69                 	db	105	;'i'
   259  00021C  6E                 	db	110	;'n'
   260  00021D  69                 	db	105	;'i'
   261  00021E  73                 	db	115	;'s'
   262  00021F  68                 	db	104	;'h'
   263  000220  21                 	db	33
   264  000221  0D                 	db	13
   265  000222  0A                 	db	10
   266  000223  00                 	db	0
   267                           
   268                           ; #config settings
   269  000224  00                 	db	0	; dummy byte at the end
   270  0000                     
   271                           	psect	cinit
   272  000F88                     __pcinit:
   273                           	opt stack 0
   274  000F88                     start_initialization:
   275                           	opt stack 0
   276  000F88                     __initialization:
   277                           	opt stack 0
   278                           
   279                           ; Initialize objects allocated to BANK0 (92 bytes)
   280                           ; load TBLPTR registers with __pidataBANK0
   281  000F88  0E44               	movlw	low __pidataBANK0
   282  000F8A  6EF6               	movwf	tblptrl,c
   283  000F8C  0E10               	movlw	high __pidataBANK0
   284  000F8E  6EF7               	movwf	tblptrh,c
   285  000F90  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   286  000F92  6EF8               	movwf	tblptru,c
   287  000F94  EE00  F080         	lfsr	0,__pdataBANK0
   288  000F98  EE10 F05C          	lfsr	1,92
   289  000F9C                     copy_data0:
   290  000F9C  0009               	tblrd		*+
   291  000F9E  CFF5 FFEE          	movff	tablat,postinc0
   292  000FA2  50E5               	movf	postdec1,w,c
   293  000FA4  50E1               	movf	fsr1l,w,c
   294  000FA6  E1FA               	bnz	copy_data0
   295                           
   296                           ; Initialize objects allocated to COMRAM (2 bytes)
   297                           ; load TBLPTR registers with __pidataCOMRAM
   298  000FA8  0EF8               	movlw	low __pidataCOMRAM
   299  000FAA  6EF6               	movwf	tblptrl,c
   300  000FAC  0E11               	movlw	high __pidataCOMRAM
   301  000FAE  6EF7               	movwf	tblptrh,c
   302  000FB0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   303  000FB2  6EF8               	movwf	tblptru,c
   304  000FB4  0009               	tblrd		*+	;fetch initializer
   305  000FB6  CFF5 F06B          	movff	tablat,__pdataCOMRAM
   306  000FBA  0009               	tblrd		*+	;fetch initializer
   307  000FBC  CFF5 F06C          	movff	tablat,__pdataCOMRAM+1
   308                           
   309                           ; Clear objects allocated to BANK0 (30 bytes)
   310  000FC0  EE00  F0DC         	lfsr	0,__pbssBANK0
   311  000FC4  0E1E               	movlw	30
   312  000FC6                     clear_0:
   313  000FC6  6AEE               	clrf	postinc0,c
   314  000FC8  06E8               	decf	wreg,f,c
   315  000FCA  E1FD               	bnz	clear_0
   316                           
   317                           ; Clear objects allocated to COMRAM (17 bytes)
   318  000FCC  EE00  F05A         	lfsr	0,__pbssCOMRAM
   319  000FD0  0E11               	movlw	17
   320  000FD2                     clear_1:
   321  000FD2  6AEE               	clrf	postinc0,c
   322  000FD4  06E8               	decf	wreg,f,c
   323  000FD6  E1FD               	bnz	clear_1
   324  000FD8                     end_of_initialization:
   325                           	opt stack 0
   326  000FD8                     __end_of__initialization:
   327                           	opt stack 0
   328  000FD8  906D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   329  000FDA  926D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   330  000FDC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   331  000FDE  6EF8               	movwf	tblptru,c
   332  000FE0  0100               	movlb	0
   333  000FE2  EF13  F001         	goto	_main	;jump to C main() function
   334                           tblptru	equ	0xFF8
   335                           tblptrh	equ	0xFF7
   336                           tblptrl	equ	0xFF6
   337                           tablat	equ	0xFF5
   338                           postinc0	equ	0xFEE
   339                           wreg	equ	0xFE8
   340                           postdec1	equ	0xFE5
   341                           fsr1l	equ	0xFE1
   342                           
   343                           	psect	bssCOMRAM
   344  00005A                     __pbssCOMRAM:
   345                           	opt stack 0
   346  00005A                     _MAP:
   347                           	opt stack 0
   348  00005A                     	ds	3
   349  00005D                     _avgCount:
   350                           	opt stack 0
   351  00005D                     	ds	2
   352  00005F                     _count:
   353                           	opt stack 0
   354  00005F                     	ds	2
   355  000061                     _state:
   356                           	opt stack 0
   357  000061                     	ds	2
   358  000063                     _i:
   359                           	opt stack 0
   360  000063                     	ds	2
   361  000065                     _timerInt:
   362                           	opt stack 0
   363  000065                     	ds	2
   364  000067                     _maxData:
   365                           	opt stack 0
   366  000067                     	ds	2
   367  000069                     _adcData:
   368                           	opt stack 0
   369  000069                     	ds	2
   370                           tblptru	equ	0xFF8
   371                           tblptrh	equ	0xFF7
   372                           tblptrl	equ	0xFF6
   373                           tablat	equ	0xFF5
   374                           postinc0	equ	0xFEE
   375                           wreg	equ	0xFE8
   376                           postdec1	equ	0xFE5
   377                           fsr1l	equ	0xFE1
   378                           
   379                           	psect	dataCOMRAM
   380  00006B                     __pdataCOMRAM:
   381                           	opt stack 0
   382  00006B                     _adcPrev:
   383                           	opt stack 0
   384  00006B                     	ds	2
   385                           tblptru	equ	0xFF8
   386                           tblptrh	equ	0xFF7
   387                           tblptrl	equ	0xFF6
   388                           tablat	equ	0xFF5
   389                           postinc0	equ	0xFEE
   390                           wreg	equ	0xFE8
   391                           postdec1	equ	0xFE5
   392                           fsr1l	equ	0xFE1
   393                           
   394                           	psect	bssBANK0
   395  0000DC                     __pbssBANK0:
   396                           	opt stack 0
   397  0000DC                     _sysComp:
   398                           	opt stack 0
   399  0000DC                     	ds	4
   400  0000E0                     _bpm:
   401                           	opt stack 0
   402  0000E0                     	ds	4
   403  0000E4                     _timerComp:
   404                           	opt stack 0
   405  0000E4                     	ds	4
   406  0000E8                     _diastolicPressure:
   407                           	opt stack 0
   408  0000E8                     	ds	3
   409  0000EB                     _heartFloat:
   410                           	opt stack 0
   411  0000EB                     	ds	3
   412  0000EE                     _systolicPressure:
   413                           	opt stack 0
   414  0000EE                     	ds	3
   415  0000F1                     _prevMeasurement:
   416                           	opt stack 0
   417  0000F1                     	ds	3
   418  0000F4                     _sysMeasure:
   419                           	opt stack 0
   420  0000F4                     	ds	2
   421  0000F6                     _pressure:
   422                           	opt stack 0
   423  0000F6                     	ds	2
   424  0000F8                     _avgData:
   425                           	opt stack 0
   426  0000F8                     	ds	2
   427                           tblptru	equ	0xFF8
   428                           tblptrh	equ	0xFF7
   429                           tblptrl	equ	0xFF6
   430                           tablat	equ	0xFF5
   431                           postinc0	equ	0xFEE
   432                           wreg	equ	0xFE8
   433                           postdec1	equ	0xFE5
   434                           fsr1l	equ	0xFE1
   435                           
   436                           	psect	dataBANK0
   437  000080                     __pdataBANK0:
   438                           	opt stack 0
   439  000080                     appendUnits@F2916:
   440                           	opt stack 0
   441  000080                     	ds	5
   442  000085                     _measurePointer:
   443                           	opt stack 0
   444  000085                     	ds	2
   445  000087                     _bpmPointer:
   446                           	opt stack 0
   447  000087                     	ds	2
   448  000089                     _sysPointer:
   449                           	opt stack 0
   450  000089                     	ds	2
   451  00008B                     _diasPointer:
   452                           	opt stack 0
   453  00008B                     	ds	2
   454  00008D                     _bpmDisplay:
   455                           	opt stack 0
   456  00008D                     	ds	25
   457  0000A6                     _diasDisplay:
   458                           	opt stack 0
   459  0000A6                     	ds	21
   460  0000BB                     _sysDisplay:
   461                           	opt stack 0
   462  0000BB                     	ds	20
   463  0000CF                     _measuringDisplay:
   464                           	opt stack 0
   465  0000CF                     	ds	13
   466                           tblptru	equ	0xFF8
   467                           tblptrh	equ	0xFF7
   468                           tblptrl	equ	0xFF6
   469                           tablat	equ	0xFF5
   470                           postinc0	equ	0xFEE
   471                           wreg	equ	0xFE8
   472                           postdec1	equ	0xFE5
   473                           fsr1l	equ	0xFE1
   474                           
   475                           	psect	cstackBANK1
   476  000100                     __pcstackBANK1:
   477                           	opt stack 0
   478  000100                     printData@data:
   479                           	opt stack 0
   480                           
   481                           ; 3 bytes @ 0x0
   482  000100                     	ds	3
   483  000103                     ??_printData:
   484                           
   485                           ; 1 bytes @ 0x3
   486  000103                     	ds	4
   487  000107                     ??_main:
   488                           
   489                           ; 1 bytes @ 0x7
   490  000107                     	ds	4
   491  00010B                     _main$1526:
   492                           	opt stack 0
   493                           
   494                           ; 3 bytes @ 0xB
   495  00010B                     	ds	3
   496                           tblptru	equ	0xFF8
   497                           tblptrh	equ	0xFF7
   498                           tblptrl	equ	0xFF6
   499                           tablat	equ	0xFF5
   500                           postinc0	equ	0xFEE
   501                           wreg	equ	0xFE8
   502                           postdec1	equ	0xFE5
   503                           fsr1l	equ	0xFE1
   504                           
   505                           	psect	cstackBANK0
   506  0000FA                     __pcstackBANK0:
   507                           	opt stack 0
   508  0000FA                     ___awdiv@counter:
   509                           	opt stack 0
   510                           
   511                           ; 1 bytes @ 0x0
   512  0000FA                     	ds	1
   513  0000FB                     ___awdiv@sign:
   514                           	opt stack 0
   515                           
   516                           ; 1 bytes @ 0x1
   517  0000FB                     	ds	1
   518  0000FC                     ___awdiv@quotient:
   519                           	opt stack 0
   520                           
   521                           ; 2 bytes @ 0x2
   522  0000FC                     	ds	2
   523                           tblptru	equ	0xFF8
   524                           tblptrh	equ	0xFF7
   525                           tblptrl	equ	0xFF6
   526                           tablat	equ	0xFF5
   527                           postinc0	equ	0xFEE
   528                           wreg	equ	0xFE8
   529                           postdec1	equ	0xFE5
   530                           fsr1l	equ	0xFE1
   531                           
   532                           	psect	cstackCOMRAM
   533  000001                     __pcstackCOMRAM:
   534                           	opt stack 0
   535  000001                     ??_YourHighPriorityISR:
   536                           
   537                           ; 1 bytes @ 0x0
   538  000001                     	ds	18
   539  000013                     ?_adcReadChannel:
   540                           	opt stack 0
   541  000013                     ?_strlen:
   542                           	opt stack 0
   543  000013                     ?___wmul:
   544                           	opt stack 0
   545  000013                     ?___ftpack:
   546                           	opt stack 0
   547  000013                     ___wmul@multiplier:
   548                           	opt stack 0
   549  000013                     strlen@s:
   550                           	opt stack 0
   551  000013                     ___ftpack@arg:
   552                           	opt stack 0
   553  000013                     ___ftge@ff1:
   554                           	opt stack 0
   555  000013                     UART_Open@baudrate:
   556                           	opt stack 0
   557                           
   558                           ; 4 bytes @ 0x12
   559  000013                     	ds	2
   560  000015                     ??_adcReadChannel:
   561  000015                     ??_strlen:
   562  000015                     ___wmul@multiplicand:
   563                           	opt stack 0
   564                           
   565                           ; 2 bytes @ 0x14
   566  000015                     	ds	1
   567  000016                     adcReadChannel@channelNumber:
   568                           	opt stack 0
   569  000016                     ___ftpack@exp:
   570                           	opt stack 0
   571  000016                     ___ftge@ff2:
   572                           	opt stack 0
   573                           
   574                           ; 3 bytes @ 0x15
   575  000016                     	ds	1
   576  000017                     ___ftpack@sign:
   577                           	opt stack 0
   578  000017                     ___wmul@product:
   579                           	opt stack 0
   580  000017                     strlen@cp:
   581                           	opt stack 0
   582                           
   583                           ; 2 bytes @ 0x16
   584  000017                     	ds	1
   585  000018                     ??___ftpack:
   586                           
   587                           ; 1 bytes @ 0x17
   588  000018                     	ds	1
   589  000019                     ??___ftge:
   590  000019                     UART_Write@info:
   591                           	opt stack 0
   592  000019                     appendUnits@data2:
   593                           	opt stack 0
   594                           
   595                           ; 5 bytes @ 0x18
   596  000019                     	ds	2
   597  00001B                     ??_UART_Write:
   598  00001B                     ?___ftadd:
   599                           	opt stack 0
   600  00001B                     ?___lltoft:
   601                           	opt stack 0
   602  00001B                     ___ftadd@f1:
   603                           	opt stack 0
   604  00001B                     ___lltoft@c:
   605                           	opt stack 0
   606                           
   607                           ; 4 bytes @ 0x1A
   608  00001B                     	ds	2
   609  00001D                     UART_Write@i:
   610                           	opt stack 0
   611                           
   612                           ; 2 bytes @ 0x1C
   613  00001D                     	ds	1
   614  00001E                     ___ftadd@f2:
   615                           	opt stack 0
   616                           
   617                           ; 3 bytes @ 0x1D
   618  00001E                     	ds	1
   619  00001F                     ??___lltoft:
   620                           
   621                           ; 1 bytes @ 0x1E
   622  00001F                     	ds	2
   623  000021                     ??___ftadd:
   624                           
   625                           ; 1 bytes @ 0x20
   626  000021                     	ds	2
   627  000023                     ___lltoft@exp:
   628                           	opt stack 0
   629                           
   630                           ; 1 bytes @ 0x22
   631  000023                     	ds	1
   632  000024                     ___ftadd@sign:
   633                           	opt stack 0
   634                           
   635                           ; 1 bytes @ 0x23
   636  000024                     	ds	1
   637  000025                     ___ftadd@exp2:
   638                           	opt stack 0
   639                           
   640                           ; 1 bytes @ 0x24
   641  000025                     	ds	1
   642  000026                     ___ftadd@exp1:
   643                           	opt stack 0
   644                           
   645                           ; 1 bytes @ 0x25
   646  000026                     	ds	1
   647  000027                     ?___ftmul:
   648                           	opt stack 0
   649  000027                     ___ftmul@f1:
   650                           	opt stack 0
   651                           
   652                           ; 3 bytes @ 0x26
   653  000027                     	ds	3
   654  00002A                     ___ftmul@f2:
   655                           	opt stack 0
   656                           
   657                           ; 3 bytes @ 0x29
   658  00002A                     	ds	3
   659  00002D                     ??___ftmul:
   660                           
   661                           ; 1 bytes @ 0x2C
   662  00002D                     	ds	3
   663  000030                     ___ftmul@exp:
   664                           	opt stack 0
   665                           
   666                           ; 1 bytes @ 0x2F
   667  000030                     	ds	1
   668  000031                     ___ftmul@f3_as_product:
   669                           	opt stack 0
   670                           
   671                           ; 3 bytes @ 0x30
   672  000031                     	ds	3
   673  000034                     ___ftmul@cntr:
   674                           	opt stack 0
   675                           
   676                           ; 1 bytes @ 0x33
   677  000034                     	ds	1
   678  000035                     ___ftmul@sign:
   679                           	opt stack 0
   680                           
   681                           ; 1 bytes @ 0x34
   682  000035                     	ds	1
   683  000036                     ?___ftdiv:
   684                           	opt stack 0
   685  000036                     ___ftdiv@f1:
   686                           	opt stack 0
   687                           
   688                           ; 3 bytes @ 0x35
   689  000036                     	ds	3
   690  000039                     ___ftdiv@f2:
   691                           	opt stack 0
   692                           
   693                           ; 3 bytes @ 0x38
   694  000039                     	ds	3
   695  00003C                     ??___ftdiv:
   696                           
   697                           ; 1 bytes @ 0x3B
   698  00003C                     	ds	3
   699  00003F                     ___ftdiv@cntr:
   700                           	opt stack 0
   701                           
   702                           ; 1 bytes @ 0x3E
   703  00003F                     	ds	1
   704  000040                     ___ftdiv@f3:
   705                           	opt stack 0
   706                           
   707                           ; 3 bytes @ 0x3F
   708  000040                     	ds	3
   709  000043                     ___ftdiv@exp:
   710                           	opt stack 0
   711                           
   712                           ; 1 bytes @ 0x42
   713  000043                     	ds	1
   714  000044                     ___ftdiv@sign:
   715                           	opt stack 0
   716                           
   717                           ; 1 bytes @ 0x43
   718  000044                     	ds	1
   719  000045                     ?___fttol:
   720                           	opt stack 0
   721  000045                     ___fttol@f1:
   722                           	opt stack 0
   723                           
   724                           ; 3 bytes @ 0x44
   725  000045                     	ds	4
   726  000049                     ??___fttol:
   727                           
   728                           ; 1 bytes @ 0x48
   729  000049                     	ds	5
   730  00004E                     ___fttol@sign1:
   731                           	opt stack 0
   732                           
   733                           ; 1 bytes @ 0x4D
   734  00004E                     	ds	1
   735  00004F                     ___fttol@lval:
   736                           	opt stack 0
   737                           
   738                           ; 4 bytes @ 0x4E
   739  00004F                     	ds	4
   740  000053                     ___fttol@exp1:
   741                           	opt stack 0
   742                           
   743                           ; 1 bytes @ 0x52
   744  000053                     	ds	1
   745  000054                     ?___awdiv:
   746                           	opt stack 0
   747  000054                     ___awdiv@dividend:
   748                           	opt stack 0
   749                           
   750                           ; 2 bytes @ 0x53
   751  000054                     	ds	2
   752  000056                     ___awdiv@divisor:
   753                           	opt stack 0
   754                           
   755                           ; 2 bytes @ 0x55
   756  000056                     	ds	2
   757  000058                     printData@sender:
   758                           	opt stack 0
   759                           
   760                           ; 2 bytes @ 0x57
   761  000058                     	ds	2
   762                           tblptru	equ	0xFF8
   763                           tblptrh	equ	0xFF7
   764                           tblptrl	equ	0xFF6
   765                           tablat	equ	0xFF5
   766                           postinc0	equ	0xFEE
   767                           wreg	equ	0xFE8
   768                           postdec1	equ	0xFE5
   769                           fsr1l	equ	0xFE1
   770                           
   771 ;;
   772 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   773 ;;
   774 ;; *************** function _main *****************
   775 ;; Defined at:
   776 ;;		line 100 in file "test.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;		None
   779 ;; Auto vars:     Size  Location     Type
   780 ;;		None
   781 ;; Return value:  Size  Location     Type
   782 ;;                  1    wreg      void 
   783 ;; Registers used:
   784 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMRAM   BANK0   BANK1
   790 ;;      Params:         0       0       0
   791 ;;      Locals:         0       0       3
   792 ;;      Temps:          0       0       4
   793 ;;      Totals:         0       0       7
   794 ;;Total ram usage:        7 bytes
   795 ;; Hardware stack levels required when called:    3
   796 ;; This function calls:
   797 ;;		_UART_Close
   798 ;;		_UART_Open
   799 ;;		_UART_Write
   800 ;;		___ftadd
   801 ;;		___ftdiv
   802 ;;		___ftmul
   803 ;;		___fttol
   804 ;;		___lltoft
   805 ;;		_adcConfig
   806 ;;		_adcReadChannel
   807 ;;		_appendUnits
   808 ;;		_printData
   809 ;;		_printNewLine
   810 ;;		_timerConfig
   811 ;; This function is called by:
   812 ;;		Startup code after reset
   813 ;; This function uses a non-reentrant model
   814 ;;
   815                           
   816                           	psect	text0
   817  000226                     __ptext0:
   818                           	opt stack 0
   819  000226                     _main:
   820                           	opt stack 28
   821                           
   822                           ;test.c: 103: OSCCONbits.IRCF0 = 1;
   823                           
   824                           ;incstack = 0
   825  000226  88D3               	bsf	4051,4,c	;volatile
   826                           
   827                           ;test.c: 104: OSCCONbits.IRCF1 = 1;
   828  000228  8AD3               	bsf	4051,5,c	;volatile
   829                           
   830                           ;test.c: 105: OSCCONbits.IRCF2 = 1;
   831  00022A  8CD3               	bsf	4051,6,c	;volatile
   832                           
   833                           ;test.c: 106: OSCCONbits.SCS0 = 1;
   834  00022C  80D3               	bsf	4051,0,c	;volatile
   835                           
   836                           ;test.c: 107: OSCCONbits.SCS1 = 1;
   837  00022E  82D3               	bsf	4051,1,c	;volatile
   838                           
   839                           ;test.c: 110: TRISCbits.RC6 = 1;
   840  000230  8C94               	bsf	3988,6,c	;volatile
   841                           
   842                           ;test.c: 111: TRISCbits.RC7 = 1;
   843  000232  8E94               	bsf	3988,7,c	;volatile
   844                           
   845                           ;test.c: 112: LATCbits.LATC6 = 1;
   846  000234  8C8B               	bsf	3979,6,c	;volatile
   847                           
   848                           ;test.c: 113: LATCbits.LATC7 = 1;
   849  000236  8E8B               	bsf	3979,7,c	;volatile
   850                           
   851                           ;test.c: 114: TRISBbits.RB0 = 0;
   852  000238  9093               	bcf	3987,0,c	;volatile
   853                           
   854                           ;test.c: 116: TRISAbits.RA0 = 0;
   855  00023A  9092               	bcf	3986,0,c	;volatile
   856                           
   857                           ;test.c: 117: LATAbits.LATA0 = 0;
   858  00023C  9089               	bcf	3977,0,c	;volatile
   859                           
   860                           ;test.c: 120: UART_Close();
   861  00023E  ECFA  F008         	call	_UART_Close	;wreg free
   862                           
   863                           ;test.c: 121: UART_Open(9600);
   864  000242  0E80               	movlw	128
   865  000244  6E13               	movwf	UART_Open@baudrate,c
   866  000246  0E25               	movlw	37
   867  000248  6E14               	movwf	UART_Open@baudrate+1,c
   868  00024A  0E00               	movlw	0
   869  00024C  6E15               	movwf	UART_Open@baudrate+2,c
   870  00024E  0E00               	movlw	0
   871  000250  6E16               	movwf	UART_Open@baudrate+3,c
   872  000252  ECE7  F008         	call	_UART_Open	;wreg free
   873                           
   874                           ;test.c: 123: adcConfig();
   875  000256  ECDA  F008         	call	_adcConfig	;wreg free
   876                           
   877                           ;test.c: 124: timerConfig();
   878  00025A  ECBA  F008         	call	_timerConfig	;wreg free
   879  00025E                     
   880                           ;test.c: 127: if(state == 0)
   881  00025E  5061               	movf	_state,w,c
   882  000260  1062               	iorwf	_state+1,w,c
   883  000262  A4D8               	btfss	status,2,c
   884  000264  D00C               	goto	l140
   885                           
   886                           ;test.c: 128: {
   887                           ;test.c: 129: UART_Write(measurePointer);
   888  000266  C085  F019         	movff	_measurePointer,UART_Write@info
   889  00026A  C086  F01A         	movff	_measurePointer+1,UART_Write@info+1
   890  00026E  EC94  F007         	call	_UART_Write	;wreg free
   891                           
   892                           ;test.c: 130: printNewLine();
   893  000272  ECCB  F008         	call	_printNewLine	;wreg free
   894                           
   895                           ;test.c: 131: state =1;
   896  000276  0E00               	movlw	0
   897  000278  6E62               	movwf	_state+1,c
   898  00027A  0E01               	movlw	1
   899  00027C  6E61               	movwf	_state,c
   900  00027E                     l140:
   901                           
   902                           ;test.c: 132: }
   903                           ;test.c: 133: if(state == 1)
   904  00027E  0461               	decf	_state,w,c
   905  000280  1062               	iorwf	_state+1,w,c
   906  000282  A4D8               	btfss	status,2,c
   907  000284  D071               	goto	l141
   908                           
   909                           ;test.c: 134: {
   910                           ;test.c: 135: adcData = adcReadChannel(0);
   911  000286  0E00               	movlw	0
   912  000288  ECBF  F006         	call	_adcReadChannel
   913  00028C  C013  F069         	movff	?_adcReadChannel,_adcData
   914  000290  C014  F06A         	movff	?_adcReadChannel+1,_adcData+1
   915                           
   916                           ;test.c: 136: if (maxData> adcData)
   917  000294  5067               	movf	_maxData,w,c
   918  000296  5C69               	subwf	_adcData,w,c
   919  000298  506A               	movf	_adcData+1,w,c
   920  00029A  0A80               	xorlw	128
   921  00029C  0101               	movlb	1	; () banked
   922  00029E  6F07               	movwf	??_main& (0+255),b
   923  0002A0  5068               	movf	_maxData+1,w,c
   924  0002A2  0A80               	xorlw	128
   925  0002A4  5907               	subwfb	??_main& (0+255),w,b
   926  0002A6  B0D8               	btfsc	status,0,c
   927  0002A8  D014               	goto	l142
   928                           
   929                           ; BSR set to: 1
   930                           ;test.c: 137: {
   931                           ;test.c: 138: sysMeasure++;
   932  0002AA  0100               	movlb	0	; () banked
   933  0002AC  4BF4               	infsnz	_sysMeasure& (0+255),f,b
   934  0002AE  2BF5               	incf	(_sysMeasure+1)& (0+255),f,b
   935                           
   936                           ; BSR set to: 0
   937                           ;test.c: 139: maxData = 0;
   938  0002B0  0E00               	movlw	0
   939  0002B2  6E68               	movwf	_maxData+1,c
   940  0002B4  0E00               	movlw	0
   941  0002B6  6E67               	movwf	_maxData,c
   942                           
   943                           ; BSR set to: 0
   944                           ;test.c: 140: sysComp += (unsigned)adcReadChannel(1);
   945  0002B8  0E01               	movlw	1
   946  0002BA  ECBF  F006         	call	_adcReadChannel
   947  0002BE  5013               	movf	?_adcReadChannel,w,c
   948  0002C0  0100               	movlb	0	; () banked
   949  0002C2  27DC               	addwf	_sysComp& (0+255),f,b
   950  0002C4  5014               	movf	?_adcReadChannel+1,w,c
   951  0002C6  23DD               	addwfc	(_sysComp+1)& (0+255),f,b
   952  0002C8  0E00               	movlw	0
   953  0002CA  23DE               	addwfc	(_sysComp+2)& (0+255),f,b
   954  0002CC  0E00               	movlw	0
   955  0002CE  23DF               	addwfc	(_sysComp+3)& (0+255),f,b
   956                           
   957                           ;test.c: 141: }
   958  0002D0  D00F               	goto	l144
   959  0002D2                     l142:
   960                           
   961                           ;test.c: 142: else if(adcData>adcPrev)
   962                           
   963                           ; BSR set to: 0
   964  0002D2  5069               	movf	_adcData,w,c
   965  0002D4  5C6B               	subwf	_adcPrev,w,c
   966  0002D6  506C               	movf	_adcPrev+1,w,c
   967  0002D8  0A80               	xorlw	128
   968  0002DA  0101               	movlb	1	; () banked
   969  0002DC  6F07               	movwf	??_main& (0+255),b
   970  0002DE  506A               	movf	_adcData+1,w,c
   971  0002E0  0A80               	xorlw	128
   972  0002E2  5907               	subwfb	??_main& (0+255),w,b
   973  0002E4  B0D8               	btfsc	status,0,c
   974  0002E6  D004               	goto	l144
   975                           
   976                           ; BSR set to: 1
   977                           ;test.c: 143: {
   978                           ;test.c: 144: maxData = adcData;
   979  0002E8  C069  F067         	movff	_adcData,_maxData
   980  0002EC  C06A  F068         	movff	_adcData+1,_maxData+1
   981  0002F0                     l144:
   982                           
   983                           ;test.c: 145: }
   984                           ;test.c: 146: adcPrev = adcData;
   985                           
   986                           ; BSR set to: 1
   987  0002F0  C069  F06B         	movff	_adcData,_adcPrev
   988  0002F4  C06A  F06C         	movff	_adcData+1,_adcPrev+1
   989                           
   990                           ;test.c: 147: if (sysMeasure >= 8 )
   991  0002F8  0100               	movlb	0	; () banked
   992  0002FA  BFF5               	btfsc	(_sysMeasure+1)& (0+255),7,b
   993  0002FC  D02C               	goto	l145
   994  0002FE  51F5               	movf	(_sysMeasure+1)& (0+255),w,b
   995  000300  E104               	bnz	u2870
   996  000302  0E08               	movlw	8
   997  000304  5DF4               	subwf	_sysMeasure& (0+255),w,b
   998  000306  A0D8               	btfss	status,0,c
   999  000308  D026               	goto	l145
  1000  00030A                     u2870:
  1001                           
  1002                           ; BSR set to: 0
  1003                           ;test.c: 148: {
  1004                           ;test.c: 149: state = 2;
  1005  00030A  0E00               	movlw	0
  1006  00030C  6E62               	movwf	_state+1,c
  1007  00030E  0E02               	movlw	2
  1008  000310  6E61               	movwf	_state,c
  1009                           
  1010                           ; BSR set to: 0
  1011                           ;test.c: 150: MAP = (sysComp/8);
  1012  000312  C0DC  F107         	movff	_sysComp,??_main
  1013  000316  C0DD  F108         	movff	_sysComp+1,??_main+1
  1014  00031A  C0DE  F109         	movff	_sysComp+2,??_main+2
  1015  00031E  C0DF  F10A         	movff	_sysComp+3,??_main+3
  1016  000322  0E04               	movlw	4
  1017  000324  D006               	goto	u2880
  1018  000326                     u2885:
  1019  000326  0101               	movlb	1	; () banked
  1020  000328  90D8               	bcf	status,0,c
  1021  00032A  330A               	rrcf	(??_main+3)& (0+255),f,b
  1022  00032C  3309               	rrcf	(??_main+2)& (0+255),f,b
  1023  00032E  3308               	rrcf	(??_main+1)& (0+255),f,b
  1024  000330  3307               	rrcf	??_main& (0+255),f,b
  1025  000332                     u2880:
  1026  000332  2EE8               	decfsz	wreg,f,c
  1027  000334  D7F8               	goto	u2885
  1028  000336  C107  F01B         	movff	??_main,___lltoft@c
  1029  00033A  C108  F01C         	movff	??_main+1,___lltoft@c+1
  1030  00033E  C109  F01D         	movff	??_main+2,___lltoft@c+2
  1031  000342  C10A  F01E         	movff	??_main+3,___lltoft@c+3
  1032  000346  EC50  F008         	call	___lltoft	;wreg free
  1033  00034A  C01B  F05A         	movff	?___lltoft,_MAP
  1034  00034E  C01C  F05B         	movff	?___lltoft+1,_MAP+1
  1035  000352  C01D  F05C         	movff	?___lltoft+2,_MAP+2
  1036  000356                     l145:
  1037                           
  1038                           ;test.c: 151: }
  1039                           ;test.c: 152: _delay((unsigned long)((40)*(8000000/4000.0)));
  1040  000356  0E68               	movlw	104
  1041  000358  0101               	movlb	1	; () banked
  1042  00035A  6F07               	movwf	??_main& (0+255),b
  1043  00035C  0EE4               	movlw	228
  1044  00035E                     u3017:
  1045  00035E  2EE8               	decfsz	wreg,f,c
  1046  000360  D7FE               	bra	u3017
  1047  000362  2F07               	decfsz	??_main& (0+255),f,b
  1048  000364  D7FC               	bra	u3017
  1049  000366  F000               	nop	
  1050  000368                     l141:
  1051                           
  1052                           ;test.c: 154: }
  1053                           ;test.c: 155: if (state == 2)
  1054  000368  0E02               	movlw	2
  1055  00036A  1861               	xorwf	_state,w,c
  1056  00036C  1062               	iorwf	_state+1,w,c
  1057  00036E  A4D8               	btfss	status,2,c
  1058  000370  D040               	goto	l146
  1059                           
  1060                           ;test.c: 156: {
  1061                           ;test.c: 157: systolicPressure = (float)(MAP-0x14F)*0.25925;
  1062  000372  0E80               	movlw	128
  1063  000374  6E1E               	movwf	___ftadd@f2,c
  1064  000376  0EA7               	movlw	167
  1065  000378  6E1F               	movwf	___ftadd@f2+1,c
  1066  00037A  0EC3               	movlw	195
  1067  00037C  6E20               	movwf	___ftadd@f2+2,c
  1068  00037E  C05A  F01B         	movff	_MAP,___ftadd@f1
  1069  000382  C05B  F01C         	movff	_MAP+1,___ftadd@f1+1
  1070  000386  C05C  F01D         	movff	_MAP+2,___ftadd@f1+2
  1071  00038A  EC2B  F004         	call	___ftadd	;wreg free
  1072  00038E  C01B  F027         	movff	?___ftadd,___ftmul@f1
  1073  000392  C01C  F028         	movff	?___ftadd+1,___ftmul@f1+1
  1074  000396  C01D  F029         	movff	?___ftadd+2,___ftmul@f1+2
  1075  00039A  0EBC               	movlw	188
  1076  00039C  6E2A               	movwf	___ftmul@f2,c
  1077  00039E  0E84               	movlw	132
  1078  0003A0  6E2B               	movwf	___ftmul@f2+1,c
  1079  0003A2  0E3E               	movlw	62
  1080  0003A4  6E2C               	movwf	___ftmul@f2+2,c
  1081  0003A6  EC7B  F005         	call	___ftmul	;wreg free
  1082  0003AA  C027  F0EE         	movff	?___ftmul,_systolicPressure
  1083  0003AE  C028  F0EF         	movff	?___ftmul+1,_systolicPressure+1
  1084  0003B2  C029  F0F0         	movff	?___ftmul+2,_systolicPressure+2
  1085                           
  1086                           ;test.c: 158: UART_Write(sysPointer);
  1087  0003B6  C089  F019         	movff	_sysPointer,UART_Write@info
  1088  0003BA  C08A  F01A         	movff	_sysPointer+1,UART_Write@info+1
  1089  0003BE  EC94  F007         	call	_UART_Write	;wreg free
  1090                           
  1091                           ;test.c: 159: printData(systolicPressure);
  1092  0003C2  C0EE  F100         	movff	_systolicPressure,printData@data
  1093  0003C6  C0EF  F101         	movff	_systolicPressure+1,printData@data+1
  1094  0003CA  C0F0  F102         	movff	_systolicPressure+2,printData@data+2
  1095  0003CE  EC30  F003         	call	_printData	;wreg free
  1096                           
  1097                           ;test.c: 160: appendUnits();
  1098  0003D2  ECF3  F007         	call	_appendUnits	;wreg free
  1099                           
  1100                           ;test.c: 161: printNewLine();
  1101  0003D6  ECCB  F008         	call	_printNewLine	;wreg free
  1102                           
  1103                           ;test.c: 162: adcPrev = 1000;
  1104  0003DA  0E03               	movlw	3
  1105  0003DC  6E6C               	movwf	_adcPrev+1,c
  1106  0003DE  0EE8               	movlw	232
  1107  0003E0  6E6B               	movwf	_adcPrev,c
  1108                           
  1109                           ;test.c: 163: count = 0;
  1110  0003E2  0E00               	movlw	0
  1111  0003E4  6E60               	movwf	_count+1,c
  1112  0003E6  0E00               	movlw	0
  1113  0003E8  6E5F               	movwf	_count,c
  1114                           
  1115                           ;test.c: 164: state = 3;
  1116  0003EA  0E00               	movlw	0
  1117  0003EC  6E62               	movwf	_state+1,c
  1118  0003EE  0E03               	movlw	3
  1119  0003F0  6E61               	movwf	_state,c
  1120  0003F2                     l146:
  1121                           
  1122                           ;test.c: 166: }
  1123                           ;test.c: 167: if (state ==3)
  1124  0003F2  0E03               	movlw	3
  1125  0003F4  1861               	xorwf	_state,w,c
  1126  0003F6  1062               	iorwf	_state+1,w,c
  1127  0003F8  B4D8               	btfsc	status,2,c
  1128  0003FA  D05D               	goto	l148
  1129  0003FC  D0D2               	goto	l147
  1130  0003FE                     
  1131                           ;test.c: 173: {
  1132                           ;test.c: 174: adcData = adcReadChannel(0);
  1133  0003FE  0E00               	movlw	0
  1134  000400  ECBF  F006         	call	_adcReadChannel
  1135  000404  C013  F069         	movff	?_adcReadChannel,_adcData
  1136  000408  C014  F06A         	movff	?_adcReadChannel+1,_adcData+1
  1137                           
  1138                           ;test.c: 175: if (adcPrev < 0x200 && adcData > 0x200 && count ==0)
  1139  00040C  BE6C               	btfsc	_adcPrev+1,7,c
  1140  00040E  D004               	goto	u2910
  1141  000410  0E02               	movlw	2
  1142  000412  5C6C               	subwf	_adcPrev+1,w,c
  1143  000414  B0D8               	btfsc	status,0,c
  1144  000416  D014               	goto	l150
  1145  000418                     u2910:
  1146  000418  BE6A               	btfsc	_adcData+1,7,c
  1147  00041A  D012               	goto	l150
  1148  00041C  0469               	decf	_adcData,w,c
  1149  00041E  0E02               	movlw	2
  1150  000420  586A               	subwfb	_adcData+1,w,c
  1151  000422  A0D8               	btfss	status,0,c
  1152  000424  D00D               	goto	l150
  1153  000426  505F               	movf	_count,w,c
  1154  000428  1060               	iorwf	_count+1,w,c
  1155  00042A  A4D8               	btfss	status,2,c
  1156  00042C  D009               	goto	l150
  1157                           
  1158                           ;test.c: 176: {
  1159                           ;test.c: 177: count=1;
  1160  00042E  0E00               	movlw	0
  1161  000430  6E60               	movwf	_count+1,c
  1162  000432  0E01               	movlw	1
  1163  000434  6E5F               	movwf	_count,c
  1164                           
  1165                           ;test.c: 178: TMR0H = 0x00;
  1166  000436  0E00               	movlw	0
  1167  000438  6ED7               	movwf	4055,c	;volatile
  1168                           
  1169                           ;test.c: 179: TMR0L = 0x00;
  1170  00043A  0E00               	movlw	0
  1171  00043C  6ED6               	movwf	4054,c	;volatile
  1172                           
  1173                           ;test.c: 180: T0CONbits.TMR0ON = 1;
  1174  00043E  8ED5               	bsf	4053,7,c	;volatile
  1175  000440                     l150:
  1176                           
  1177                           ;test.c: 181: }
  1178                           ;test.c: 182: if (adcPrev < 0x200 && adcData > 0x200 && count ==1)
  1179  000440  BE6C               	btfsc	_adcPrev+1,7,c
  1180  000442  D004               	goto	u2940
  1181  000444  0E02               	movlw	2
  1182  000446  5C6C               	subwf	_adcPrev+1,w,c
  1183  000448  B0D8               	btfsc	status,0,c
  1184  00044A  D031               	goto	l152
  1185  00044C                     u2940:
  1186  00044C  BE6A               	btfsc	_adcData+1,7,c
  1187  00044E  D02F               	goto	l152
  1188  000450  0469               	decf	_adcData,w,c
  1189  000452  0E02               	movlw	2
  1190  000454  586A               	subwfb	_adcData+1,w,c
  1191  000456  A0D8               	btfss	status,0,c
  1192  000458  D02A               	goto	l152
  1193  00045A  045F               	decf	_count,w,c
  1194  00045C  1060               	iorwf	_count+1,w,c
  1195  00045E  A4D8               	btfss	status,2,c
  1196  000460  D026               	goto	l152
  1197                           
  1198                           ;test.c: 183: {
  1199                           ;test.c: 184: T0CONbits.TMR0ON = 0;
  1200  000462  9ED5               	bcf	4053,7,c	;volatile
  1201                           
  1202                           ;test.c: 185: timerInt = (TMR0H*256)+TMR0L;
  1203  000464  50D7               	movf	4055,w,c	;volatile
  1204  000466  0101               	movlb	1	; () banked
  1205  000468  6F08               	movwf	(??_main+1)& (0+255),b
  1206  00046A  6B07               	clrf	??_main& (0+255),b
  1207  00046C  50D6               	movf	4054,w,c	;volatile
  1208  00046E  2507               	addwf	??_main& (0+255),w,b
  1209  000470  6E65               	movwf	_timerInt,c
  1210  000472  0E00               	movlw	0
  1211  000474  2108               	addwfc	(??_main+1)& (0+255),w,b
  1212  000476  6E66               	movwf	_timerInt+1,c
  1213                           
  1214                           ;test.c: 186: timerComp = timerInt + timerComp;
  1215  000478  5065               	movf	_timerInt,w,c
  1216  00047A  0100               	movlb	0	; () banked
  1217  00047C  25E4               	addwf	_timerComp& (0+255),w,b
  1218  00047E  6FE4               	movwf	_timerComp& (0+255),b
  1219  000480  5066               	movf	_timerInt+1,w,c
  1220  000482  21E5               	addwfc	(_timerComp+1)& (0+255),w,b
  1221  000484  6FE5               	movwf	(_timerComp+1)& (0+255),b
  1222  000486  0E00               	movlw	0
  1223  000488  21E6               	addwfc	(_timerComp+2)& (0+255),w,b
  1224  00048A  6FE6               	movwf	(_timerComp+2)& (0+255),b
  1225  00048C  0E00               	movlw	0
  1226  00048E  21E7               	addwfc	(_timerComp+3)& (0+255),w,b
  1227  000490  6FE7               	movwf	(_timerComp+3)& (0+255),b
  1228                           
  1229                           ; BSR set to: 0
  1230                           ;test.c: 187: TMR0H = 0x00;
  1231  000492  0E00               	movlw	0
  1232  000494  6ED7               	movwf	4055,c	;volatile
  1233                           
  1234                           ; BSR set to: 0
  1235                           ;test.c: 188: TMR0L = 0x00;
  1236  000496  0E00               	movlw	0
  1237  000498  6ED6               	movwf	4054,c	;volatile
  1238                           
  1239                           ; BSR set to: 0
  1240                           ;test.c: 189: avgCount++;
  1241  00049A  4A5D               	infsnz	_avgCount,f,c
  1242  00049C  2A5E               	incf	_avgCount+1,f,c
  1243                           
  1244                           ; BSR set to: 0
  1245                           ;test.c: 190: if(avgCount<8)
  1246  00049E  BE5E               	btfsc	_avgCount+1,7,c
  1247  0004A0  D005               	goto	u2970
  1248  0004A2  505E               	movf	_avgCount+1,w,c
  1249  0004A4  E104               	bnz	l151
  1250  0004A6  0E08               	movlw	8
  1251  0004A8  5C5D               	subwf	_avgCount,w,c
  1252  0004AA  A0D8               	btfss	status,0,c
  1253  0004AC                     u2970:
  1254                           
  1255                           ; BSR set to: 0
  1256                           ;test.c: 191: {
  1257                           ;test.c: 192: T0CONbits.TMR0ON = 1;
  1258  0004AC  8ED5               	bsf	4053,7,c	;volatile
  1259  0004AE                     l152:
  1260  0004AE                     l151:
  1261                           
  1262                           ;test.c: 193: }
  1263                           ;test.c: 194: }
  1264                           ;test.c: 196: adcPrev = adcData;
  1265  0004AE  C069  F06B         	movff	_adcData,_adcPrev
  1266  0004B2  C06A  F06C         	movff	_adcData+1,_adcPrev+1
  1267  0004B6                     l148:
  1268  0004B6  BE5E               	btfsc	_avgCount+1,7,c
  1269  0004B8  D7A2               	goto	l149
  1270  0004BA  505E               	movf	_avgCount+1,w,c
  1271  0004BC  E104               	bnz	l2715
  1272  0004BE  0E08               	movlw	8
  1273  0004C0  5C5D               	subwf	_avgCount,w,c
  1274  0004C2  A0D8               	btfss	status,0,c
  1275  0004C4  D79C               	goto	l149
  1276  0004C6                     l2715:
  1277                           
  1278                           ;test.c: 197: }
  1279                           ;test.c: 198: bpm = ((timerComp*0.000032)/8)*60;
  1280  0004C6  0E00               	movlw	0
  1281  0004C8  6E39               	movwf	___ftdiv@f2,c
  1282  0004CA  0E00               	movlw	0
  1283  0004CC  6E3A               	movwf	___ftdiv@f2+1,c
  1284  0004CE  0E41               	movlw	65
  1285  0004D0  6E3B               	movwf	___ftdiv@f2+2,c
  1286  0004D2  0E38               	movlw	56
  1287  0004D4  6E2A               	movwf	___ftmul@f2,c
  1288  0004D6  0E06               	movlw	6
  1289  0004D8  6E2B               	movwf	___ftmul@f2+1,c
  1290  0004DA  0E38               	movlw	56
  1291  0004DC  6E2C               	movwf	___ftmul@f2+2,c
  1292  0004DE  C0E4  F01B         	movff	_timerComp,___lltoft@c
  1293  0004E2  C0E5  F01C         	movff	_timerComp+1,___lltoft@c+1
  1294  0004E6  C0E6  F01D         	movff	_timerComp+2,___lltoft@c+2
  1295  0004EA  C0E7  F01E         	movff	_timerComp+3,___lltoft@c+3
  1296  0004EE  EC50  F008         	call	___lltoft	;wreg free
  1297  0004F2  C01B  F027         	movff	?___lltoft,___ftmul@f1
  1298  0004F6  C01C  F028         	movff	?___lltoft+1,___ftmul@f1+1
  1299  0004FA  C01D  F029         	movff	?___lltoft+2,___ftmul@f1+2
  1300  0004FE  EC7B  F005         	call	___ftmul	;wreg free
  1301  000502  C027  F036         	movff	?___ftmul,___ftdiv@f1
  1302  000506  C028  F037         	movff	?___ftmul+1,___ftdiv@f1+1
  1303  00050A  C029  F038         	movff	?___ftmul+2,___ftdiv@f1+2
  1304  00050E  ECF5  F005         	call	___ftdiv	;wreg free
  1305  000512  C036  F10B         	movff	?___ftdiv,_main$1526
  1306  000516  C037  F10C         	movff	?___ftdiv+1,_main$1526+1
  1307  00051A  C038  F10D         	movff	?___ftdiv+2,_main$1526+2
  1308                           
  1309                           ;test.c: 197: }
  1310                           ;test.c: 198: bpm = ((timerComp*0.000032)/8)*60;
  1311  00051E  0E00               	movlw	0
  1312  000520  6E2A               	movwf	___ftmul@f2,c
  1313  000522  0E70               	movlw	112
  1314  000524  6E2B               	movwf	___ftmul@f2+1,c
  1315  000526  0E42               	movlw	66
  1316  000528  6E2C               	movwf	___ftmul@f2+2,c
  1317  00052A  C10B  F027         	movff	_main$1526,___ftmul@f1
  1318  00052E  C10C  F028         	movff	_main$1526+1,___ftmul@f1+1
  1319  000532  C10D  F029         	movff	_main$1526+2,___ftmul@f1+2
  1320  000536  EC7B  F005         	call	___ftmul	;wreg free
  1321  00053A  C027  F045         	movff	?___ftmul,___fttol@f1
  1322  00053E  C028  F046         	movff	?___ftmul+1,___fttol@f1+1
  1323  000542  C029  F047         	movff	?___ftmul+2,___fttol@f1+2
  1324  000546  EC01  F005         	call	___fttol	;wreg free
  1325  00054A  C045  F0E0         	movff	?___fttol,_bpm
  1326  00054E  C046  F0E1         	movff	?___fttol+1,_bpm+1
  1327  000552  C047  F0E2         	movff	?___fttol+2,_bpm+2
  1328  000556  C048  F0E3         	movff	?___fttol+3,_bpm+3
  1329                           
  1330                           ;test.c: 200: UART_Write(bpmPointer);
  1331  00055A  C087  F019         	movff	_bpmPointer,UART_Write@info
  1332  00055E  C088  F01A         	movff	_bpmPointer+1,UART_Write@info+1
  1333  000562  EC94  F007         	call	_UART_Write	;wreg free
  1334                           
  1335                           ;test.c: 201: heartFloat = (float)bpm;
  1336  000566  C0E0  F01B         	movff	_bpm,___lltoft@c
  1337  00056A  C0E1  F01C         	movff	_bpm+1,___lltoft@c+1
  1338  00056E  C0E2  F01D         	movff	_bpm+2,___lltoft@c+2
  1339  000572  C0E3  F01E         	movff	_bpm+3,___lltoft@c+3
  1340  000576  EC50  F008         	call	___lltoft	;wreg free
  1341  00057A  C01B  F0EB         	movff	?___lltoft,_heartFloat
  1342  00057E  C01C  F0EC         	movff	?___lltoft+1,_heartFloat+1
  1343  000582  C01D  F0ED         	movff	?___lltoft+2,_heartFloat+2
  1344                           
  1345                           ;test.c: 202: printData(heartFloat);
  1346  000586  C0EB  F100         	movff	_heartFloat,printData@data
  1347  00058A  C0EC  F101         	movff	_heartFloat+1,printData@data+1
  1348  00058E  C0ED  F102         	movff	_heartFloat+2,printData@data+2
  1349  000592  EC30  F003         	call	_printData	;wreg free
  1350                           
  1351                           ;test.c: 203: printNewLine();
  1352  000596  ECCB  F008         	call	_printNewLine	;wreg free
  1353                           
  1354                           ;test.c: 204: state = 4;
  1355  00059A  0E00               	movlw	0
  1356  00059C  6E62               	movwf	_state+1,c
  1357  00059E  0E04               	movlw	4
  1358  0005A0  6E61               	movwf	_state,c
  1359  0005A2                     l147:
  1360                           
  1361                           ;test.c: 205: }
  1362                           ;test.c: 206: if(state ==4)
  1363  0005A2  0E04               	movlw	4
  1364  0005A4  1861               	xorwf	_state,w,c
  1365  0005A6  1062               	iorwf	_state+1,w,c
  1366  0005A8  A4D8               	btfss	status,2,c
  1367  0005AA  D659               	goto	l139
  1368                           
  1369                           ;test.c: 207: {
  1370                           ;test.c: 208: _delay((unsigned long)((1593)*(8000000/4000.0)));
  1371  0005AC  0E11               	movlw	17
  1372  0005AE  0101               	movlb	1	; () banked
  1373  0005B0  6F08               	movwf	(??_main+1)& (0+255),b
  1374  0005B2  0E2A               	movlw	42
  1375  0005B4  6F07               	movwf	??_main& (0+255),b
  1376  0005B6  0E9C               	movlw	156
  1377  0005B8                     u3027:
  1378  0005B8  2EE8               	decfsz	wreg,f,c
  1379  0005BA  D7FE               	bra	u3027
  1380  0005BC  2F07               	decfsz	??_main& (0+255),f,b
  1381  0005BE  D7FC               	bra	u3027
  1382  0005C0  2F08               	decfsz	(??_main+1)& (0+255),f,b
  1383  0005C2  D7FA               	bra	u3027
  1384  0005C4  F000               	nop	
  1385                           
  1386                           ;test.c: 209: diastolicPressure = ((float)MAP-0x14F)*0.16775;
  1387  0005C6  0E80               	movlw	128
  1388  0005C8  6E1E               	movwf	___ftadd@f2,c
  1389  0005CA  0EA7               	movlw	167
  1390  0005CC  6E1F               	movwf	___ftadd@f2+1,c
  1391  0005CE  0EC3               	movlw	195
  1392  0005D0  6E20               	movwf	___ftadd@f2+2,c
  1393  0005D2  C05A  F01B         	movff	_MAP,___ftadd@f1
  1394  0005D6  C05B  F01C         	movff	_MAP+1,___ftadd@f1+1
  1395  0005DA  C05C  F01D         	movff	_MAP+2,___ftadd@f1+2
  1396  0005DE  EC2B  F004         	call	___ftadd	;wreg free
  1397  0005E2  C01B  F027         	movff	?___ftadd,___ftmul@f1
  1398  0005E6  C01C  F028         	movff	?___ftadd+1,___ftmul@f1+1
  1399  0005EA  C01D  F029         	movff	?___ftadd+2,___ftmul@f1+2
  1400  0005EE  0EC7               	movlw	199
  1401  0005F0  6E2A               	movwf	___ftmul@f2,c
  1402  0005F2  0E2B               	movlw	43
  1403  0005F4  6E2B               	movwf	___ftmul@f2+1,c
  1404  0005F6  0E3E               	movlw	62
  1405  0005F8  6E2C               	movwf	___ftmul@f2+2,c
  1406  0005FA  EC7B  F005         	call	___ftmul	;wreg free
  1407  0005FE  C027  F0E8         	movff	?___ftmul,_diastolicPressure
  1408  000602  C028  F0E9         	movff	?___ftmul+1,_diastolicPressure+1
  1409  000606  C029  F0EA         	movff	?___ftmul+2,_diastolicPressure+2
  1410                           
  1411                           ;test.c: 210: UART_Write(diasPointer);
  1412  00060A  C08B  F019         	movff	_diasPointer,UART_Write@info
  1413  00060E  C08C  F01A         	movff	_diasPointer+1,UART_Write@info+1
  1414  000612  EC94  F007         	call	_UART_Write	;wreg free
  1415                           
  1416                           ;test.c: 211: printData(diastolicPressure);
  1417  000616  C0E8  F100         	movff	_diastolicPressure,printData@data
  1418  00061A  C0E9  F101         	movff	_diastolicPressure+1,printData@data+1
  1419  00061E  C0EA  F102         	movff	_diastolicPressure+2,printData@data+2
  1420  000622  EC30  F003         	call	_printData	;wreg free
  1421                           
  1422                           ;test.c: 212: appendUnits();
  1423  000626  ECF3  F007         	call	_appendUnits	;wreg free
  1424                           
  1425                           ;test.c: 213: printNewLine();
  1426  00062A  ECCB  F008         	call	_printNewLine	;wreg free
  1427                           
  1428                           ;test.c: 214: count = 0;
  1429  00062E  0E00               	movlw	0
  1430  000630  6E60               	movwf	_count+1,c
  1431  000632  0E00               	movlw	0
  1432  000634  6E5F               	movwf	_count,c
  1433                           
  1434                           ;test.c: 216: UART_Write("Finish!\r\n");
  1435  000636  0E1A               	movlw	low STR_1
  1436  000638  6E19               	movwf	UART_Write@info,c
  1437  00063A  0E02               	movlw	high STR_1
  1438  00063C  6E1A               	movwf	UART_Write@info+1,c
  1439  00063E  EC94  F007         	call	_UART_Write	;wreg free
  1440                           
  1441                           ;test.c: 217: UART_Write("Press 1 to start over!\r\n");
  1442  000642  0E01               	movlw	low STR_2
  1443  000644  6E19               	movwf	UART_Write@info,c
  1444  000646  0E02               	movlw	high STR_2
  1445  000648  6E1A               	movwf	UART_Write@info+1,c
  1446  00064A  EC94  F007         	call	_UART_Write	;wreg free
  1447  00064E                     
  1448                           ;test.c: 219: if (RCREG == 0x31)
  1449  00064E  0E31               	movlw	49
  1450  000650  18AE               	xorwf	4014,w,c	;volatile
  1451  000652  A4D8               	btfss	status,2,c
  1452  000654  D7FC               	goto	l155
  1453                           
  1454                           ;test.c: 220: {
  1455                           ;test.c: 221: state = 0;
  1456  000656  0E00               	movlw	0
  1457  000658  6E62               	movwf	_state+1,c
  1458  00065A  0E00               	movlw	0
  1459  00065C  6E61               	movwf	_state,c
  1460  00065E  D7F7               	goto	l155
  1461  000660                     __end_of_main:
  1462                           	opt stack 0
  1463                           tblptru	equ	0xFF8
  1464                           tblptrh	equ	0xFF7
  1465                           tblptrl	equ	0xFF6
  1466                           tablat	equ	0xFF5
  1467                           postinc0	equ	0xFEE
  1468                           wreg	equ	0xFE8
  1469                           postdec1	equ	0xFE5
  1470                           fsr1l	equ	0xFE1
  1471                           status	equ	0xFD8
  1472                           
  1473 ;; *************** function _timerConfig *****************
  1474 ;; Defined at:
  1475 ;;		line 306 in file "test.c"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;		None
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;		None
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      void 
  1482 ;; Registers used:
  1483 ;;		wreg, status,2
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMRAM   BANK0   BANK1
  1489 ;;      Params:         0       0       0
  1490 ;;      Locals:         0       0       0
  1491 ;;      Temps:          0       0       0
  1492 ;;      Totals:         0       0       0
  1493 ;;Total ram usage:        0 bytes
  1494 ;; Hardware stack levels used:    1
  1495 ;; Hardware stack levels required when called:    1
  1496 ;; This function calls:
  1497 ;;		Nothing
  1498 ;; This function is called by:
  1499 ;;		_main
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           	psect	text1
  1504  001174                     __ptext1:
  1505                           	opt stack 0
  1506  001174                     _timerConfig:
  1507                           	opt stack 29
  1508                           
  1509                           ;test.c: 308: T0CON = 0;
  1510                           
  1511                           ;incstack = 0
  1512  001174  0E00               	movlw	0
  1513  001176  6ED5               	movwf	4053,c	;volatile
  1514                           
  1515                           ;test.c: 309: T0CONbits.PSA = 1;
  1516  001178  86D5               	bsf	4053,3,c	;volatile
  1517                           
  1518                           ;test.c: 310: TMR0H = 0x00;
  1519  00117A  0E00               	movlw	0
  1520  00117C  6ED7               	movwf	4055,c	;volatile
  1521                           
  1522                           ;test.c: 311: TMR0L = 0x00;
  1523  00117E  0E00               	movlw	0
  1524  001180  6ED6               	movwf	4054,c	;volatile
  1525                           
  1526                           ;test.c: 313: INTCONbits.TMR0IE =0;
  1527  001182  9AF2               	bcf	intcon,5,c	;volatile
  1528                           
  1529                           ;test.c: 314: INTCONbits.TMR0IF = 0;
  1530  001184  94F2               	bcf	intcon,2,c	;volatile
  1531                           
  1532                           ;test.c: 316: RCONbits.IPEN = 1;
  1533  001186  8ED0               	bsf	4048,7,c	;volatile
  1534                           
  1535                           ;test.c: 317: T0CONbits.T08BIT = 0;
  1536  001188  9CD5               	bcf	4053,6,c	;volatile
  1537                           
  1538                           ;test.c: 318: T0CONbits.T0CS = 0;
  1539  00118A  9AD5               	bcf	4053,5,c	;volatile
  1540                           
  1541                           ;test.c: 320: T0CONbits.PSA = 0;
  1542  00118C  96D5               	bcf	4053,3,c	;volatile
  1543                           
  1544                           ;test.c: 321: T0CONbits.T0PS2 = 0;
  1545  00118E  94D5               	bcf	4053,2,c	;volatile
  1546                           
  1547                           ;test.c: 322: T0CONbits.T0PS1 = 1;
  1548  001190  82D5               	bsf	4053,1,c	;volatile
  1549                           
  1550                           ;test.c: 323: T0CONbits.T0PS0 = 0;
  1551  001192  90D5               	bcf	4053,0,c	;volatile
  1552  001194  0012               	return		;funcret
  1553  001196                     __end_of_timerConfig:
  1554                           	opt stack 0
  1555                           tblptru	equ	0xFF8
  1556                           tblptrh	equ	0xFF7
  1557                           tblptrl	equ	0xFF6
  1558                           tablat	equ	0xFF5
  1559                           intcon	equ	0xFF2
  1560                           postinc0	equ	0xFEE
  1561                           wreg	equ	0xFE8
  1562                           postdec1	equ	0xFE5
  1563                           fsr1l	equ	0xFE1
  1564                           status	equ	0xFD8
  1565                           
  1566 ;; *************** function _printNewLine *****************
  1567 ;; Defined at:
  1568 ;;		line 237 in file "test.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;		None
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;		None
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  1    wreg      void 
  1575 ;; Registers used:
  1576 ;;		wreg, status,2, cstack
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMRAM   BANK0   BANK1
  1582 ;;      Params:         0       0       0
  1583 ;;      Locals:         0       0       0
  1584 ;;      Temps:          0       0       0
  1585 ;;      Totals:         0       0       0
  1586 ;;Total ram usage:        0 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; Hardware stack levels required when called:    2
  1589 ;; This function calls:
  1590 ;;		_UART_TX_Busy
  1591 ;; This function is called by:
  1592 ;;		_main
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           	psect	text2
  1597  001196                     __ptext2:
  1598                           	opt stack 0
  1599  001196                     _printNewLine:
  1600                           	opt stack 28
  1601                           
  1602                           ;test.c: 239: while (UART_TX_Busy());
  1603                           
  1604                           ;incstack = 0
  1605  001196  ECF4  F008         	call	_UART_TX_Busy	;wreg free
  1606  00119A  0900               	iorlw	0
  1607  00119C  A4D8               	btfss	status,2,c
  1608  00119E  D7FB               	goto	_printNewLine
  1609                           
  1610                           ;test.c: 240: TXREG = 0x0A;
  1611  0011A0  0E0A               	movlw	10
  1612  0011A2  6EAD               	movwf	4013,c	;volatile
  1613  0011A4  ECF4  F008         	call	_UART_TX_Busy	;wreg free
  1614  0011A8  0900               	iorlw	0
  1615  0011AA  A4D8               	btfss	status,2,c
  1616  0011AC  D7FB               	goto	l182
  1617                           
  1618                           ;test.c: 242: TXREG = 0x0D;
  1619  0011AE  0E0D               	movlw	13
  1620  0011B0  6EAD               	movwf	4013,c	;volatile
  1621  0011B2  0012               	return		;funcret
  1622  0011B4                     __end_of_printNewLine:
  1623                           	opt stack 0
  1624                           tblptru	equ	0xFF8
  1625                           tblptrh	equ	0xFF7
  1626                           tblptrl	equ	0xFF6
  1627                           tablat	equ	0xFF5
  1628                           intcon	equ	0xFF2
  1629                           postinc0	equ	0xFEE
  1630                           wreg	equ	0xFE8
  1631                           postdec1	equ	0xFE5
  1632                           fsr1l	equ	0xFE1
  1633                           status	equ	0xFD8
  1634                           
  1635 ;; *************** function _printData *****************
  1636 ;; Defined at:
  1637 ;;		line 244 in file "test.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;  data            3    0[BANK1 ] float 
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;  sender          2   87[COMRAM] int 
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  1    wreg      void 
  1644 ;; Registers used:
  1645 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMRAM   BANK0   BANK1
  1651 ;;      Params:         0       0       3
  1652 ;;      Locals:         2       0       0
  1653 ;;      Temps:          0       0       4
  1654 ;;      Totals:         2       0       7
  1655 ;;Total ram usage:        9 bytes
  1656 ;; Hardware stack levels used:    1
  1657 ;; Hardware stack levels required when called:    2
  1658 ;; This function calls:
  1659 ;;		_UART_TX_Busy
  1660 ;;		___awdiv
  1661 ;;		___ftge
  1662 ;;		___fttol
  1663 ;;		___wmul
  1664 ;; This function is called by:
  1665 ;;		_main
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           
  1669                           	psect	text3
  1670  000660                     __ptext3:
  1671                           	opt stack 0
  1672  000660                     _printData:
  1673                           	opt stack 28
  1674                           
  1675                           ;test.c: 246: int sender = 0;
  1676                           
  1677                           ;incstack = 0
  1678  000660  0E00               	movlw	0
  1679  000662  6E59               	movwf	printData@sender+1,c
  1680  000664  0E00               	movlw	0
  1681  000666  6E58               	movwf	printData@sender,c
  1682                           
  1683                           ;test.c: 247: if (data>100 && data<200)
  1684  000668  0E00               	movlw	0
  1685  00066A  6E13               	movwf	___ftge@ff1,c
  1686  00066C  0EC8               	movlw	200
  1687  00066E  6E14               	movwf	___ftge@ff1+1,c
  1688  000670  0E42               	movlw	66
  1689  000672  6E15               	movwf	___ftge@ff1+2,c
  1690  000674  C100  F016         	movff	printData@data,___ftge@ff2
  1691  000678  C101  F017         	movff	printData@data+1,___ftge@ff2+1
  1692  00067C  C102  F018         	movff	printData@data+2,___ftge@ff2+2
  1693  000680  EC09  F007         	call	___ftge	;wreg free
  1694  000684  B0D8               	btfsc	status,0,c
  1695  000686  D07B               	goto	l187
  1696  000688  C100  F013         	movff	printData@data,___ftge@ff1
  1697  00068C  C101  F014         	movff	printData@data+1,___ftge@ff1+1
  1698  000690  C102  F015         	movff	printData@data+2,___ftge@ff1+2
  1699  000694  0E00               	movlw	0
  1700  000696  6E16               	movwf	___ftge@ff2,c
  1701  000698  0E48               	movlw	72
  1702  00069A  6E17               	movwf	___ftge@ff2+1,c
  1703  00069C  0E43               	movlw	67
  1704  00069E  6E18               	movwf	___ftge@ff2+2,c
  1705  0006A0  EC09  F007         	call	___ftge	;wreg free
  1706  0006A4  B0D8               	btfsc	status,0,c
  1707  0006A6  D06B               	goto	l187
  1708                           
  1709                           ;test.c: 248: {
  1710                           ;test.c: 249: sender = ((int)data/100);
  1711  0006A8  C100  F045         	movff	printData@data,___fttol@f1
  1712  0006AC  C101  F046         	movff	printData@data+1,___fttol@f1+1
  1713  0006B0  C102  F047         	movff	printData@data+2,___fttol@f1+2
  1714  0006B4  EC01  F005         	call	___fttol	;wreg free
  1715  0006B8  C045  F054         	movff	?___fttol,___awdiv@dividend
  1716  0006BC  C046  F055         	movff	?___fttol+1,___awdiv@dividend+1
  1717  0006C0  0E00               	movlw	0
  1718  0006C2  6E57               	movwf	___awdiv@divisor+1,c
  1719  0006C4  0E64               	movlw	100
  1720  0006C6  6E56               	movwf	___awdiv@divisor,c
  1721  0006C8  EC51  F007         	call	___awdiv	;wreg free
  1722  0006CC  C054  F058         	movff	?___awdiv,printData@sender
  1723  0006D0  C055  F059         	movff	?___awdiv+1,printData@sender+1
  1724  0006D4  ECF4  F008         	call	_UART_TX_Busy	;wreg free
  1725  0006D8  0900               	iorlw	0
  1726  0006DA  A4D8               	btfss	status,2,c
  1727  0006DC  D7FB               	goto	l189
  1728                           
  1729                           ;test.c: 251: TXREG = (int)sender + 0x30;
  1730  0006DE  5058               	movf	printData@sender,w,c
  1731  0006E0  0F30               	addlw	48
  1732  0006E2  6EAD               	movwf	4013,c	;volatile
  1733                           
  1734                           ;test.c: 252: sender = (int)(((int)data -100)/10);
  1735  0006E4  C100  F045         	movff	printData@data,___fttol@f1
  1736  0006E8  C101  F046         	movff	printData@data+1,___fttol@f1+1
  1737  0006EC  C102  F047         	movff	printData@data+2,___fttol@f1+2
  1738  0006F0  EC01  F005         	call	___fttol	;wreg free
  1739  0006F4  0E9C               	movlw	156
  1740  0006F6  2445               	addwf	?___fttol,w,c
  1741  0006F8  6E54               	movwf	___awdiv@dividend,c
  1742  0006FA  0EFF               	movlw	255
  1743  0006FC  2046               	addwfc	?___fttol+1,w,c
  1744  0006FE  6E55               	movwf	___awdiv@dividend+1,c
  1745  000700  0E00               	movlw	0
  1746  000702  6E57               	movwf	___awdiv@divisor+1,c
  1747  000704  0E0A               	movlw	10
  1748  000706  6E56               	movwf	___awdiv@divisor,c
  1749  000708  EC51  F007         	call	___awdiv	;wreg free
  1750  00070C  C054  F058         	movff	?___awdiv,printData@sender
  1751  000710  C055  F059         	movff	?___awdiv+1,printData@sender+1
  1752  000714  ECF4  F008         	call	_UART_TX_Busy	;wreg free
  1753  000718  0900               	iorlw	0
  1754  00071A  A4D8               	btfss	status,2,c
  1755  00071C  D7FB               	goto	l192
  1756                           
  1757                           ;test.c: 254: TXREG =(int)sender + 0x30;
  1758  00071E  5058               	movf	printData@sender,w,c
  1759  000720  0F30               	addlw	48
  1760  000722  6EAD               	movwf	4013,c	;volatile
  1761                           
  1762                           ;test.c: 255: sender = ((int)data - 100 -(sender*10));
  1763  000724  C100  F045         	movff	printData@data,___fttol@f1
  1764  000728  C101  F046         	movff	printData@data+1,___fttol@f1+1
  1765  00072C  C102  F047         	movff	printData@data+2,___fttol@f1+2
  1766  000730  EC01  F005         	call	___fttol	;wreg free
  1767  000734  C045  F103         	movff	?___fttol,??_printData
  1768  000738  C046  F104         	movff	?___fttol+1,??_printData+1
  1769  00073C  C047  F105         	movff	?___fttol+2,??_printData+2
  1770  000740  C048  F106         	movff	?___fttol+3,??_printData+3
  1771  000744  C058  F013         	movff	printData@sender,___wmul@multiplier
  1772  000748  C059  F014         	movff	printData@sender+1,___wmul@multiplier+1
  1773  00074C  0E00               	movlw	0
  1774  00074E  6E16               	movwf	___wmul@multiplicand+1,c
  1775  000750  0E0A               	movlw	10
  1776  000752  6E15               	movwf	___wmul@multiplicand,c
  1777  000754  ECA7  F008         	call	___wmul	;wreg free
  1778  000758  1E13               	comf	?___wmul,f,c
  1779  00075A  1E14               	comf	?___wmul+1,f,c
  1780  00075C  4A13               	infsnz	?___wmul,f,c
  1781  00075E  2A14               	incf	?___wmul+1,f,c
  1782  000760  5013               	movf	?___wmul,w,c
  1783  000762  0101               	movlb	1	; () banked
  1784  000764  2703               	addwf	??_printData& (0+255),f,b
  1785  000766  5014               	movf	?___wmul+1,w,c
  1786  000768  2304               	addwfc	(??_printData+1)& (0+255),f,b
  1787  00076A  0E9C               	movlw	156
  1788  00076C  2503               	addwf	??_printData& (0+255),w,b
  1789  00076E  6E58               	movwf	printData@sender,c
  1790  000770  0EFF               	movlw	255
  1791  000772  2104               	addwfc	(??_printData+1)& (0+255),w,b
  1792  000774  6E59               	movwf	printData@sender+1,c
  1793                           
  1794                           ; BSR set to: 1
  1795                           ;test.c: 256: TXREG = (int)sender + 0x30;
  1796  000776  5058               	movf	printData@sender,w,c
  1797  000778  0F30               	addlw	48
  1798  00077A  6EAD               	movwf	4013,c	;volatile
  1799                           
  1800                           ;test.c: 257: }
  1801  00077C  0012               	return	
  1802  00077E                     l187:
  1803                           
  1804                           ;test.c: 258: else if(data<100 && data>0)
  1805                           
  1806                           ; BSR set to: 1
  1807  00077E  C100  F013         	movff	printData@data,___ftge@ff1
  1808  000782  C101  F014         	movff	printData@data+1,___ftge@ff1+1
  1809  000786  C102  F015         	movff	printData@data+2,___ftge@ff1+2
  1810  00078A  0E00               	movlw	0
  1811  00078C  6E16               	movwf	___ftge@ff2,c
  1812  00078E  0EC8               	movlw	200
  1813  000790  6E17               	movwf	___ftge@ff2+1,c
  1814  000792  0E42               	movlw	66
  1815  000794  6E18               	movwf	___ftge@ff2+2,c
  1816  000796  EC09  F007         	call	___ftge	;wreg free
  1817  00079A  B0D8               	btfsc	status,0,c
  1818  00079C  0012               	return	
  1819  00079E  0E00               	movlw	0
  1820  0007A0  6E13               	movwf	___ftge@ff1,c
  1821  0007A2  0E00               	movlw	0
  1822  0007A4  6E14               	movwf	___ftge@ff1+1,c
  1823  0007A6  0E00               	movlw	0
  1824  0007A8  6E15               	movwf	___ftge@ff1+2,c
  1825  0007AA  C100  F016         	movff	printData@data,___ftge@ff2
  1826  0007AE  C101  F017         	movff	printData@data+1,___ftge@ff2+1
  1827  0007B2  C102  F018         	movff	printData@data+2,___ftge@ff2+2
  1828  0007B6  EC09  F007         	call	___ftge	;wreg free
  1829  0007BA  B0D8               	btfsc	status,0,c
  1830  0007BC  0012               	return	
  1831                           
  1832                           ;test.c: 259: {
  1833                           ;test.c: 260: sender = ((int)data/10);
  1834  0007BE  C100  F045         	movff	printData@data,___fttol@f1
  1835  0007C2  C101  F046         	movff	printData@data+1,___fttol@f1+1
  1836  0007C6  C102  F047         	movff	printData@data+2,___fttol@f1+2
  1837  0007CA  EC01  F005         	call	___fttol	;wreg free
  1838  0007CE  C045  F054         	movff	?___fttol,___awdiv@dividend
  1839  0007D2  C046  F055         	movff	?___fttol+1,___awdiv@dividend+1
  1840  0007D6  0E00               	movlw	0
  1841  0007D8  6E57               	movwf	___awdiv@divisor+1,c
  1842  0007DA  0E0A               	movlw	10
  1843  0007DC  6E56               	movwf	___awdiv@divisor,c
  1844  0007DE  EC51  F007         	call	___awdiv	;wreg free
  1845  0007E2  C054  F058         	movff	?___awdiv,printData@sender
  1846  0007E6  C055  F059         	movff	?___awdiv+1,printData@sender+1
  1847  0007EA  ECF4  F008         	call	_UART_TX_Busy	;wreg free
  1848  0007EE  0900               	iorlw	0
  1849  0007F0  A4D8               	btfss	status,2,c
  1850  0007F2  D7FB               	goto	l197
  1851                           
  1852                           ;test.c: 262: TXREG =(int)sender + 0x30;
  1853  0007F4  5058               	movf	printData@sender,w,c
  1854  0007F6  0F30               	addlw	48
  1855  0007F8  6EAD               	movwf	4013,c	;volatile
  1856                           
  1857                           ;test.c: 263: sender = (int)data-(sender*10);
  1858  0007FA  C100  F045         	movff	printData@data,___fttol@f1
  1859  0007FE  C101  F046         	movff	printData@data+1,___fttol@f1+1
  1860  000802  C102  F047         	movff	printData@data+2,___fttol@f1+2
  1861  000806  EC01  F005         	call	___fttol	;wreg free
  1862  00080A  C045  F103         	movff	?___fttol,??_printData
  1863  00080E  C046  F104         	movff	?___fttol+1,??_printData+1
  1864  000812  C047  F105         	movff	?___fttol+2,??_printData+2
  1865  000816  C048  F106         	movff	?___fttol+3,??_printData+3
  1866  00081A  C058  F013         	movff	printData@sender,___wmul@multiplier
  1867  00081E  C059  F014         	movff	printData@sender+1,___wmul@multiplier+1
  1868  000822  0E00               	movlw	0
  1869  000824  6E16               	movwf	___wmul@multiplicand+1,c
  1870  000826  0E0A               	movlw	10
  1871  000828  6E15               	movwf	___wmul@multiplicand,c
  1872  00082A  ECA7  F008         	call	___wmul	;wreg free
  1873  00082E  1E13               	comf	?___wmul,f,c
  1874  000830  1E14               	comf	?___wmul+1,f,c
  1875  000832  4A13               	infsnz	?___wmul,f,c
  1876  000834  2A14               	incf	?___wmul+1,f,c
  1877  000836  5013               	movf	?___wmul,w,c
  1878  000838  0101               	movlb	1	; () banked
  1879  00083A  2503               	addwf	??_printData& (0+255),w,b
  1880  00083C  6E58               	movwf	printData@sender,c
  1881  00083E  5014               	movf	?___wmul+1,w,c
  1882  000840  2104               	addwfc	(??_printData+1)& (0+255),w,b
  1883  000842  6E59               	movwf	printData@sender+1,c
  1884  000844                     
  1885                           ; BSR set to: 1
  1886                           
  1887                           ; BSR set to: 1
  1888  000844  ECF4  F008         	call	_UART_TX_Busy	;wreg free
  1889  000848  0900               	iorlw	0
  1890  00084A  A4D8               	btfss	status,2,c
  1891  00084C  D7FB               	goto	l200
  1892                           
  1893                           ;test.c: 265: TXREG = (int)sender + 0x30;
  1894  00084E  5058               	movf	printData@sender,w,c
  1895  000850  0F30               	addlw	48
  1896  000852  6EAD               	movwf	4013,c	;volatile
  1897  000854  0012               	return	
  1898  000856                     __end_of_printData:
  1899                           	opt stack 0
  1900                           tblptru	equ	0xFF8
  1901                           tblptrh	equ	0xFF7
  1902                           tblptrl	equ	0xFF6
  1903                           tablat	equ	0xFF5
  1904                           intcon	equ	0xFF2
  1905                           postinc0	equ	0xFEE
  1906                           wreg	equ	0xFE8
  1907                           postdec1	equ	0xFE5
  1908                           fsr1l	equ	0xFE1
  1909                           status	equ	0xFD8
  1910                           
  1911 ;; *************** function ___wmul *****************
  1912 ;; Defined at:
  1913 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;  multiplier      2   18[COMRAM] unsigned int 
  1916 ;;  multiplicand    2   20[COMRAM] unsigned int 
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;  product         2   22[COMRAM] unsigned int 
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  2   18[COMRAM] unsigned int 
  1921 ;; Registers used:
  1922 ;;		wreg, status,2, status,0, prodl, prodh
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMRAM   BANK0   BANK1
  1928 ;;      Params:         4       0       0
  1929 ;;      Locals:         2       0       0
  1930 ;;      Temps:          0       0       0
  1931 ;;      Totals:         6       0       0
  1932 ;;Total ram usage:        6 bytes
  1933 ;; Hardware stack levels used:    1
  1934 ;; Hardware stack levels required when called:    1
  1935 ;; This function calls:
  1936 ;;		Nothing
  1937 ;; This function is called by:
  1938 ;;		_printData
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           	psect	text4
  1943  00114E                     __ptext4:
  1944                           	opt stack 0
  1945  00114E                     ___wmul:
  1946                           	opt stack 28
  1947                           
  1948                           ;incstack = 0
  1949  00114E  5013               	movf	___wmul@multiplier,w,c
  1950  001150  0215               	mulwf	___wmul@multiplicand,c
  1951  001152  CFF3 F017          	movff	prodl,___wmul@product
  1952  001156  CFF4 F018          	movff	prodh,___wmul@product+1
  1953  00115A  5013               	movf	___wmul@multiplier,w,c
  1954  00115C  0216               	mulwf	___wmul@multiplicand+1,c
  1955  00115E  50F3               	movf	prodl,w,c
  1956  001160  2618               	addwf	___wmul@product+1,f,c
  1957  001162  5014               	movf	___wmul@multiplier+1,w,c
  1958  001164  0215               	mulwf	___wmul@multiplicand,c
  1959  001166  50F3               	movf	prodl,w,c
  1960  001168  2618               	addwf	___wmul@product+1,f,c
  1961  00116A  C017  F013         	movff	___wmul@product,?___wmul
  1962  00116E  C018  F014         	movff	___wmul@product+1,?___wmul+1
  1963  001172  0012               	return	
  1964  001174                     __end_of___wmul:
  1965                           	opt stack 0
  1966                           tblptru	equ	0xFF8
  1967                           tblptrh	equ	0xFF7
  1968                           tblptrl	equ	0xFF6
  1969                           tablat	equ	0xFF5
  1970                           prodh	equ	0xFF4
  1971                           prodl	equ	0xFF3
  1972                           intcon	equ	0xFF2
  1973                           postinc0	equ	0xFEE
  1974                           wreg	equ	0xFE8
  1975                           postdec1	equ	0xFE5
  1976                           fsr1l	equ	0xFE1
  1977                           status	equ	0xFD8
  1978                           
  1979 ;; *************** function ___fttol *****************
  1980 ;; Defined at:
  1981 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;  f1              3   68[COMRAM] float 
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;  lval            4   78[COMRAM] unsigned long 
  1986 ;;  exp1            1   82[COMRAM] unsigned char 
  1987 ;;  sign1           1   77[COMRAM] unsigned char 
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  4   68[COMRAM] long 
  1990 ;; Registers used:
  1991 ;;		wreg, status,2, status,0
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMRAM   BANK0   BANK1
  1997 ;;      Params:         4       0       0
  1998 ;;      Locals:         6       0       0
  1999 ;;      Temps:          5       0       0
  2000 ;;      Totals:        15       0       0
  2001 ;;Total ram usage:       15 bytes
  2002 ;; Hardware stack levels used:    1
  2003 ;; Hardware stack levels required when called:    1
  2004 ;; This function calls:
  2005 ;;		Nothing
  2006 ;; This function is called by:
  2007 ;;		_main
  2008 ;;		_printData
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           	psect	text5
  2013  000A02                     __ptext5:
  2014                           	opt stack 0
  2015  000A02                     ___fttol:
  2016                           	opt stack 28
  2017                           
  2018                           ;incstack = 0
  2019  000A02  C047  F049         	movff	___fttol@f1+2,??___fttol
  2020  000A06  6A4A               	clrf	(??___fttol+1)& (0+255),c
  2021  000A08  6A4B               	clrf	(??___fttol+2)& (0+255),c
  2022  000A0A  3446               	rlcf	___fttol@f1+1,w,c
  2023  000A0C  3649               	rlcf	??___fttol& (0+255),f,c
  2024  000A0E  E301               	bnc	u2241
  2025  000A10  804A               	bsf	(??___fttol+1)& (0+255),0,c
  2026  000A12                     u2241:
  2027  000A12  5049               	movf	??___fttol,w,c
  2028  000A14  6E53               	movwf	___fttol@exp1,c
  2029  000A16  5053               	movf	___fttol@exp1,w,c
  2030  000A18  A4D8               	btfss	status,2,c
  2031  000A1A  D009               	goto	l572
  2032  000A1C  0E00               	movlw	0
  2033  000A1E  6E45               	movwf	?___fttol,c
  2034  000A20  0E00               	movlw	0
  2035  000A22  6E46               	movwf	?___fttol+1,c
  2036  000A24  0E00               	movlw	0
  2037  000A26  6E47               	movwf	?___fttol+2,c
  2038  000A28  0E00               	movlw	0
  2039  000A2A  6E48               	movwf	?___fttol+3,c
  2040  000A2C  0012               	return	
  2041  000A2E                     l572:
  2042  000A2E  0E17               	movlw	23
  2043  000A30  6E49               	movwf	??___fttol& (0+255),c
  2044  000A32  C045  F04A         	movff	___fttol@f1,??___fttol+1
  2045  000A36  C046  F04B         	movff	___fttol@f1+1,??___fttol+2
  2046  000A3A  C047  F04C         	movff	___fttol@f1+2,??___fttol+3
  2047  000A3E  2849               	incf	??___fttol,w,c
  2048  000A40  6E4D               	movwf	(??___fttol+4)& (0+255),c
  2049  000A42  D004               	goto	u2260
  2050  000A44                     u2265:
  2051  000A44  90D8               	bcf	status,0,c
  2052  000A46  324C               	rrcf	??___fttol+3,f,c
  2053  000A48  324B               	rrcf	??___fttol+2,f,c
  2054  000A4A  324A               	rrcf	??___fttol+1,f,c
  2055  000A4C                     u2260:
  2056  000A4C  2E4D               	decfsz	(??___fttol+4)& (0+255),f,c
  2057  000A4E  D7FA               	goto	u2265
  2058  000A50  504A               	movf	??___fttol+1,w,c
  2059  000A52  6E4E               	movwf	___fttol@sign1,c
  2060  000A54  8E46               	bsf	___fttol@f1+1,7,c
  2061  000A56  0EFF               	movlw	255
  2062  000A58  1645               	andwf	___fttol@f1,f,c
  2063  000A5A  0EFF               	movlw	255
  2064  000A5C  1646               	andwf	___fttol@f1+1,f,c
  2065  000A5E  0E00               	movlw	0
  2066  000A60  1647               	andwf	___fttol@f1+2,f,c
  2067  000A62  5045               	movf	___fttol@f1,w,c
  2068  000A64  6E4F               	movwf	___fttol@lval,c
  2069  000A66  5046               	movf	___fttol@f1+1,w,c
  2070  000A68  6E50               	movwf	___fttol@lval+1,c
  2071  000A6A  5047               	movf	___fttol@f1+2,w,c
  2072  000A6C  6E51               	movwf	___fttol@lval+2,c
  2073  000A6E  6A52               	clrf	___fttol@lval+3,c
  2074  000A70  0E8E               	movlw	142
  2075  000A72  5E53               	subwf	___fttol@exp1,f,c
  2076  000A74  AE53               	btfss	___fttol@exp1,7,c
  2077  000A76  D016               	goto	l574
  2078  000A78  5053               	movf	___fttol@exp1,w,c
  2079  000A7A  0A80               	xorlw	128
  2080  000A7C  0F8F               	addlw	143
  2081  000A7E  B0D8               	btfsc	status,0,c
  2082  000A80  D009               	goto	l575
  2083  000A82  0E00               	movlw	0
  2084  000A84  6E45               	movwf	?___fttol,c
  2085  000A86  0E00               	movlw	0
  2086  000A88  6E46               	movwf	?___fttol+1,c
  2087  000A8A  0E00               	movlw	0
  2088  000A8C  6E47               	movwf	?___fttol+2,c
  2089  000A8E  0E00               	movlw	0
  2090  000A90  6E48               	movwf	?___fttol+3,c
  2091  000A92  0012               	return	
  2092  000A94                     l575:
  2093  000A94  90D8               	bcf	status,0,c
  2094  000A96  3252               	rrcf	___fttol@lval+3,f,c
  2095  000A98  3251               	rrcf	___fttol@lval+2,f,c
  2096  000A9A  3250               	rrcf	___fttol@lval+1,f,c
  2097  000A9C  324F               	rrcf	___fttol@lval,f,c
  2098  000A9E  3E53               	incfsz	___fttol@exp1,f,c
  2099  000AA0  D7F9               	goto	l575
  2100  000AA2  D015               	goto	u2300
  2101  000AA4                     l574:
  2102  000AA4  0E17               	movlw	23
  2103  000AA6  6453               	cpfsgt	___fttol@exp1,c
  2104  000AA8  D00F               	goto	l580
  2105  000AAA  0E00               	movlw	0
  2106  000AAC  6E45               	movwf	?___fttol,c
  2107  000AAE  0E00               	movlw	0
  2108  000AB0  6E46               	movwf	?___fttol+1,c
  2109  000AB2  0E00               	movlw	0
  2110  000AB4  6E47               	movwf	?___fttol+2,c
  2111  000AB6  0E00               	movlw	0
  2112  000AB8  6E48               	movwf	?___fttol+3,c
  2113  000ABA  0012               	return	
  2114  000ABC  90D8               	bcf	status,0,c
  2115  000ABE  364F               	rlcf	___fttol@lval,f,c
  2116  000AC0  3650               	rlcf	___fttol@lval+1,f,c
  2117  000AC2  3651               	rlcf	___fttol@lval+2,f,c
  2118  000AC4  3652               	rlcf	___fttol@lval+3,f,c
  2119  000AC6  0653               	decf	___fttol@exp1,f,c
  2120  000AC8                     l580:
  2121  000AC8  5053               	movf	___fttol@exp1,w,c
  2122  000ACA  A4D8               	btfss	status,2,c
  2123  000ACC  D7F7               	goto	l581
  2124  000ACE                     u2300:
  2125  000ACE  504E               	movf	___fttol@sign1,w,c
  2126  000AD0  B4D8               	btfsc	status,2,c
  2127  000AD2  D008               	goto	l583
  2128  000AD4  1E52               	comf	___fttol@lval+3,f,c
  2129  000AD6  1E51               	comf	___fttol@lval+2,f,c
  2130  000AD8  1E50               	comf	___fttol@lval+1,f,c
  2131  000ADA  6C4F               	negf	___fttol@lval,c
  2132  000ADC  0E00               	movlw	0
  2133  000ADE  2250               	addwfc	___fttol@lval+1,f,c
  2134  000AE0  2251               	addwfc	___fttol@lval+2,f,c
  2135  000AE2  2252               	addwfc	___fttol@lval+3,f,c
  2136  000AE4                     l583:
  2137  000AE4  C04F  F045         	movff	___fttol@lval,?___fttol
  2138  000AE8  C050  F046         	movff	___fttol@lval+1,?___fttol+1
  2139  000AEC  C051  F047         	movff	___fttol@lval+2,?___fttol+2
  2140  000AF0  C052  F048         	movff	___fttol@lval+3,?___fttol+3
  2141  000AF4  0012               	return	
  2142  000AF6                     __end_of___fttol:
  2143                           	opt stack 0
  2144                           tblptru	equ	0xFF8
  2145                           tblptrh	equ	0xFF7
  2146                           tblptrl	equ	0xFF6
  2147                           tablat	equ	0xFF5
  2148                           prodh	equ	0xFF4
  2149                           prodl	equ	0xFF3
  2150                           intcon	equ	0xFF2
  2151                           postinc0	equ	0xFEE
  2152                           wreg	equ	0xFE8
  2153                           postdec1	equ	0xFE5
  2154                           fsr1l	equ	0xFE1
  2155                           status	equ	0xFD8
  2156                           
  2157 ;; *************** function ___ftge *****************
  2158 ;; Defined at:
  2159 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;  ff1             3   18[COMRAM] float 
  2162 ;;  ff2             3   21[COMRAM] float 
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;		None
  2165 ;; Return value:  Size  Location     Type
  2166 ;;		None               void
  2167 ;; Registers used:
  2168 ;;		wreg, status,2, status,0
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMRAM   BANK0   BANK1
  2174 ;;      Params:         6       0       0
  2175 ;;      Locals:         0       0       0
  2176 ;;      Temps:          3       0       0
  2177 ;;      Totals:         9       0       0
  2178 ;;Total ram usage:        9 bytes
  2179 ;; Hardware stack levels used:    1
  2180 ;; Hardware stack levels required when called:    1
  2181 ;; This function calls:
  2182 ;;		Nothing
  2183 ;; This function is called by:
  2184 ;;		_printData
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           	psect	text6
  2189  000E12                     __ptext6:
  2190                           	opt stack 0
  2191  000E12                     ___ftge:
  2192                           	opt stack 28
  2193                           
  2194                           ;incstack = 0
  2195  000E12  AE15               	btfss	___ftge@ff1+2,7,c
  2196  000E14  D016               	goto	l544
  2197  000E16  C013  F019         	movff	___ftge@ff1,??___ftge
  2198  000E1A  C014  F01A         	movff	___ftge@ff1+1,??___ftge+1
  2199  000E1E  C015  F01B         	movff	___ftge@ff1+2,??___ftge+2
  2200  000E22  1E19               	comf	??___ftge,f,c
  2201  000E24  1E1A               	comf	??___ftge+1,f,c
  2202  000E26  1E1B               	comf	??___ftge+2,f,c
  2203  000E28  2A19               	incf	??___ftge,f,c
  2204  000E2A  0E00               	movlw	0
  2205  000E2C  221A               	addwfc	??___ftge+1,f,c
  2206  000E2E  221B               	addwfc	??___ftge+2,f,c
  2207  000E30  0E00               	movlw	0
  2208  000E32  2419               	addwf	??___ftge,w,c
  2209  000E34  6E13               	movwf	___ftge@ff1,c
  2210  000E36  0E00               	movlw	0
  2211  000E38  201A               	addwfc	??___ftge+1,w,c
  2212  000E3A  6E14               	movwf	___ftge@ff1+1,c
  2213  000E3C  0E80               	movlw	128
  2214  000E3E  201B               	addwfc	??___ftge+2,w,c
  2215  000E40  6E15               	movwf	___ftge@ff1+2,c
  2216  000E42                     l544:
  2217  000E42  AE18               	btfss	___ftge@ff2+2,7,c
  2218  000E44  D016               	goto	l545
  2219  000E46  C016  F019         	movff	___ftge@ff2,??___ftge
  2220  000E4A  C017  F01A         	movff	___ftge@ff2+1,??___ftge+1
  2221  000E4E  C018  F01B         	movff	___ftge@ff2+2,??___ftge+2
  2222  000E52  1E19               	comf	??___ftge,f,c
  2223  000E54  1E1A               	comf	??___ftge+1,f,c
  2224  000E56  1E1B               	comf	??___ftge+2,f,c
  2225  000E58  2A19               	incf	??___ftge,f,c
  2226  000E5A  0E00               	movlw	0
  2227  000E5C  221A               	addwfc	??___ftge+1,f,c
  2228  000E5E  221B               	addwfc	??___ftge+2,f,c
  2229  000E60  0E00               	movlw	0
  2230  000E62  2419               	addwf	??___ftge,w,c
  2231  000E64  6E16               	movwf	___ftge@ff2,c
  2232  000E66  0E00               	movlw	0
  2233  000E68  201A               	addwfc	??___ftge+1,w,c
  2234  000E6A  6E17               	movwf	___ftge@ff2+1,c
  2235  000E6C  0E80               	movlw	128
  2236  000E6E  201B               	addwfc	??___ftge+2,w,c
  2237  000E70  6E18               	movwf	___ftge@ff2+2,c
  2238  000E72                     l545:
  2239  000E72  0E00               	movlw	0
  2240  000E74  1A13               	xorwf	___ftge@ff1,f,c
  2241  000E76  0E00               	movlw	0
  2242  000E78  1A14               	xorwf	___ftge@ff1+1,f,c
  2243  000E7A  0E80               	movlw	128
  2244  000E7C  1A15               	xorwf	___ftge@ff1+2,f,c
  2245  000E7E  0E00               	movlw	0
  2246  000E80  1A16               	xorwf	___ftge@ff2,f,c
  2247  000E82  0E00               	movlw	0
  2248  000E84  1A17               	xorwf	___ftge@ff2+1,f,c
  2249  000E86  0E80               	movlw	128
  2250  000E88  1A18               	xorwf	___ftge@ff2+2,f,c
  2251  000E8A  5016               	movf	___ftge@ff2,w,c
  2252  000E8C  5C13               	subwf	___ftge@ff1,w,c
  2253  000E8E  5017               	movf	___ftge@ff2+1,w,c
  2254  000E90  5814               	subwfb	___ftge@ff1+1,w,c
  2255  000E92  5018               	movf	___ftge@ff2+2,w,c
  2256  000E94  5815               	subwfb	___ftge@ff1+2,w,c
  2257  000E96  B0D8               	btfsc	status,0,c
  2258  000E98  D002               	goto	l2141
  2259  000E9A  90D8               	bcf	status,0,c
  2260  000E9C  0012               	return	
  2261  000E9E                     l2141:
  2262  000E9E  80D8               	bsf	status,0,c
  2263  000EA0  0012               	return	
  2264  000EA2                     __end_of___ftge:
  2265                           	opt stack 0
  2266                           tblptru	equ	0xFF8
  2267                           tblptrh	equ	0xFF7
  2268                           tblptrl	equ	0xFF6
  2269                           tablat	equ	0xFF5
  2270                           prodh	equ	0xFF4
  2271                           prodl	equ	0xFF3
  2272                           intcon	equ	0xFF2
  2273                           postinc0	equ	0xFEE
  2274                           wreg	equ	0xFE8
  2275                           postdec1	equ	0xFE5
  2276                           fsr1l	equ	0xFE1
  2277                           status	equ	0xFD8
  2278                           
  2279 ;; *************** function ___awdiv *****************
  2280 ;; Defined at:
  2281 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;  dividend        2   83[COMRAM] int 
  2284 ;;  divisor         2   85[COMRAM] int 
  2285 ;; Auto vars:     Size  Location     Type
  2286 ;;  quotient        2    2[BANK0 ] int 
  2287 ;;  sign            1    1[BANK0 ] unsigned char 
  2288 ;;  counter         1    0[BANK0 ] unsigned char 
  2289 ;; Return value:  Size  Location     Type
  2290 ;;                  2   83[COMRAM] int 
  2291 ;; Registers used:
  2292 ;;		wreg, status,2, status,0
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMRAM   BANK0   BANK1
  2298 ;;      Params:         4       0       0
  2299 ;;      Locals:         0       4       0
  2300 ;;      Temps:          0       0       0
  2301 ;;      Totals:         4       4       0
  2302 ;;Total ram usage:        8 bytes
  2303 ;; Hardware stack levels used:    1
  2304 ;; Hardware stack levels required when called:    1
  2305 ;; This function calls:
  2306 ;;		Nothing
  2307 ;; This function is called by:
  2308 ;;		_printData
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           	psect	text7
  2313  000EA2                     __ptext7:
  2314                           	opt stack 0
  2315  000EA2                     ___awdiv:
  2316                           	opt stack 28
  2317                           
  2318                           ;incstack = 0
  2319  000EA2  0E00               	movlw	0
  2320  000EA4  0100               	movlb	0	; () banked
  2321  000EA6  6FFB               	movwf	___awdiv@sign& (0+255),b
  2322                           
  2323                           ; BSR set to: 0
  2324  000EA8  AE57               	btfss	___awdiv@divisor+1,7,c
  2325  000EAA  D006               	goto	l425
  2326                           
  2327                           ; BSR set to: 0
  2328  000EAC  6C56               	negf	___awdiv@divisor,c
  2329  000EAE  1E57               	comf	___awdiv@divisor+1,f,c
  2330  000EB0  B0D8               	btfsc	status,0,c
  2331  000EB2  2A57               	incf	___awdiv@divisor+1,f,c
  2332                           
  2333                           ; BSR set to: 0
  2334  000EB4  0E01               	movlw	1
  2335  000EB6  6FFB               	movwf	___awdiv@sign& (0+255),b
  2336  000EB8                     l425:
  2337                           
  2338                           ; BSR set to: 0
  2339                           
  2340                           ; BSR set to: 0
  2341  000EB8  AE55               	btfss	___awdiv@dividend+1,7,c
  2342  000EBA  D006               	goto	l426
  2343                           
  2344                           ; BSR set to: 0
  2345  000EBC  6C54               	negf	___awdiv@dividend,c
  2346  000EBE  1E55               	comf	___awdiv@dividend+1,f,c
  2347  000EC0  B0D8               	btfsc	status,0,c
  2348  000EC2  2A55               	incf	___awdiv@dividend+1,f,c
  2349                           
  2350                           ; BSR set to: 0
  2351  000EC4  0E01               	movlw	1
  2352  000EC6  1BFB               	xorwf	___awdiv@sign& (0+255),f,b
  2353  000EC8                     l426:
  2354                           
  2355                           ; BSR set to: 0
  2356                           
  2357                           ; BSR set to: 0
  2358  000EC8  0E00               	movlw	0
  2359  000ECA  6FFD               	movwf	(___awdiv@quotient+1)& (0+255),b
  2360  000ECC  0E00               	movlw	0
  2361  000ECE  6FFC               	movwf	___awdiv@quotient& (0+255),b
  2362                           
  2363                           ; BSR set to: 0
  2364  000ED0  5056               	movf	___awdiv@divisor,w,c
  2365  000ED2  1057               	iorwf	___awdiv@divisor+1,w,c
  2366  000ED4  B4D8               	btfsc	status,2,c
  2367  000ED6  D01C               	goto	l433
  2368                           
  2369                           ; BSR set to: 0
  2370  000ED8  0E01               	movlw	1
  2371  000EDA  6FFA               	movwf	___awdiv@counter& (0+255),b
  2372  000EDC  D004               	goto	l428
  2373  000EDE                     
  2374                           ; BSR set to: 0
  2375                           
  2376                           ; BSR set to: 0
  2377  000EDE  90D8               	bcf	status,0,c
  2378  000EE0  3656               	rlcf	___awdiv@divisor,f,c
  2379  000EE2  3657               	rlcf	___awdiv@divisor+1,f,c
  2380  000EE4  2BFA               	incf	___awdiv@counter& (0+255),f,b
  2381  000EE6                     l428:
  2382                           
  2383                           ; BSR set to: 0
  2384                           
  2385                           ; BSR set to: 0
  2386  000EE6  AE57               	btfss	___awdiv@divisor+1,7,c
  2387  000EE8  D7FA               	goto	l429
  2388  000EEA                     u2180:
  2389                           
  2390                           ; BSR set to: 0
  2391                           
  2392                           ; BSR set to: 0
  2393                           
  2394                           ; BSR set to: 0
  2395  000EEA  90D8               	bcf	status,0,c
  2396  000EEC  37FC               	rlcf	___awdiv@quotient& (0+255),f,b
  2397  000EEE  37FD               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  2398                           
  2399                           ; BSR set to: 0
  2400  000EF0  5056               	movf	___awdiv@divisor,w,c
  2401  000EF2  5C54               	subwf	___awdiv@dividend,w,c
  2402  000EF4  5057               	movf	___awdiv@divisor+1,w,c
  2403  000EF6  5855               	subwfb	___awdiv@dividend+1,w,c
  2404  000EF8  A0D8               	btfss	status,0,c
  2405  000EFA  D005               	goto	l432
  2406                           
  2407                           ; BSR set to: 0
  2408  000EFC  5056               	movf	___awdiv@divisor,w,c
  2409  000EFE  5E54               	subwf	___awdiv@dividend,f,c
  2410  000F00  5057               	movf	___awdiv@divisor+1,w,c
  2411  000F02  5A55               	subwfb	___awdiv@dividend+1,f,c
  2412                           
  2413                           ; BSR set to: 0
  2414  000F04  81FC               	bsf	___awdiv@quotient& (0+255),0,b
  2415  000F06                     l432:
  2416                           
  2417                           ; BSR set to: 0
  2418                           
  2419                           ; BSR set to: 0
  2420  000F06  90D8               	bcf	status,0,c
  2421  000F08  3257               	rrcf	___awdiv@divisor+1,f,c
  2422  000F0A  3256               	rrcf	___awdiv@divisor,f,c
  2423                           
  2424                           ; BSR set to: 0
  2425  000F0C  2FFA               	decfsz	___awdiv@counter& (0+255),f,b
  2426  000F0E  D7ED               	goto	u2180
  2427  000F10                     l433:
  2428                           
  2429                           ; BSR set to: 0
  2430                           
  2431                           ; BSR set to: 0
  2432                           
  2433                           ; BSR set to: 0
  2434  000F10  51FB               	movf	___awdiv@sign& (0+255),w,b
  2435  000F12  B4D8               	btfsc	status,2,c
  2436  000F14  D004               	goto	l434
  2437                           
  2438                           ; BSR set to: 0
  2439  000F16  6DFC               	negf	___awdiv@quotient& (0+255),b
  2440  000F18  1FFD               	comf	(___awdiv@quotient+1)& (0+255),f,b
  2441  000F1A  B0D8               	btfsc	status,0,c
  2442  000F1C  2BFD               	incf	(___awdiv@quotient+1)& (0+255),f,b
  2443  000F1E                     l434:
  2444                           
  2445                           ; BSR set to: 0
  2446                           
  2447                           ; BSR set to: 0
  2448  000F1E  C0FC  F054         	movff	___awdiv@quotient,?___awdiv
  2449  000F22  C0FD  F055         	movff	___awdiv@quotient+1,?___awdiv+1
  2450  000F26  0012               	return	
  2451  000F28                     __end_of___awdiv:
  2452                           	opt stack 0
  2453                           tblptru	equ	0xFF8
  2454                           tblptrh	equ	0xFF7
  2455                           tblptrl	equ	0xFF6
  2456                           tablat	equ	0xFF5
  2457                           prodh	equ	0xFF4
  2458                           prodl	equ	0xFF3
  2459                           intcon	equ	0xFF2
  2460                           postinc0	equ	0xFEE
  2461                           wreg	equ	0xFE8
  2462                           postdec1	equ	0xFE5
  2463                           fsr1l	equ	0xFE1
  2464                           status	equ	0xFD8
  2465                           
  2466 ;; *************** function _appendUnits *****************
  2467 ;; Defined at:
  2468 ;;		line 227 in file "test.c"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;		None
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;  data2           5   24[COMRAM] unsigned char [5]
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  1    wreg      void 
  2475 ;; Registers used:
  2476 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMRAM   BANK0   BANK1
  2482 ;;      Params:         0       0       0
  2483 ;;      Locals:         5       0       0
  2484 ;;      Temps:          0       0       0
  2485 ;;      Totals:         5       0       0
  2486 ;;Total ram usage:        5 bytes
  2487 ;; Hardware stack levels used:    1
  2488 ;; Hardware stack levels required when called:    2
  2489 ;; This function calls:
  2490 ;;		_UART_TX_Busy
  2491 ;;		_strlen
  2492 ;; This function is called by:
  2493 ;;		_main
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497                           	psect	text8
  2498  000FE6                     __ptext8:
  2499                           	opt stack 0
  2500  000FE6                     _appendUnits:
  2501                           	opt stack 28
  2502                           
  2503                           ;test.c: 229: while (UART_TX_Busy());
  2504                           
  2505                           ; BSR set to: 0
  2506                           ;incstack = 0
  2507  000FE6  ECF4  F008         	call	_UART_TX_Busy	;wreg free
  2508  000FEA  0900               	iorlw	0
  2509  000FEC  A4D8               	btfss	status,2,c
  2510  000FEE  D7FB               	goto	_appendUnits
  2511                           
  2512                           ;test.c: 230: unsigned char data2[] = "mmHg";
  2513  000FF0  EE20  F080         	lfsr	2,appendUnits@F2916
  2514  000FF4  EE10  F019         	lfsr	1,appendUnits@data2
  2515  000FF8  0E04               	movlw	4
  2516  000FFA                     u2471:
  2517  000FFA  CFDB FFE3          	movff	plusw2,plusw1
  2518  000FFE  06E8               	decf	wreg,f,c
  2519  001000  E2FC               	bc	u2471
  2520                           
  2521                           ;test.c: 231: for (i = 0; i<strlen(data2);i++)
  2522  001002  0E00               	movlw	0
  2523  001004  6E64               	movwf	_i+1,c
  2524  001006  0E00               	movlw	0
  2525  001008  6E63               	movwf	_i,c
  2526  00100A  D00F               	goto	l169
  2527  00100C                     
  2528                           ;test.c: 232: {
  2529                           ;test.c: 233: TXREG = data2[i];
  2530  00100C  0E19               	movlw	low appendUnits@data2
  2531  00100E  2463               	addwf	_i,w,c
  2532  001010  6ED9               	movwf	fsr2l,c
  2533  001012  0E00               	movlw	high appendUnits@data2
  2534  001014  2064               	addwfc	_i+1,w,c
  2535  001016  6EDA               	movwf	fsr2h,c
  2536  001018  50DF               	movf	indf2,w,c
  2537  00101A  6EAD               	movwf	4013,c	;volatile
  2538  00101C  ECF4  F008         	call	_UART_TX_Busy	;wreg free
  2539  001020  0900               	iorlw	0
  2540  001022  A4D8               	btfss	status,2,c
  2541  001024  D7FB               	goto	l172
  2542  001026  4A63               	infsnz	_i,f,c
  2543  001028  2A64               	incf	_i+1,f,c
  2544  00102A                     l169:
  2545  00102A  0E19               	movlw	low appendUnits@data2
  2546  00102C  6E13               	movwf	strlen@s,c
  2547  00102E  0E00               	movlw	high appendUnits@data2
  2548  001030  6E14               	movwf	strlen@s+1,c
  2549  001032  EC7E  F008         	call	_strlen	;wreg free
  2550  001036  5013               	movf	?_strlen,w,c
  2551  001038  5C63               	subwf	_i,w,c
  2552  00103A  5014               	movf	?_strlen+1,w,c
  2553  00103C  5864               	subwfb	_i+1,w,c
  2554  00103E  B0D8               	btfsc	status,0,c
  2555  001040  0012               	return	
  2556  001042  D7E4               	goto	l170
  2557  001044                     __end_of_appendUnits:
  2558                           	opt stack 0
  2559                           tblptru	equ	0xFF8
  2560                           tblptrh	equ	0xFF7
  2561                           tblptrl	equ	0xFF6
  2562                           tablat	equ	0xFF5
  2563                           prodh	equ	0xFF4
  2564                           prodl	equ	0xFF3
  2565                           intcon	equ	0xFF2
  2566                           postinc0	equ	0xFEE
  2567                           wreg	equ	0xFE8
  2568                           postdec1	equ	0xFE5
  2569                           plusw1	equ	0xFE3
  2570                           fsr1l	equ	0xFE1
  2571                           indf2	equ	0xFDF
  2572                           plusw2	equ	0xFDB
  2573                           fsr2h	equ	0xFDA
  2574                           fsr2l	equ	0xFD9
  2575                           status	equ	0xFD8
  2576                           
  2577 ;; *************** function _adcReadChannel *****************
  2578 ;; Defined at:
  2579 ;;		line 269 in file "test.c"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;  channelNumbe    1    wreg     unsigned char 
  2582 ;; Auto vars:     Size  Location     Type
  2583 ;;  channelNumbe    1   21[COMRAM] unsigned char 
  2584 ;; Return value:  Size  Location     Type
  2585 ;;                  2   18[COMRAM] int 
  2586 ;; Registers used:
  2587 ;;		wreg, status,2, status,0
  2588 ;; Tracked objects:
  2589 ;;		On entry : 0/0
  2590 ;;		On exit  : 0/0
  2591 ;;		Unchanged: 0/0
  2592 ;; Data sizes:     COMRAM   BANK0   BANK1
  2593 ;;      Params:         2       0       0
  2594 ;;      Locals:         1       0       0
  2595 ;;      Temps:          1       0       0
  2596 ;;      Totals:         4       0       0
  2597 ;;Total ram usage:        4 bytes
  2598 ;; Hardware stack levels used:    1
  2599 ;; Hardware stack levels required when called:    1
  2600 ;; This function calls:
  2601 ;;		Nothing
  2602 ;; This function is called by:
  2603 ;;		_main
  2604 ;; This function uses a non-reentrant model
  2605 ;;
  2606                           
  2607                           	psect	text9
  2608  000D7E                     __ptext9:
  2609                           	opt stack 0
  2610  000D7E                     _adcReadChannel:
  2611                           	opt stack 29
  2612                           
  2613                           ;incstack = 0
  2614                           ;adcReadChannel@channelNumber stored from wreg
  2615  000D7E  6E16               	movwf	adcReadChannel@channelNumber,c
  2616                           
  2617                           ;test.c: 272: ADCON0bits.CHS3 =(channelNumber>>3)&0x01;
  2618  000D80  C016  F015         	movff	adcReadChannel@channelNumber,??_adcReadChannel
  2619  000D84  90D8               	bcf	status,0,c
  2620  000D86  3215               	rrcf	??_adcReadChannel,f,c
  2621  000D88  90D8               	bcf	status,0,c
  2622  000D8A  3215               	rrcf	??_adcReadChannel,f,c
  2623  000D8C  90D8               	bcf	status,0,c
  2624  000D8E  3215               	rrcf	??_adcReadChannel,f,c
  2625  000D90  0E01               	movlw	1
  2626  000D92  1615               	andwf	??_adcReadChannel,f,c
  2627  000D94  3A15               	swapf	??_adcReadChannel,f,c
  2628  000D96  4615               	rlncf	??_adcReadChannel,f,c
  2629  000D98  50C2               	movf	4034,w,c	;volatile
  2630  000D9A  1815               	xorwf	??_adcReadChannel,w,c
  2631  000D9C  0BDF               	andlw	-33
  2632  000D9E  1815               	xorwf	??_adcReadChannel,w,c
  2633  000DA0  6EC2               	movwf	4034,c	;volatile
  2634                           
  2635                           ;test.c: 273: ADCON0bits.CHS2 =(channelNumber>>2)&0x01;
  2636  000DA2  C016  F015         	movff	adcReadChannel@channelNumber,??_adcReadChannel
  2637  000DA6  90D8               	bcf	status,0,c
  2638  000DA8  3215               	rrcf	??_adcReadChannel,f,c
  2639  000DAA  90D8               	bcf	status,0,c
  2640  000DAC  3215               	rrcf	??_adcReadChannel,f,c
  2641  000DAE  0E01               	movlw	1
  2642  000DB0  1615               	andwf	??_adcReadChannel,f,c
  2643  000DB2  3A15               	swapf	??_adcReadChannel,f,c
  2644  000DB4  50C2               	movf	4034,w,c	;volatile
  2645  000DB6  1815               	xorwf	??_adcReadChannel,w,c
  2646  000DB8  0BEF               	andlw	-17
  2647  000DBA  1815               	xorwf	??_adcReadChannel,w,c
  2648  000DBC  6EC2               	movwf	4034,c	;volatile
  2649                           
  2650                           ;test.c: 274: ADCON0bits.CHS1 = (channelNumber>>1)&0x01;
  2651  000DBE  C016  F015         	movff	adcReadChannel@channelNumber,??_adcReadChannel
  2652  000DC2  90D8               	bcf	status,0,c
  2653  000DC4  3215               	rrcf	??_adcReadChannel,f,c
  2654  000DC6  0E01               	movlw	1
  2655  000DC8  1615               	andwf	??_adcReadChannel,f,c
  2656  000DCA  4615               	rlncf	??_adcReadChannel,f,c
  2657  000DCC  4615               	rlncf	??_adcReadChannel,f,c
  2658  000DCE  4615               	rlncf	??_adcReadChannel,f,c
  2659  000DD0  50C2               	movf	4034,w,c	;volatile
  2660  000DD2  1815               	xorwf	??_adcReadChannel,w,c
  2661  000DD4  0BF7               	andlw	-9
  2662  000DD6  1815               	xorwf	??_adcReadChannel,w,c
  2663  000DD8  6EC2               	movwf	4034,c	;volatile
  2664                           
  2665                           ;test.c: 275: ADCON0bits.CHS0 = channelNumber&0x01;
  2666  000DDA  C016  F015         	movff	adcReadChannel@channelNumber,??_adcReadChannel
  2667  000DDE  0E01               	movlw	1
  2668  000DE0  1615               	andwf	??_adcReadChannel,f,c
  2669  000DE2  4615               	rlncf	??_adcReadChannel,f,c
  2670  000DE4  4615               	rlncf	??_adcReadChannel,f,c
  2671  000DE6  50C2               	movf	4034,w,c	;volatile
  2672  000DE8  1815               	xorwf	??_adcReadChannel,w,c
  2673  000DEA  0BFB               	andlw	-5
  2674  000DEC  1815               	xorwf	??_adcReadChannel,w,c
  2675  000DEE  6EC2               	movwf	4034,c	;volatile
  2676                           
  2677                           ;test.c: 278: ADCON0bits.ADON = 1;
  2678  000DF0  80C2               	bsf	4034,0,c	;volatile
  2679                           
  2680                           ;test.c: 279: ADCON0bits.GO = 1;
  2681  000DF2  82C2               	bsf	4034,1,c	;volatile
  2682                           
  2683                           ;test.c: 280: _delay(50000);
  2684  000DF4  0E41               	movlw	65
  2685  000DF6  6E15               	movwf	??_adcReadChannel& (0+255),c
  2686  000DF8  0EEE               	movlw	238
  2687  000DFA                     u3037:
  2688  000DFA  2EE8               	decfsz	wreg,f,c
  2689  000DFC  D7FE               	bra	u3037
  2690  000DFE  2E15               	decfsz	??_adcReadChannel& (0+255),f,c
  2691  000E00  D7FC               	bra	u3037
  2692  000E02  D000               	nop2	
  2693  000E04                     
  2694                           ;test.c: 282: ;
  2695  000E04  B2C2               	btfsc	4034,1,c	;volatile
  2696  000E06  D7FE               	goto	l206
  2697                           
  2698                           ;test.c: 283: return ADRES;
  2699  000E08  CFC3 F013          	movff	4035,?_adcReadChannel	;volatile
  2700  000E0C  CFC4 F014          	movff	4036,?_adcReadChannel+1	;volatile
  2701  000E10  0012               	return		;funcret
  2702  000E12                     __end_of_adcReadChannel:
  2703                           	opt stack 0
  2704                           tblptru	equ	0xFF8
  2705                           tblptrh	equ	0xFF7
  2706                           tblptrl	equ	0xFF6
  2707                           tablat	equ	0xFF5
  2708                           prodh	equ	0xFF4
  2709                           prodl	equ	0xFF3
  2710                           intcon	equ	0xFF2
  2711                           postinc0	equ	0xFEE
  2712                           wreg	equ	0xFE8
  2713                           postdec1	equ	0xFE5
  2714                           plusw1	equ	0xFE3
  2715                           fsr1l	equ	0xFE1
  2716                           indf2	equ	0xFDF
  2717                           plusw2	equ	0xFDB
  2718                           fsr2h	equ	0xFDA
  2719                           fsr2l	equ	0xFD9
  2720                           status	equ	0xFD8
  2721                           
  2722 ;; *************** function _adcConfig *****************
  2723 ;; Defined at:
  2724 ;;		line 286 in file "test.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;		None
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;		None
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  1    wreg      void 
  2731 ;; Registers used:
  2732 ;;		wreg, status,2
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMRAM   BANK0   BANK1
  2738 ;;      Params:         0       0       0
  2739 ;;      Locals:         0       0       0
  2740 ;;      Temps:          0       0       0
  2741 ;;      Totals:         0       0       0
  2742 ;;Total ram usage:        0 bytes
  2743 ;; Hardware stack levels used:    1
  2744 ;; Hardware stack levels required when called:    1
  2745 ;; This function calls:
  2746 ;;		Nothing
  2747 ;; This function is called by:
  2748 ;;		_main
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           	psect	text10
  2753  0011B4                     __ptext10:
  2754                           	opt stack 0
  2755  0011B4                     _adcConfig:
  2756                           	opt stack 29
  2757                           
  2758                           ;test.c: 289: TRISAbits.TRISA0 = 1;
  2759                           
  2760                           ;incstack = 0
  2761  0011B4  8092               	bsf	3986,0,c	;volatile
  2762                           
  2763                           ;test.c: 290: TRISAbits.TRISA1 = 1;
  2764  0011B6  8292               	bsf	3986,1,c	;volatile
  2765                           
  2766                           ;test.c: 291: TRISAbits.TRISA2 = 1;
  2767  0011B8  8492               	bsf	3986,2,c	;volatile
  2768                           
  2769                           ;test.c: 292: TRISAbits.TRISA3 = 1;
  2770  0011BA  8692               	bsf	3986,3,c	;volatile
  2771                           
  2772                           ;test.c: 295: ADCON2bits.ADCS2 = 1;
  2773  0011BC  84C0               	bsf	4032,2,c	;volatile
  2774                           
  2775                           ;test.c: 296: ADCON2bits.ADCS1 = 1;
  2776  0011BE  82C0               	bsf	4032,1,c	;volatile
  2777                           
  2778                           ;test.c: 297: ADCON2bits.ADCS0 = 1;
  2779  0011C0  80C0               	bsf	4032,0,c	;volatile
  2780                           
  2781                           ;test.c: 299: ADCON0 = 0;
  2782  0011C2  0E00               	movlw	0
  2783  0011C4  6EC2               	movwf	4034,c	;volatile
  2784                           
  2785                           ;test.c: 302: ADCON1 = 0b00001010;
  2786  0011C6  0E0A               	movlw	10
  2787  0011C8  6EC1               	movwf	4033,c	;volatile
  2788                           
  2789                           ;test.c: 303: ADCON2bits.ADFM = 1;
  2790  0011CA  8EC0               	bsf	4032,7,c	;volatile
  2791  0011CC  0012               	return		;funcret
  2792  0011CE                     __end_of_adcConfig:
  2793                           	opt stack 0
  2794                           tblptru	equ	0xFF8
  2795                           tblptrh	equ	0xFF7
  2796                           tblptrl	equ	0xFF6
  2797                           tablat	equ	0xFF5
  2798                           prodh	equ	0xFF4
  2799                           prodl	equ	0xFF3
  2800                           intcon	equ	0xFF2
  2801                           postinc0	equ	0xFEE
  2802                           wreg	equ	0xFE8
  2803                           postdec1	equ	0xFE5
  2804                           plusw1	equ	0xFE3
  2805                           fsr1l	equ	0xFE1
  2806                           indf2	equ	0xFDF
  2807                           plusw2	equ	0xFDB
  2808                           fsr2h	equ	0xFDA
  2809                           fsr2l	equ	0xFD9
  2810                           status	equ	0xFD8
  2811                           
  2812 ;; *************** function ___lltoft *****************
  2813 ;; Defined at:
  2814 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;  c               4   26[COMRAM] unsigned long 
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;  exp             1   34[COMRAM] unsigned char 
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  3   26[COMRAM] float 
  2821 ;; Registers used:
  2822 ;;		wreg, status,2, status,0, cstack
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMRAM   BANK0   BANK1
  2828 ;;      Params:         4       0       0
  2829 ;;      Locals:         1       0       0
  2830 ;;      Temps:          4       0       0
  2831 ;;      Totals:         9       0       0
  2832 ;;Total ram usage:        9 bytes
  2833 ;; Hardware stack levels used:    1
  2834 ;; Hardware stack levels required when called:    2
  2835 ;; This function calls:
  2836 ;;		___ftpack
  2837 ;; This function is called by:
  2838 ;;		_main
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           	psect	text11
  2843  0010A0                     __ptext11:
  2844                           	opt stack 0
  2845  0010A0                     ___lltoft:
  2846                           	opt stack 28
  2847                           
  2848                           ;incstack = 0
  2849  0010A0  0E8E               	movlw	142
  2850  0010A2  6E23               	movwf	___lltoft@exp,c
  2851  0010A4  D006               	goto	l629
  2852  0010A6  90D8               	bcf	status,0,c
  2853  0010A8  321E               	rrcf	___lltoft@c+3,f,c
  2854  0010AA  321D               	rrcf	___lltoft@c+2,f,c
  2855  0010AC  321C               	rrcf	___lltoft@c+1,f,c
  2856  0010AE  321B               	rrcf	___lltoft@c,f,c
  2857  0010B0  2A23               	incf	___lltoft@exp,f,c
  2858  0010B2                     l629:
  2859  0010B2  0E00               	movlw	0
  2860  0010B4  141B               	andwf	___lltoft@c,w,c
  2861  0010B6  6E1F               	movwf	??___lltoft& (0+255),c
  2862  0010B8  0E00               	movlw	0
  2863  0010BA  141C               	andwf	___lltoft@c+1,w,c
  2864  0010BC  6E20               	movwf	(??___lltoft+1)& (0+255),c
  2865  0010BE  0E00               	movlw	0
  2866  0010C0  141D               	andwf	___lltoft@c+2,w,c
  2867  0010C2  6E21               	movwf	(??___lltoft+2)& (0+255),c
  2868  0010C4  0EFF               	movlw	255
  2869  0010C6  141E               	andwf	___lltoft@c+3,w,c
  2870  0010C8  6E22               	movwf	(??___lltoft+3)& (0+255),c
  2871  0010CA  501F               	movf	??___lltoft,w,c
  2872  0010CC  1020               	iorwf	??___lltoft+1,w,c
  2873  0010CE  1021               	iorwf	??___lltoft+2,w,c
  2874  0010D0  1022               	iorwf	??___lltoft+3,w,c
  2875  0010D2  A4D8               	btfss	status,2,c
  2876  0010D4  D7E8               	goto	l630
  2877  0010D6  C01B  F013         	movff	___lltoft@c,___ftpack@arg
  2878  0010DA  C01C  F014         	movff	___lltoft@c+1,___ftpack@arg+1
  2879  0010DE  C01D  F015         	movff	___lltoft@c+2,___ftpack@arg+2
  2880  0010E2  C023  F016         	movff	___lltoft@exp,___ftpack@exp
  2881  0010E6  0E00               	movlw	0
  2882  0010E8  6E17               	movwf	___ftpack@sign,c
  2883  0010EA  EC68  F006         	call	___ftpack	;wreg free
  2884  0010EE  C013  F01B         	movff	?___ftpack,?___lltoft
  2885  0010F2  C014  F01C         	movff	?___ftpack+1,?___lltoft+1
  2886  0010F6  C015  F01D         	movff	?___ftpack+2,?___lltoft+2
  2887  0010FA  0012               	return	
  2888  0010FC                     __end_of___lltoft:
  2889                           	opt stack 0
  2890                           tblptru	equ	0xFF8
  2891                           tblptrh	equ	0xFF7
  2892                           tblptrl	equ	0xFF6
  2893                           tablat	equ	0xFF5
  2894                           prodh	equ	0xFF4
  2895                           prodl	equ	0xFF3
  2896                           intcon	equ	0xFF2
  2897                           postinc0	equ	0xFEE
  2898                           wreg	equ	0xFE8
  2899                           postdec1	equ	0xFE5
  2900                           plusw1	equ	0xFE3
  2901                           fsr1l	equ	0xFE1
  2902                           indf2	equ	0xFDF
  2903                           plusw2	equ	0xFDB
  2904                           fsr2h	equ	0xFDA
  2905                           fsr2l	equ	0xFD9
  2906                           status	equ	0xFD8
  2907                           
  2908 ;; *************** function ___ftmul *****************
  2909 ;; Defined at:
  2910 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;  f1              3   38[COMRAM] float 
  2913 ;;  f2              3   41[COMRAM] float 
  2914 ;; Auto vars:     Size  Location     Type
  2915 ;;  f3_as_produc    3   48[COMRAM] unsigned um
  2916 ;;  sign            1   52[COMRAM] unsigned char 
  2917 ;;  cntr            1   51[COMRAM] unsigned char 
  2918 ;;  exp             1   47[COMRAM] unsigned char 
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  3   38[COMRAM] float 
  2921 ;; Registers used:
  2922 ;;		wreg, status,2, status,0, cstack
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMRAM   BANK0   BANK1
  2928 ;;      Params:         6       0       0
  2929 ;;      Locals:         6       0       0
  2930 ;;      Temps:          3       0       0
  2931 ;;      Totals:        15       0       0
  2932 ;;Total ram usage:       15 bytes
  2933 ;; Hardware stack levels used:    1
  2934 ;; Hardware stack levels required when called:    2
  2935 ;; This function calls:
  2936 ;;		___ftpack
  2937 ;; This function is called by:
  2938 ;;		_main
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           	psect	text12
  2943  000AF6                     __ptext12:
  2944                           	opt stack 0
  2945  000AF6                     ___ftmul:
  2946                           	opt stack 28
  2947                           
  2948                           ;incstack = 0
  2949  000AF6  C029  F02D         	movff	___ftmul@f1+2,??___ftmul
  2950  000AFA  6A2E               	clrf	(??___ftmul+1)& (0+255),c
  2951  000AFC  6A2F               	clrf	(??___ftmul+2)& (0+255),c
  2952  000AFE  3428               	rlcf	___ftmul@f1+1,w,c
  2953  000B00  362D               	rlcf	??___ftmul& (0+255),f,c
  2954  000B02  E301               	bnc	u2761
  2955  000B04  802E               	bsf	(??___ftmul+1)& (0+255),0,c
  2956  000B06                     u2761:
  2957  000B06  502D               	movf	??___ftmul,w,c
  2958  000B08  6E30               	movwf	___ftmul@exp,c
  2959  000B0A  5030               	movf	___ftmul@exp,w,c
  2960  000B0C  A4D8               	btfss	status,2,c
  2961  000B0E  D007               	goto	l551
  2962  000B10  0E00               	movlw	0
  2963  000B12  6E27               	movwf	?___ftmul,c
  2964  000B14  0E00               	movlw	0
  2965  000B16  6E28               	movwf	?___ftmul+1,c
  2966  000B18  0E00               	movlw	0
  2967  000B1A  6E29               	movwf	?___ftmul+2,c
  2968  000B1C  0012               	return	
  2969  000B1E                     l551:
  2970  000B1E  C02C  F02D         	movff	___ftmul@f2+2,??___ftmul
  2971  000B22  6A2E               	clrf	(??___ftmul+1)& (0+255),c
  2972  000B24  6A2F               	clrf	(??___ftmul+2)& (0+255),c
  2973  000B26  342B               	rlcf	___ftmul@f2+1,w,c
  2974  000B28  362D               	rlcf	??___ftmul& (0+255),f,c
  2975  000B2A  E301               	bnc	u2781
  2976  000B2C  802E               	bsf	(??___ftmul+1)& (0+255),0,c
  2977  000B2E                     u2781:
  2978  000B2E  502D               	movf	??___ftmul,w,c
  2979  000B30  6E35               	movwf	___ftmul@sign,c
  2980  000B32  5035               	movf	___ftmul@sign,w,c
  2981  000B34  A4D8               	btfss	status,2,c
  2982  000B36  D007               	goto	l553
  2983  000B38  0E00               	movlw	0
  2984  000B3A  6E27               	movwf	?___ftmul,c
  2985  000B3C  0E00               	movlw	0
  2986  000B3E  6E28               	movwf	?___ftmul+1,c
  2987  000B40  0E00               	movlw	0
  2988  000B42  6E29               	movwf	?___ftmul+2,c
  2989  000B44  0012               	return	
  2990  000B46                     l553:
  2991  000B46  5035               	movf	___ftmul@sign,w,c
  2992  000B48  0F7B               	addlw	123
  2993  000B4A  2630               	addwf	___ftmul@exp,f,c
  2994  000B4C  C029  F035         	movff	___ftmul@f1+2,___ftmul@sign
  2995  000B50  502C               	movf	___ftmul@f2+2,w,c
  2996  000B52  1A35               	xorwf	___ftmul@sign,f,c
  2997  000B54  0E80               	movlw	128
  2998  000B56  1635               	andwf	___ftmul@sign,f,c
  2999  000B58  8E28               	bsf	___ftmul@f1+1,7,c
  3000  000B5A  8E2B               	bsf	___ftmul@f2+1,7,c
  3001  000B5C  0EFF               	movlw	255
  3002  000B5E  162A               	andwf	___ftmul@f2,f,c
  3003  000B60  0EFF               	movlw	255
  3004  000B62  162B               	andwf	___ftmul@f2+1,f,c
  3005  000B64  0E00               	movlw	0
  3006  000B66  162C               	andwf	___ftmul@f2+2,f,c
  3007  000B68  0E00               	movlw	0
  3008  000B6A  6E31               	movwf	___ftmul@f3_as_product,c
  3009  000B6C  0E00               	movlw	0
  3010  000B6E  6E32               	movwf	___ftmul@f3_as_product+1,c
  3011  000B70  0E00               	movlw	0
  3012  000B72  6E33               	movwf	___ftmul@f3_as_product+2,c
  3013  000B74  0E07               	movlw	7
  3014  000B76  6E34               	movwf	___ftmul@cntr,c
  3015  000B78  A027               	btfss	___ftmul@f1,0,c
  3016  000B7A  D006               	goto	l555
  3017  000B7C  502A               	movf	___ftmul@f2,w,c
  3018  000B7E  2631               	addwf	___ftmul@f3_as_product,f,c
  3019  000B80  502B               	movf	___ftmul@f2+1,w,c
  3020  000B82  2232               	addwfc	___ftmul@f3_as_product+1,f,c
  3021  000B84  502C               	movf	___ftmul@f2+2,w,c
  3022  000B86  2233               	addwfc	___ftmul@f3_as_product+2,f,c
  3023  000B88                     l555:
  3024  000B88  90D8               	bcf	status,0,c
  3025  000B8A  3229               	rrcf	___ftmul@f1+2,f,c
  3026  000B8C  3228               	rrcf	___ftmul@f1+1,f,c
  3027  000B8E  3227               	rrcf	___ftmul@f1,f,c
  3028  000B90  90D8               	bcf	status,0,c
  3029  000B92  362A               	rlcf	___ftmul@f2,f,c
  3030  000B94  362B               	rlcf	___ftmul@f2+1,f,c
  3031  000B96  362C               	rlcf	___ftmul@f2+2,f,c
  3032  000B98  2E34               	decfsz	___ftmul@cntr,f,c
  3033  000B9A  D7EE               	goto	l554
  3034  000B9C  0E09               	movlw	9
  3035  000B9E  6E34               	movwf	___ftmul@cntr,c
  3036  000BA0  A027               	btfss	___ftmul@f1,0,c
  3037  000BA2  D006               	goto	l558
  3038  000BA4  502A               	movf	___ftmul@f2,w,c
  3039  000BA6  2631               	addwf	___ftmul@f3_as_product,f,c
  3040  000BA8  502B               	movf	___ftmul@f2+1,w,c
  3041  000BAA  2232               	addwfc	___ftmul@f3_as_product+1,f,c
  3042  000BAC  502C               	movf	___ftmul@f2+2,w,c
  3043  000BAE  2233               	addwfc	___ftmul@f3_as_product+2,f,c
  3044  000BB0                     l558:
  3045  000BB0  90D8               	bcf	status,0,c
  3046  000BB2  3229               	rrcf	___ftmul@f1+2,f,c
  3047  000BB4  3228               	rrcf	___ftmul@f1+1,f,c
  3048  000BB6  3227               	rrcf	___ftmul@f1,f,c
  3049  000BB8  90D8               	bcf	status,0,c
  3050  000BBA  3233               	rrcf	___ftmul@f3_as_product+2,f,c
  3051  000BBC  3232               	rrcf	___ftmul@f3_as_product+1,f,c
  3052  000BBE  3231               	rrcf	___ftmul@f3_as_product,f,c
  3053  000BC0  2E34               	decfsz	___ftmul@cntr,f,c
  3054  000BC2  D7EE               	goto	l557
  3055  000BC4  C031  F013         	movff	___ftmul@f3_as_product,___ftpack@arg
  3056  000BC8  C032  F014         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3057  000BCC  C033  F015         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3058  000BD0  C030  F016         	movff	___ftmul@exp,___ftpack@exp
  3059  000BD4  C035  F017         	movff	___ftmul@sign,___ftpack@sign
  3060  000BD8  EC68  F006         	call	___ftpack	;wreg free
  3061  000BDC  C013  F027         	movff	?___ftpack,?___ftmul
  3062  000BE0  C014  F028         	movff	?___ftpack+1,?___ftmul+1
  3063  000BE4  C015  F029         	movff	?___ftpack+2,?___ftmul+2
  3064  000BE8  0012               	return	
  3065  000BEA                     __end_of___ftmul:
  3066                           	opt stack 0
  3067                           tblptru	equ	0xFF8
  3068                           tblptrh	equ	0xFF7
  3069                           tblptrl	equ	0xFF6
  3070                           tablat	equ	0xFF5
  3071                           prodh	equ	0xFF4
  3072                           prodl	equ	0xFF3
  3073                           intcon	equ	0xFF2
  3074                           postinc0	equ	0xFEE
  3075                           wreg	equ	0xFE8
  3076                           postdec1	equ	0xFE5
  3077                           plusw1	equ	0xFE3
  3078                           fsr1l	equ	0xFE1
  3079                           indf2	equ	0xFDF
  3080                           plusw2	equ	0xFDB
  3081                           fsr2h	equ	0xFDA
  3082                           fsr2l	equ	0xFD9
  3083                           status	equ	0xFD8
  3084                           
  3085 ;; *************** function ___ftdiv *****************
  3086 ;; Defined at:
  3087 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;  f1              3   53[COMRAM] float 
  3090 ;;  f2              3   56[COMRAM] float 
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;  f3              3   63[COMRAM] float 
  3093 ;;  sign            1   67[COMRAM] unsigned char 
  3094 ;;  exp             1   66[COMRAM] unsigned char 
  3095 ;;  cntr            1   62[COMRAM] unsigned char 
  3096 ;; Return value:  Size  Location     Type
  3097 ;;                  3   53[COMRAM] float 
  3098 ;; Registers used:
  3099 ;;		wreg, status,2, status,0, cstack
  3100 ;; Tracked objects:
  3101 ;;		On entry : 0/0
  3102 ;;		On exit  : 0/0
  3103 ;;		Unchanged: 0/0
  3104 ;; Data sizes:     COMRAM   BANK0   BANK1
  3105 ;;      Params:         6       0       0
  3106 ;;      Locals:         6       0       0
  3107 ;;      Temps:          3       0       0
  3108 ;;      Totals:        15       0       0
  3109 ;;Total ram usage:       15 bytes
  3110 ;; Hardware stack levels used:    1
  3111 ;; Hardware stack levels required when called:    2
  3112 ;; This function calls:
  3113 ;;		___ftpack
  3114 ;; This function is called by:
  3115 ;;		_main
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119                           	psect	text13
  3120  000BEA                     __ptext13:
  3121                           	opt stack 0
  3122  000BEA                     ___ftdiv:
  3123                           	opt stack 28
  3124                           
  3125                           ;incstack = 0
  3126  000BEA  C038  F03C         	movff	___ftdiv@f1+2,??___ftdiv
  3127  000BEE  6A3D               	clrf	(??___ftdiv+1)& (0+255),c
  3128  000BF0  6A3E               	clrf	(??___ftdiv+2)& (0+255),c
  3129  000BF2  3437               	rlcf	___ftdiv@f1+1,w,c
  3130  000BF4  363C               	rlcf	??___ftdiv& (0+255),f,c
  3131  000BF6  E301               	bnc	u2711
  3132  000BF8  803D               	bsf	(??___ftdiv+1)& (0+255),0,c
  3133  000BFA                     u2711:
  3134  000BFA  503C               	movf	??___ftdiv,w,c
  3135  000BFC  6E43               	movwf	___ftdiv@exp,c
  3136  000BFE  5043               	movf	___ftdiv@exp,w,c
  3137  000C00  A4D8               	btfss	status,2,c
  3138  000C02  D007               	goto	l536
  3139  000C04  0E00               	movlw	0
  3140  000C06  6E36               	movwf	?___ftdiv,c
  3141  000C08  0E00               	movlw	0
  3142  000C0A  6E37               	movwf	?___ftdiv+1,c
  3143  000C0C  0E00               	movlw	0
  3144  000C0E  6E38               	movwf	?___ftdiv+2,c
  3145  000C10  0012               	return	
  3146  000C12                     l536:
  3147  000C12  C03B  F03C         	movff	___ftdiv@f2+2,??___ftdiv
  3148  000C16  6A3D               	clrf	(??___ftdiv+1)& (0+255),c
  3149  000C18  6A3E               	clrf	(??___ftdiv+2)& (0+255),c
  3150  000C1A  343A               	rlcf	___ftdiv@f2+1,w,c
  3151  000C1C  363C               	rlcf	??___ftdiv& (0+255),f,c
  3152  000C1E  E301               	bnc	u2731
  3153  000C20  803D               	bsf	(??___ftdiv+1)& (0+255),0,c
  3154  000C22                     u2731:
  3155  000C22  503C               	movf	??___ftdiv,w,c
  3156  000C24  6E44               	movwf	___ftdiv@sign,c
  3157  000C26  5044               	movf	___ftdiv@sign,w,c
  3158  000C28  A4D8               	btfss	status,2,c
  3159  000C2A  D007               	goto	l538
  3160  000C2C  0E00               	movlw	0
  3161  000C2E  6E36               	movwf	?___ftdiv,c
  3162  000C30  0E00               	movlw	0
  3163  000C32  6E37               	movwf	?___ftdiv+1,c
  3164  000C34  0E00               	movlw	0
  3165  000C36  6E38               	movwf	?___ftdiv+2,c
  3166  000C38  0012               	return	
  3167  000C3A                     l538:
  3168  000C3A  0E00               	movlw	0
  3169  000C3C  6E40               	movwf	___ftdiv@f3,c
  3170  000C3E  0E00               	movlw	0
  3171  000C40  6E41               	movwf	___ftdiv@f3+1,c
  3172  000C42  0E00               	movlw	0
  3173  000C44  6E42               	movwf	___ftdiv@f3+2,c
  3174  000C46  5044               	movf	___ftdiv@sign,w,c
  3175  000C48  0F89               	addlw	137
  3176  000C4A  5E43               	subwf	___ftdiv@exp,f,c
  3177  000C4C  C038  F044         	movff	___ftdiv@f1+2,___ftdiv@sign
  3178  000C50  503B               	movf	___ftdiv@f2+2,w,c
  3179  000C52  1A44               	xorwf	___ftdiv@sign,f,c
  3180  000C54  0E80               	movlw	128
  3181  000C56  1644               	andwf	___ftdiv@sign,f,c
  3182  000C58  8E37               	bsf	___ftdiv@f1+1,7,c
  3183  000C5A  0EFF               	movlw	255
  3184  000C5C  1636               	andwf	___ftdiv@f1,f,c
  3185  000C5E  0EFF               	movlw	255
  3186  000C60  1637               	andwf	___ftdiv@f1+1,f,c
  3187  000C62  0E00               	movlw	0
  3188  000C64  1638               	andwf	___ftdiv@f1+2,f,c
  3189  000C66  8E3A               	bsf	___ftdiv@f2+1,7,c
  3190  000C68  0EFF               	movlw	255
  3191  000C6A  1639               	andwf	___ftdiv@f2,f,c
  3192  000C6C  0EFF               	movlw	255
  3193  000C6E  163A               	andwf	___ftdiv@f2+1,f,c
  3194  000C70  0E00               	movlw	0
  3195  000C72  163B               	andwf	___ftdiv@f2+2,f,c
  3196  000C74  0E18               	movlw	24
  3197  000C76  6E3F               	movwf	___ftdiv@cntr,c
  3198  000C78  90D8               	bcf	status,0,c
  3199  000C7A  3640               	rlcf	___ftdiv@f3,f,c
  3200  000C7C  3641               	rlcf	___ftdiv@f3+1,f,c
  3201  000C7E  3642               	rlcf	___ftdiv@f3+2,f,c
  3202  000C80  5039               	movf	___ftdiv@f2,w,c
  3203  000C82  5C36               	subwf	___ftdiv@f1,w,c
  3204  000C84  503A               	movf	___ftdiv@f2+1,w,c
  3205  000C86  5837               	subwfb	___ftdiv@f1+1,w,c
  3206  000C88  503B               	movf	___ftdiv@f2+2,w,c
  3207  000C8A  5838               	subwfb	___ftdiv@f1+2,w,c
  3208  000C8C  A0D8               	btfss	status,0,c
  3209  000C8E  D007               	goto	l540
  3210  000C90  5039               	movf	___ftdiv@f2,w,c
  3211  000C92  5E36               	subwf	___ftdiv@f1,f,c
  3212  000C94  503A               	movf	___ftdiv@f2+1,w,c
  3213  000C96  5A37               	subwfb	___ftdiv@f1+1,f,c
  3214  000C98  503B               	movf	___ftdiv@f2+2,w,c
  3215  000C9A  5A38               	subwfb	___ftdiv@f1+2,f,c
  3216  000C9C  8040               	bsf	___ftdiv@f3,0,c
  3217  000C9E                     l540:
  3218  000C9E  90D8               	bcf	status,0,c
  3219  000CA0  3636               	rlcf	___ftdiv@f1,f,c
  3220  000CA2  3637               	rlcf	___ftdiv@f1+1,f,c
  3221  000CA4  3638               	rlcf	___ftdiv@f1+2,f,c
  3222  000CA6  2E3F               	decfsz	___ftdiv@cntr,f,c
  3223  000CA8  D7E7               	goto	l539
  3224  000CAA  C040  F013         	movff	___ftdiv@f3,___ftpack@arg
  3225  000CAE  C041  F014         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3226  000CB2  C042  F015         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3227  000CB6  C043  F016         	movff	___ftdiv@exp,___ftpack@exp
  3228  000CBA  C044  F017         	movff	___ftdiv@sign,___ftpack@sign
  3229  000CBE  EC68  F006         	call	___ftpack	;wreg free
  3230  000CC2  C013  F036         	movff	?___ftpack,?___ftdiv
  3231  000CC6  C014  F037         	movff	?___ftpack+1,?___ftdiv+1
  3232  000CCA  C015  F038         	movff	?___ftpack+2,?___ftdiv+2
  3233  000CCE  0012               	return	
  3234  000CD0                     __end_of___ftdiv:
  3235                           	opt stack 0
  3236                           tblptru	equ	0xFF8
  3237                           tblptrh	equ	0xFF7
  3238                           tblptrl	equ	0xFF6
  3239                           tablat	equ	0xFF5
  3240                           prodh	equ	0xFF4
  3241                           prodl	equ	0xFF3
  3242                           intcon	equ	0xFF2
  3243                           postinc0	equ	0xFEE
  3244                           wreg	equ	0xFE8
  3245                           postdec1	equ	0xFE5
  3246                           plusw1	equ	0xFE3
  3247                           fsr1l	equ	0xFE1
  3248                           indf2	equ	0xFDF
  3249                           plusw2	equ	0xFDB
  3250                           fsr2h	equ	0xFDA
  3251                           fsr2l	equ	0xFD9
  3252                           status	equ	0xFD8
  3253                           
  3254 ;; *************** function ___ftadd *****************
  3255 ;; Defined at:
  3256 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;  f1              3   26[COMRAM] float 
  3259 ;;  f2              3   29[COMRAM] float 
  3260 ;; Auto vars:     Size  Location     Type
  3261 ;;  exp1            1   37[COMRAM] unsigned char 
  3262 ;;  exp2            1   36[COMRAM] unsigned char 
  3263 ;;  sign            1   35[COMRAM] unsigned char 
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  3   26[COMRAM] float 
  3266 ;; Registers used:
  3267 ;;		wreg, status,2, status,0, cstack
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMRAM   BANK0   BANK1
  3273 ;;      Params:         6       0       0
  3274 ;;      Locals:         3       0       0
  3275 ;;      Temps:          3       0       0
  3276 ;;      Totals:        12       0       0
  3277 ;;Total ram usage:       12 bytes
  3278 ;; Hardware stack levels used:    1
  3279 ;; Hardware stack levels required when called:    2
  3280 ;; This function calls:
  3281 ;;		___ftpack
  3282 ;; This function is called by:
  3283 ;;		_main
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286                           
  3287                           	psect	text14
  3288  000856                     __ptext14:
  3289                           	opt stack 0
  3290  000856                     ___ftadd:
  3291                           	opt stack 28
  3292                           
  3293                           ;incstack = 0
  3294  000856  C01D  F021         	movff	___ftadd@f1+2,??___ftadd
  3295  00085A  6A22               	clrf	(??___ftadd+1)& (0+255),c
  3296  00085C  6A23               	clrf	(??___ftadd+2)& (0+255),c
  3297  00085E  341C               	rlcf	___ftadd@f1+1,w,c
  3298  000860  3621               	rlcf	??___ftadd& (0+255),f,c
  3299  000862  E301               	bnc	u2501
  3300  000864  8022               	bsf	(??___ftadd+1)& (0+255),0,c
  3301  000866                     u2501:
  3302  000866  5021               	movf	??___ftadd,w,c
  3303  000868  6E26               	movwf	___ftadd@exp1,c
  3304  00086A  C020  F021         	movff	___ftadd@f2+2,??___ftadd
  3305  00086E  6A22               	clrf	(??___ftadd+1)& (0+255),c
  3306  000870  6A23               	clrf	(??___ftadd+2)& (0+255),c
  3307  000872  341F               	rlcf	___ftadd@f2+1,w,c
  3308  000874  3621               	rlcf	??___ftadd& (0+255),f,c
  3309  000876  E301               	bnc	u2511
  3310  000878  8022               	bsf	(??___ftadd+1)& (0+255),0,c
  3311  00087A                     u2511:
  3312  00087A  5021               	movf	??___ftadd,w,c
  3313  00087C  6E25               	movwf	___ftadd@exp2,c
  3314  00087E  5026               	movf	___ftadd@exp1,w,c
  3315  000880  B4D8               	btfsc	status,2,c
  3316  000882  D00B               	goto	u2540
  3317  000884  5025               	movf	___ftadd@exp2,w,c
  3318  000886  5C26               	subwf	___ftadd@exp1,w,c
  3319  000888  B0D8               	btfsc	status,0,c
  3320  00088A  D00E               	goto	l503
  3321  00088C  5026               	movf	___ftadd@exp1,w,c
  3322  00088E  0800               	sublw	0
  3323  000890  2425               	addwf	___ftadd@exp2,w,c
  3324  000892  6E21               	movwf	??___ftadd& (0+255),c
  3325  000894  0E18               	movlw	24
  3326  000896  6421               	cpfsgt	??___ftadd,c
  3327  000898  D007               	goto	l503
  3328  00089A                     u2540:
  3329  00089A  C01E  F01B         	movff	___ftadd@f2,?___ftadd
  3330  00089E  C01F  F01C         	movff	___ftadd@f2+1,?___ftadd+1
  3331  0008A2  C020  F01D         	movff	___ftadd@f2+2,?___ftadd+2
  3332  0008A6  0012               	return	
  3333  0008A8                     l503:
  3334  0008A8  5025               	movf	___ftadd@exp2,w,c
  3335  0008AA  B4D8               	btfsc	status,2,c
  3336  0008AC  D00B               	goto	u2570
  3337  0008AE  5026               	movf	___ftadd@exp1,w,c
  3338  0008B0  5C25               	subwf	___ftadd@exp2,w,c
  3339  0008B2  B0D8               	btfsc	status,0,c
  3340  0008B4  D00E               	goto	l507
  3341  0008B6  5025               	movf	___ftadd@exp2,w,c
  3342  0008B8  0800               	sublw	0
  3343  0008BA  2426               	addwf	___ftadd@exp1,w,c
  3344  0008BC  6E21               	movwf	??___ftadd& (0+255),c
  3345  0008BE  0E18               	movlw	24
  3346  0008C0  6421               	cpfsgt	??___ftadd,c
  3347  0008C2  D007               	goto	l507
  3348  0008C4                     u2570:
  3349  0008C4  C01B  F01B         	movff	___ftadd@f1,?___ftadd
  3350  0008C8  C01C  F01C         	movff	___ftadd@f1+1,?___ftadd+1
  3351  0008CC  C01D  F01D         	movff	___ftadd@f1+2,?___ftadd+2
  3352  0008D0  0012               	return	
  3353  0008D2                     l507:
  3354  0008D2  0E06               	movlw	6
  3355  0008D4  6E24               	movwf	___ftadd@sign,c
  3356  0008D6  BE1D               	btfsc	___ftadd@f1+2,7,c
  3357  0008D8  8E24               	bsf	___ftadd@sign,7,c
  3358  0008DA  BE20               	btfsc	___ftadd@f2+2,7,c
  3359  0008DC  8C24               	bsf	___ftadd@sign,6,c
  3360  0008DE  8E1C               	bsf	___ftadd@f1+1,7,c
  3361  0008E0  0EFF               	movlw	255
  3362  0008E2  161B               	andwf	___ftadd@f1,f,c
  3363  0008E4  0EFF               	movlw	255
  3364  0008E6  161C               	andwf	___ftadd@f1+1,f,c
  3365  0008E8  0E00               	movlw	0
  3366  0008EA  161D               	andwf	___ftadd@f1+2,f,c
  3367  0008EC  8E1F               	bsf	___ftadd@f2+1,7,c
  3368  0008EE  0EFF               	movlw	255
  3369  0008F0  161E               	andwf	___ftadd@f2,f,c
  3370  0008F2  0EFF               	movlw	255
  3371  0008F4  161F               	andwf	___ftadd@f2+1,f,c
  3372  0008F6  0E00               	movlw	0
  3373  0008F8  1620               	andwf	___ftadd@f2+2,f,c
  3374  0008FA  5025               	movf	___ftadd@exp2,w,c
  3375  0008FC  5C26               	subwf	___ftadd@exp1,w,c
  3376  0008FE  B0D8               	btfsc	status,0,c
  3377  000900  D01B               	goto	l512
  3378  000902                     u2600:
  3379  000902  90D8               	bcf	status,0,c
  3380  000904  361E               	rlcf	___ftadd@f2,f,c
  3381  000906  361F               	rlcf	___ftadd@f2+1,f,c
  3382  000908  3620               	rlcf	___ftadd@f2+2,f,c
  3383  00090A  0625               	decf	___ftadd@exp2,f,c
  3384  00090C  5026               	movf	___ftadd@exp1,w,c
  3385  00090E  1825               	xorwf	___ftadd@exp2,w,c
  3386  000910  B4D8               	btfsc	status,2,c
  3387  000912  D00D               	goto	l517
  3388  000914  0624               	decf	___ftadd@sign,f,c
  3389  000916  C024  F021         	movff	___ftadd@sign,??___ftadd
  3390  00091A  0E07               	movlw	7
  3391  00091C  1621               	andwf	??___ftadd,f,c
  3392  00091E  B4D8               	btfsc	status,2,c
  3393  000920  D006               	goto	l517
  3394  000922  D7EF               	goto	u2600
  3395  000924  90D8               	bcf	status,0,c
  3396  000926  321D               	rrcf	___ftadd@f1+2,f,c
  3397  000928  321C               	rrcf	___ftadd@f1+1,f,c
  3398  00092A  321B               	rrcf	___ftadd@f1,f,c
  3399  00092C  2A26               	incf	___ftadd@exp1,f,c
  3400  00092E                     l517:
  3401  00092E  5025               	movf	___ftadd@exp2,w,c
  3402  000930  1826               	xorwf	___ftadd@exp1,w,c
  3403  000932  B4D8               	btfsc	status,2,c
  3404  000934  D01F               	goto	u2670
  3405  000936  D7F6               	goto	l518
  3406  000938                     l512:
  3407  000938  5026               	movf	___ftadd@exp1,w,c
  3408  00093A  5C25               	subwf	___ftadd@exp2,w,c
  3409  00093C  B0D8               	btfsc	status,0,c
  3410  00093E  D01A               	goto	u2670
  3411  000940                     u2640:
  3412  000940  90D8               	bcf	status,0,c
  3413  000942  361B               	rlcf	___ftadd@f1,f,c
  3414  000944  361C               	rlcf	___ftadd@f1+1,f,c
  3415  000946  361D               	rlcf	___ftadd@f1+2,f,c
  3416  000948  0626               	decf	___ftadd@exp1,f,c
  3417  00094A  5026               	movf	___ftadd@exp1,w,c
  3418  00094C  1825               	xorwf	___ftadd@exp2,w,c
  3419  00094E  B4D8               	btfsc	status,2,c
  3420  000950  D00D               	goto	l526
  3421  000952  0624               	decf	___ftadd@sign,f,c
  3422  000954  C024  F021         	movff	___ftadd@sign,??___ftadd
  3423  000958  0E07               	movlw	7
  3424  00095A  1621               	andwf	??___ftadd,f,c
  3425  00095C  B4D8               	btfsc	status,2,c
  3426  00095E  D006               	goto	l526
  3427  000960  D7EF               	goto	u2640
  3428  000962  90D8               	bcf	status,0,c
  3429  000964  3220               	rrcf	___ftadd@f2+2,f,c
  3430  000966  321F               	rrcf	___ftadd@f2+1,f,c
  3431  000968  321E               	rrcf	___ftadd@f2,f,c
  3432  00096A  2A25               	incf	___ftadd@exp2,f,c
  3433  00096C                     l526:
  3434  00096C  5025               	movf	___ftadd@exp2,w,c
  3435  00096E  1826               	xorwf	___ftadd@exp1,w,c
  3436  000970  A4D8               	btfss	status,2,c
  3437  000972  D7F7               	goto	l527
  3438  000974                     u2670:
  3439  000974  AE24               	btfss	___ftadd@sign,7,c
  3440  000976  D00C               	goto	l529
  3441  000978  0EFF               	movlw	255
  3442  00097A  1A1B               	xorwf	___ftadd@f1,f,c
  3443  00097C  0EFF               	movlw	255
  3444  00097E  1A1C               	xorwf	___ftadd@f1+1,f,c
  3445  000980  0EFF               	movlw	255
  3446  000982  1A1D               	xorwf	___ftadd@f1+2,f,c
  3447  000984  0E01               	movlw	1
  3448  000986  261B               	addwf	___ftadd@f1,f,c
  3449  000988  0E00               	movlw	0
  3450  00098A  221C               	addwfc	___ftadd@f1+1,f,c
  3451  00098C  0E00               	movlw	0
  3452  00098E  221D               	addwfc	___ftadd@f1+2,f,c
  3453  000990                     l529:
  3454  000990  AC24               	btfss	___ftadd@sign,6,c
  3455  000992  D00C               	goto	l530
  3456  000994  0EFF               	movlw	255
  3457  000996  1A1E               	xorwf	___ftadd@f2,f,c
  3458  000998  0EFF               	movlw	255
  3459  00099A  1A1F               	xorwf	___ftadd@f2+1,f,c
  3460  00099C  0EFF               	movlw	255
  3461  00099E  1A20               	xorwf	___ftadd@f2+2,f,c
  3462  0009A0  0E01               	movlw	1
  3463  0009A2  261E               	addwf	___ftadd@f2,f,c
  3464  0009A4  0E00               	movlw	0
  3465  0009A6  221F               	addwfc	___ftadd@f2+1,f,c
  3466  0009A8  0E00               	movlw	0
  3467  0009AA  2220               	addwfc	___ftadd@f2+2,f,c
  3468  0009AC                     l530:
  3469  0009AC  0E00               	movlw	0
  3470  0009AE  6E24               	movwf	___ftadd@sign,c
  3471  0009B0  501B               	movf	___ftadd@f1,w,c
  3472  0009B2  261E               	addwf	___ftadd@f2,f,c
  3473  0009B4  501C               	movf	___ftadd@f1+1,w,c
  3474  0009B6  221F               	addwfc	___ftadd@f2+1,f,c
  3475  0009B8  501D               	movf	___ftadd@f1+2,w,c
  3476  0009BA  2220               	addwfc	___ftadd@f2+2,f,c
  3477  0009BC  AE20               	btfss	___ftadd@f2+2,7,c
  3478  0009BE  D00E               	goto	l531
  3479  0009C0  0EFF               	movlw	255
  3480  0009C2  1A1E               	xorwf	___ftadd@f2,f,c
  3481  0009C4  0EFF               	movlw	255
  3482  0009C6  1A1F               	xorwf	___ftadd@f2+1,f,c
  3483  0009C8  0EFF               	movlw	255
  3484  0009CA  1A20               	xorwf	___ftadd@f2+2,f,c
  3485  0009CC  0E01               	movlw	1
  3486  0009CE  261E               	addwf	___ftadd@f2,f,c
  3487  0009D0  0E00               	movlw	0
  3488  0009D2  221F               	addwfc	___ftadd@f2+1,f,c
  3489  0009D4  0E00               	movlw	0
  3490  0009D6  2220               	addwfc	___ftadd@f2+2,f,c
  3491  0009D8  0E01               	movlw	1
  3492  0009DA  6E24               	movwf	___ftadd@sign,c
  3493  0009DC                     l531:
  3494  0009DC  C01E  F013         	movff	___ftadd@f2,___ftpack@arg
  3495  0009E0  C01F  F014         	movff	___ftadd@f2+1,___ftpack@arg+1
  3496  0009E4  C020  F015         	movff	___ftadd@f2+2,___ftpack@arg+2
  3497  0009E8  C026  F016         	movff	___ftadd@exp1,___ftpack@exp
  3498  0009EC  C024  F017         	movff	___ftadd@sign,___ftpack@sign
  3499  0009F0  EC68  F006         	call	___ftpack	;wreg free
  3500  0009F4  C013  F01B         	movff	?___ftpack,?___ftadd
  3501  0009F8  C014  F01C         	movff	?___ftpack+1,?___ftadd+1
  3502  0009FC  C015  F01D         	movff	?___ftpack+2,?___ftadd+2
  3503  000A00  0012               	return	
  3504  000A02                     __end_of___ftadd:
  3505                           	opt stack 0
  3506                           tblptru	equ	0xFF8
  3507                           tblptrh	equ	0xFF7
  3508                           tblptrl	equ	0xFF6
  3509                           tablat	equ	0xFF5
  3510                           prodh	equ	0xFF4
  3511                           prodl	equ	0xFF3
  3512                           intcon	equ	0xFF2
  3513                           postinc0	equ	0xFEE
  3514                           wreg	equ	0xFE8
  3515                           postdec1	equ	0xFE5
  3516                           plusw1	equ	0xFE3
  3517                           fsr1l	equ	0xFE1
  3518                           indf2	equ	0xFDF
  3519                           plusw2	equ	0xFDB
  3520                           fsr2h	equ	0xFDA
  3521                           fsr2l	equ	0xFD9
  3522                           status	equ	0xFD8
  3523                           
  3524 ;; *************** function ___ftpack *****************
  3525 ;; Defined at:
  3526 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  3527 ;; Parameters:    Size  Location     Type
  3528 ;;  arg             3   18[COMRAM] unsigned um
  3529 ;;  exp             1   21[COMRAM] unsigned char 
  3530 ;;  sign            1   22[COMRAM] unsigned char 
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;		None
  3533 ;; Return value:  Size  Location     Type
  3534 ;;                  3   18[COMRAM] float 
  3535 ;; Registers used:
  3536 ;;		wreg, status,2, status,0
  3537 ;; Tracked objects:
  3538 ;;		On entry : 0/0
  3539 ;;		On exit  : 0/0
  3540 ;;		Unchanged: 0/0
  3541 ;; Data sizes:     COMRAM   BANK0   BANK1
  3542 ;;      Params:         5       0       0
  3543 ;;      Locals:         0       0       0
  3544 ;;      Temps:          3       0       0
  3545 ;;      Totals:         8       0       0
  3546 ;;Total ram usage:        8 bytes
  3547 ;; Hardware stack levels used:    1
  3548 ;; Hardware stack levels required when called:    1
  3549 ;; This function calls:
  3550 ;;		Nothing
  3551 ;; This function is called by:
  3552 ;;		___ftadd
  3553 ;;		___ftdiv
  3554 ;;		___ftmul
  3555 ;;		___lltoft
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558                           
  3559                           	psect	text15
  3560  000CD0                     __ptext15:
  3561                           	opt stack 0
  3562  000CD0                     ___ftpack:
  3563                           	opt stack 28
  3564                           
  3565                           ;incstack = 0
  3566  000CD0  5016               	movf	___ftpack@exp,w,c
  3567  000CD2  B4D8               	btfsc	status,2,c
  3568  000CD4  D005               	goto	u2080
  3569  000CD6  5013               	movf	___ftpack@arg,w,c
  3570  000CD8  1014               	iorwf	___ftpack@arg+1,w,c
  3571  000CDA  1015               	iorwf	___ftpack@arg+2,w,c
  3572  000CDC  A4D8               	btfss	status,2,c
  3573  000CDE  D00C               	goto	l472
  3574  000CE0                     u2080:
  3575  000CE0  0E00               	movlw	0
  3576  000CE2  6E13               	movwf	?___ftpack,c
  3577  000CE4  0E00               	movlw	0
  3578  000CE6  6E14               	movwf	?___ftpack+1,c
  3579  000CE8  0E00               	movlw	0
  3580  000CEA  6E15               	movwf	?___ftpack+2,c
  3581  000CEC  0012               	return	
  3582  000CEE  2A16               	incf	___ftpack@exp,f,c
  3583  000CF0  90D8               	bcf	status,0,c
  3584  000CF2  3215               	rrcf	___ftpack@arg+2,f,c
  3585  000CF4  3214               	rrcf	___ftpack@arg+1,f,c
  3586  000CF6  3213               	rrcf	___ftpack@arg,f,c
  3587  000CF8                     l472:
  3588  000CF8  0E00               	movlw	0
  3589  000CFA  1413               	andwf	___ftpack@arg,w,c
  3590  000CFC  6E18               	movwf	??___ftpack& (0+255),c
  3591  000CFE  0E00               	movlw	0
  3592  000D00  1414               	andwf	___ftpack@arg+1,w,c
  3593  000D02  6E19               	movwf	(??___ftpack+1)& (0+255),c
  3594  000D04  0EFE               	movlw	254
  3595  000D06  1415               	andwf	___ftpack@arg+2,w,c
  3596  000D08  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  3597  000D0A  5018               	movf	??___ftpack,w,c
  3598  000D0C  1019               	iorwf	??___ftpack+1,w,c
  3599  000D0E  101A               	iorwf	??___ftpack+2,w,c
  3600  000D10  B4D8               	btfsc	status,2,c
  3601  000D12  D00C               	goto	l475
  3602  000D14  D7EC               	goto	l473
  3603  000D16  2A16               	incf	___ftpack@exp,f,c
  3604  000D18  0E01               	movlw	1
  3605  000D1A  2613               	addwf	___ftpack@arg,f,c
  3606  000D1C  0E00               	movlw	0
  3607  000D1E  2214               	addwfc	___ftpack@arg+1,f,c
  3608  000D20  0E00               	movlw	0
  3609  000D22  2215               	addwfc	___ftpack@arg+2,f,c
  3610  000D24  90D8               	bcf	status,0,c
  3611  000D26  3215               	rrcf	___ftpack@arg+2,f,c
  3612  000D28  3214               	rrcf	___ftpack@arg+1,f,c
  3613  000D2A  3213               	rrcf	___ftpack@arg,f,c
  3614  000D2C                     l475:
  3615  000D2C  0E00               	movlw	0
  3616  000D2E  1413               	andwf	___ftpack@arg,w,c
  3617  000D30  6E18               	movwf	??___ftpack& (0+255),c
  3618  000D32  0E00               	movlw	0
  3619  000D34  1414               	andwf	___ftpack@arg+1,w,c
  3620  000D36  6E19               	movwf	(??___ftpack+1)& (0+255),c
  3621  000D38  0EFF               	movlw	255
  3622  000D3A  1415               	andwf	___ftpack@arg+2,w,c
  3623  000D3C  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  3624  000D3E  5018               	movf	??___ftpack,w,c
  3625  000D40  1019               	iorwf	??___ftpack+1,w,c
  3626  000D42  101A               	iorwf	??___ftpack+2,w,c
  3627  000D44  B4D8               	btfsc	status,2,c
  3628  000D46  D006               	goto	l478
  3629  000D48  D7E6               	goto	l476
  3630  000D4A  0616               	decf	___ftpack@exp,f,c
  3631  000D4C  90D8               	bcf	status,0,c
  3632  000D4E  3613               	rlcf	___ftpack@arg,f,c
  3633  000D50  3614               	rlcf	___ftpack@arg+1,f,c
  3634  000D52  3615               	rlcf	___ftpack@arg+2,f,c
  3635  000D54                     l478:
  3636  000D54  BE14               	btfsc	___ftpack@arg+1,7,c
  3637  000D56  D003               	goto	u2120
  3638  000D58  0E02               	movlw	2
  3639  000D5A  6016               	cpfslt	___ftpack@exp,c
  3640  000D5C  D7F6               	goto	l479
  3641  000D5E                     u2120:
  3642  000D5E  A016               	btfss	___ftpack@exp,0,c
  3643  000D60  9E14               	bcf	___ftpack@arg+1,7,c
  3644  000D62  90D8               	bcf	status,0,c
  3645  000D64  3216               	rrcf	___ftpack@exp,f,c
  3646  000D66  5016               	movf	___ftpack@exp,w,c
  3647  000D68  1215               	iorwf	___ftpack@arg+2,f,c
  3648  000D6A  5017               	movf	___ftpack@sign,w,c
  3649  000D6C  A4D8               	btfss	status,2,c
  3650  000D6E  8E15               	bsf	___ftpack@arg+2,7,c
  3651  000D70  C013  F013         	movff	___ftpack@arg,?___ftpack
  3652  000D74  C014  F014         	movff	___ftpack@arg+1,?___ftpack+1
  3653  000D78  C015  F015         	movff	___ftpack@arg+2,?___ftpack+2
  3654  000D7C  0012               	return	
  3655  000D7E                     __end_of___ftpack:
  3656                           	opt stack 0
  3657                           tblptru	equ	0xFF8
  3658                           tblptrh	equ	0xFF7
  3659                           tblptrl	equ	0xFF6
  3660                           tablat	equ	0xFF5
  3661                           prodh	equ	0xFF4
  3662                           prodl	equ	0xFF3
  3663                           intcon	equ	0xFF2
  3664                           postinc0	equ	0xFEE
  3665                           wreg	equ	0xFE8
  3666                           postdec1	equ	0xFE5
  3667                           plusw1	equ	0xFE3
  3668                           fsr1l	equ	0xFE1
  3669                           indf2	equ	0xFDF
  3670                           plusw2	equ	0xFDB
  3671                           fsr2h	equ	0xFDA
  3672                           fsr2l	equ	0xFD9
  3673                           status	equ	0xFD8
  3674                           
  3675 ;; *************** function _UART_Write *****************
  3676 ;; Defined at:
  3677 ;;		line 381 in file "test.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;  info            2   24[COMRAM] PTR unsigned char 
  3680 ;;		 -> STR_2(25), STR_1(10), measuringDisplay(13), bpmDisplay(25), 
  3681 ;;		 -> sysDisplay(20), diasDisplay(21), 
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;  i               2   28[COMRAM] int 
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1    wreg      void 
  3686 ;; Registers used:
  3687 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMRAM   BANK0   BANK1
  3693 ;;      Params:         2       0       0
  3694 ;;      Locals:         2       0       0
  3695 ;;      Temps:          2       0       0
  3696 ;;      Totals:         6       0       0
  3697 ;;Total ram usage:        6 bytes
  3698 ;; Hardware stack levels used:    1
  3699 ;; Hardware stack levels required when called:    2
  3700 ;; This function calls:
  3701 ;;		_UART_TX_Busy
  3702 ;;		_strlen
  3703 ;; This function is called by:
  3704 ;;		_main
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708                           	psect	text16
  3709  000F28                     __ptext16:
  3710                           	opt stack 0
  3711  000F28                     _UART_Write:
  3712                           	opt stack 28
  3713                           
  3714                           ;test.c: 382: int i;
  3715                           ;test.c: 383: for (i = 0; i < strlen(info); i++) {
  3716                           
  3717                           ;incstack = 0
  3718  000F28  0E00               	movlw	0
  3719  000F2A  6E1E               	movwf	UART_Write@i+1,c
  3720  000F2C  0E00               	movlw	0
  3721  000F2E  6E1D               	movwf	UART_Write@i,c
  3722  000F30  D01E               	goto	l240
  3723  000F32                     
  3724                           ;test.c: 384: TXREG = info[i];
  3725  000F32  501D               	movf	UART_Write@i,w,c
  3726  000F34  2419               	addwf	UART_Write@info,w,c
  3727  000F36  6E1B               	movwf	??_UART_Write& (0+255),c
  3728  000F38  501E               	movf	UART_Write@i+1,w,c
  3729  000F3A  201A               	addwfc	UART_Write@info+1,w,c
  3730  000F3C  6E1C               	movwf	(??_UART_Write+1)& (0+255),c
  3731  000F3E  C01B  FFF6         	movff	??_UART_Write,tblptrl
  3732  000F42  C01C  FFF7         	movff	??_UART_Write+1,tblptrh
  3733  000F46  6AF8               	clrf	tblptru,c
  3734  000F48  0E01               	movlw	(high __ramtop+-1)
  3735  000F4A  64F7               	cpfsgt	tblptrh,c
  3736  000F4C  D003               	bra	u2327
  3737  000F4E  0008               	tblrd		*
  3738  000F50  50F5               	movf	tablat,w,c
  3739  000F52  D005               	bra	u2320
  3740  000F54                     u2327:
  3741  000F54  CFF6 FFE9          	movff	tblptrl,fsr0l
  3742  000F58  CFF7 FFEA          	movff	tblptrh,fsr0h
  3743  000F5C  50EF               	movf	indf0,w,c
  3744  000F5E                     u2320:
  3745  000F5E  6EAD               	movwf	4013,c	;volatile
  3746  000F60  ECF4  F008         	call	_UART_TX_Busy	;wreg free
  3747  000F64  0900               	iorlw	0
  3748  000F66  A4D8               	btfss	status,2,c
  3749  000F68  D7FB               	goto	l243
  3750  000F6A  4A1D               	infsnz	UART_Write@i,f,c
  3751  000F6C  2A1E               	incf	UART_Write@i+1,f,c
  3752  000F6E                     l240:
  3753  000F6E  C019  F013         	movff	UART_Write@info,strlen@s
  3754  000F72  C01A  F014         	movff	UART_Write@info+1,strlen@s+1
  3755  000F76  EC7E  F008         	call	_strlen	;wreg free
  3756  000F7A  5013               	movf	?_strlen,w,c
  3757  000F7C  5C1D               	subwf	UART_Write@i,w,c
  3758  000F7E  5014               	movf	?_strlen+1,w,c
  3759  000F80  581E               	subwfb	UART_Write@i+1,w,c
  3760  000F82  B0D8               	btfsc	status,0,c
  3761  000F84  0012               	return	
  3762  000F86  D7D5               	goto	l241
  3763  000F88                     __end_of_UART_Write:
  3764                           	opt stack 0
  3765                           tblptru	equ	0xFF8
  3766                           tblptrh	equ	0xFF7
  3767                           tblptrl	equ	0xFF6
  3768                           tablat	equ	0xFF5
  3769                           prodh	equ	0xFF4
  3770                           prodl	equ	0xFF3
  3771                           intcon	equ	0xFF2
  3772                           indf0	equ	0xFEF
  3773                           postinc0	equ	0xFEE
  3774                           fsr0h	equ	0xFEA
  3775                           fsr0l	equ	0xFE9
  3776                           wreg	equ	0xFE8
  3777                           postdec1	equ	0xFE5
  3778                           plusw1	equ	0xFE3
  3779                           fsr1l	equ	0xFE1
  3780                           indf2	equ	0xFDF
  3781                           plusw2	equ	0xFDB
  3782                           fsr2h	equ	0xFDA
  3783                           fsr2l	equ	0xFD9
  3784                           status	equ	0xFD8
  3785                           
  3786 ;; *************** function _strlen *****************
  3787 ;; Defined at:
  3788 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
  3789 ;; Parameters:    Size  Location     Type
  3790 ;;  s               2   18[COMRAM] PTR const unsigned char 
  3791 ;;		 -> appendUnits@data2(5), STR_2(25), STR_1(10), measuringDisplay(13), 
  3792 ;;		 -> bpmDisplay(25), sysDisplay(20), diasDisplay(21), 
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;  cp              2   22[COMRAM] PTR const unsigned char 
  3795 ;;		 -> appendUnits@data2(5), STR_2(25), STR_1(10), measuringDisplay(13), 
  3796 ;;		 -> bpmDisplay(25), sysDisplay(20), diasDisplay(21), 
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  2   18[COMRAM] unsigned int 
  3799 ;; Registers used:
  3800 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMRAM   BANK0   BANK1
  3806 ;;      Params:         2       0       0
  3807 ;;      Locals:         2       0       0
  3808 ;;      Temps:          2       0       0
  3809 ;;      Totals:         6       0       0
  3810 ;;Total ram usage:        6 bytes
  3811 ;; Hardware stack levels used:    1
  3812 ;; Hardware stack levels required when called:    1
  3813 ;; This function calls:
  3814 ;;		Nothing
  3815 ;; This function is called by:
  3816 ;;		_appendUnits
  3817 ;;		_UART_Write
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           	psect	text17
  3822  0010FC                     __ptext17:
  3823                           	opt stack 0
  3824  0010FC                     _strlen:
  3825                           	opt stack 28
  3826                           
  3827                           ;incstack = 0
  3828  0010FC  C013  F017         	movff	strlen@s,strlen@cp
  3829  001100  C014  F018         	movff	strlen@s+1,strlen@cp+1
  3830  001104  D002               	goto	l805
  3831  001106  4A17               	infsnz	strlen@cp,f,c
  3832  001108  2A18               	incf	strlen@cp+1,f,c
  3833  00110A                     l805:
  3834  00110A  C017  FFF6         	movff	strlen@cp,tblptrl
  3835  00110E  C018  FFF7         	movff	strlen@cp+1,tblptrh
  3836  001112  6AF8               	clrf	tblptru,c
  3837  001114  0E01               	movlw	(high __ramtop+-1)
  3838  001116  64F7               	cpfsgt	tblptrh,c
  3839  001118  D003               	bra	u2057
  3840  00111A  0008               	tblrd		*
  3841  00111C  50F5               	movf	tablat,w,c
  3842  00111E  D005               	bra	u2050
  3843  001120                     u2057:
  3844  001120  CFF6 FFE9          	movff	tblptrl,fsr0l
  3845  001124  CFF7 FFEA          	movff	tblptrh,fsr0h
  3846  001128  50EF               	movf	indf0,w,c
  3847  00112A                     u2050:
  3848  00112A  0900               	iorlw	0
  3849  00112C  A4D8               	btfss	status,2,c
  3850  00112E  D7EB               	goto	l806
  3851  001130  C013  F015         	movff	strlen@s,??_strlen
  3852  001134  C014  F016         	movff	strlen@s+1,??_strlen+1
  3853  001138  1E15               	comf	??_strlen,f,c
  3854  00113A  1E16               	comf	??_strlen+1,f,c
  3855  00113C  4A15               	infsnz	??_strlen,f,c
  3856  00113E  2A16               	incf	??_strlen+1,f,c
  3857  001140  5017               	movf	strlen@cp,w,c
  3858  001142  2415               	addwf	??_strlen,w,c
  3859  001144  6E13               	movwf	?_strlen,c
  3860  001146  5018               	movf	strlen@cp+1,w,c
  3861  001148  2016               	addwfc	??_strlen+1,w,c
  3862  00114A  6E14               	movwf	?_strlen+1,c
  3863  00114C  0012               	return	
  3864  00114E                     __end_of_strlen:
  3865                           	opt stack 0
  3866                           tblptru	equ	0xFF8
  3867                           tblptrh	equ	0xFF7
  3868                           tblptrl	equ	0xFF6
  3869                           tablat	equ	0xFF5
  3870                           prodh	equ	0xFF4
  3871                           prodl	equ	0xFF3
  3872                           intcon	equ	0xFF2
  3873                           indf0	equ	0xFEF
  3874                           postinc0	equ	0xFEE
  3875                           fsr0h	equ	0xFEA
  3876                           fsr0l	equ	0xFE9
  3877                           wreg	equ	0xFE8
  3878                           postdec1	equ	0xFE5
  3879                           plusw1	equ	0xFE3
  3880                           fsr1l	equ	0xFE1
  3881                           indf2	equ	0xFDF
  3882                           plusw2	equ	0xFDB
  3883                           fsr2h	equ	0xFDA
  3884                           fsr2l	equ	0xFD9
  3885                           status	equ	0xFD8
  3886                           
  3887 ;; *************** function _UART_TX_Busy *****************
  3888 ;; Defined at:
  3889 ;;		line 373 in file "test.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;		None
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;		None
  3894 ;; Return value:  Size  Location     Type
  3895 ;;                  1    wreg      unsigned char 
  3896 ;; Registers used:
  3897 ;;		wreg
  3898 ;; Tracked objects:
  3899 ;;		On entry : 0/0
  3900 ;;		On exit  : 0/0
  3901 ;;		Unchanged: 0/0
  3902 ;; Data sizes:     COMRAM   BANK0   BANK1
  3903 ;;      Params:         0       0       0
  3904 ;;      Locals:         0       0       0
  3905 ;;      Temps:          0       0       0
  3906 ;;      Totals:         0       0       0
  3907 ;;Total ram usage:        0 bytes
  3908 ;; Hardware stack levels used:    1
  3909 ;; Hardware stack levels required when called:    1
  3910 ;; This function calls:
  3911 ;;		Nothing
  3912 ;; This function is called by:
  3913 ;;		_appendUnits
  3914 ;;		_printNewLine
  3915 ;;		_printData
  3916 ;;		_UART_Write
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920                           	psect	text18
  3921  0011E8                     __ptext18:
  3922                           	opt stack 0
  3923  0011E8                     _UART_TX_Busy:
  3924                           	opt stack 28
  3925                           
  3926                           ;test.c: 374: return (char) !TXSTAbits.TRMT;
  3927                           
  3928                           ;incstack = 0
  3929  0011E8  B2AC               	btfsc	4012,1,c	;volatile
  3930  0011EA  D002               	goto	u2030
  3931  0011EC  0E01               	movlw	1
  3932  0011EE  0012               	return	
  3933  0011F0                     u2030:
  3934  0011F0  0E00               	movlw	0
  3935  0011F2  0012               	return	
  3936  0011F4                     __end_of_UART_TX_Busy:
  3937                           	opt stack 0
  3938                           tblptru	equ	0xFF8
  3939                           tblptrh	equ	0xFF7
  3940                           tblptrl	equ	0xFF6
  3941                           tablat	equ	0xFF5
  3942                           prodh	equ	0xFF4
  3943                           prodl	equ	0xFF3
  3944                           intcon	equ	0xFF2
  3945                           indf0	equ	0xFEF
  3946                           postinc0	equ	0xFEE
  3947                           fsr0h	equ	0xFEA
  3948                           fsr0l	equ	0xFE9
  3949                           wreg	equ	0xFE8
  3950                           postdec1	equ	0xFE5
  3951                           plusw1	equ	0xFE3
  3952                           fsr1l	equ	0xFE1
  3953                           indf2	equ	0xFDF
  3954                           plusw2	equ	0xFDB
  3955                           fsr2h	equ	0xFDA
  3956                           fsr2l	equ	0xFD9
  3957                           status	equ	0xFD8
  3958                           
  3959 ;; *************** function _UART_Open *****************
  3960 ;; Defined at:
  3961 ;;		line 348 in file "test.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;  baudrate        4   18[COMRAM] const long 
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;		None
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  1    wreg      void 
  3968 ;; Registers used:
  3969 ;;		wreg, status,2
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMRAM   BANK0   BANK1
  3975 ;;      Params:         4       0       0
  3976 ;;      Locals:         0       0       0
  3977 ;;      Temps:          0       0       0
  3978 ;;      Totals:         4       0       0
  3979 ;;Total ram usage:        4 bytes
  3980 ;; Hardware stack levels used:    1
  3981 ;; Hardware stack levels required when called:    1
  3982 ;; This function calls:
  3983 ;;		Nothing
  3984 ;; This function is called by:
  3985 ;;		_main
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988                           
  3989                           	psect	text19
  3990  0011CE                     __ptext19:
  3991                           	opt stack 0
  3992  0011CE                     _UART_Open:
  3993                           	opt stack 29
  3994                           
  3995                           ;test.c: 350: BAUDCONbits.BRG16 = 0;
  3996                           
  3997                           ;incstack = 0
  3998  0011CE  96B8               	bcf	4024,3,c	;volatile
  3999                           
  4000                           ;test.c: 351: SPBRG = 12;
  4001  0011D0  0E0C               	movlw	12
  4002  0011D2  6EAF               	movwf	4015,c	;volatile
  4003                           
  4004                           ;test.c: 352: TXSTAbits.SYNC = 0;
  4005  0011D4  98AC               	bcf	4012,4,c	;volatile
  4006                           
  4007                           ;test.c: 353: TRISCbits.RC7 = 1;
  4008  0011D6  8E94               	bsf	3988,7,c	;volatile
  4009                           
  4010                           ;test.c: 354: TRISCbits.RC6 = 1;
  4011  0011D8  8C94               	bsf	3988,6,c	;volatile
  4012                           
  4013                           ;test.c: 355: RCSTAbits.CREN = 1;
  4014  0011DA  88AB               	bsf	4011,4,c	;volatile
  4015                           
  4016                           ;test.c: 356: TXSTAbits.TXEN = 1;
  4017  0011DC  8AAC               	bsf	4012,5,c	;volatile
  4018                           
  4019                           ;test.c: 357: RCSTAbits.SPEN = 1;
  4020  0011DE  8EAB               	bsf	4011,7,c	;volatile
  4021                           
  4022                           ;test.c: 360: PIE1bits.RCIE = 1;
  4023  0011E0  8A9D               	bsf	3997,5,c	;volatile
  4024                           
  4025                           ;test.c: 361: INTCONbits.GIE = 1;
  4026  0011E2  8EF2               	bsf	intcon,7,c	;volatile
  4027                           
  4028                           ;test.c: 362: INTCONbits.PEIE = 1;
  4029  0011E4  8CF2               	bsf	intcon,6,c	;volatile
  4030  0011E6  0012               	return		;funcret
  4031  0011E8                     __end_of_UART_Open:
  4032                           	opt stack 0
  4033                           tblptru	equ	0xFF8
  4034                           tblptrh	equ	0xFF7
  4035                           tblptrl	equ	0xFF6
  4036                           tablat	equ	0xFF5
  4037                           prodh	equ	0xFF4
  4038                           prodl	equ	0xFF3
  4039                           intcon	equ	0xFF2
  4040                           indf0	equ	0xFEF
  4041                           postinc0	equ	0xFEE
  4042                           fsr0h	equ	0xFEA
  4043                           fsr0l	equ	0xFE9
  4044                           wreg	equ	0xFE8
  4045                           postdec1	equ	0xFE5
  4046                           plusw1	equ	0xFE3
  4047                           fsr1l	equ	0xFE1
  4048                           indf2	equ	0xFDF
  4049                           plusw2	equ	0xFDB
  4050                           fsr2h	equ	0xFDA
  4051                           fsr2l	equ	0xFD9
  4052                           status	equ	0xFD8
  4053                           
  4054 ;; *************** function _UART_Close *****************
  4055 ;; Defined at:
  4056 ;;		line 365 in file "test.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;		None
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;		None
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  1    wreg      void 
  4063 ;; Registers used:
  4064 ;;		None
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMRAM   BANK0   BANK1
  4070 ;;      Params:         0       0       0
  4071 ;;      Locals:         0       0       0
  4072 ;;      Temps:          0       0       0
  4073 ;;      Totals:         0       0       0
  4074 ;;Total ram usage:        0 bytes
  4075 ;; Hardware stack levels used:    1
  4076 ;; Hardware stack levels required when called:    1
  4077 ;; This function calls:
  4078 ;;		Nothing
  4079 ;; This function is called by:
  4080 ;;		_main
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084                           	psect	text20
  4085  0011F4                     __ptext20:
  4086                           	opt stack 0
  4087  0011F4                     _UART_Close:
  4088                           	opt stack 29
  4089                           
  4090                           ;test.c: 366: RCSTAbits.SPEN = 0;
  4091                           
  4092                           ;incstack = 0
  4093  0011F4  9EAB               	bcf	4011,7,c	;volatile
  4094  0011F6  0012               	return		;funcret
  4095  0011F8                     __end_of_UART_Close:
  4096                           	opt stack 0
  4097                           tblptru	equ	0xFF8
  4098                           tblptrh	equ	0xFF7
  4099                           tblptrl	equ	0xFF6
  4100                           tablat	equ	0xFF5
  4101                           prodh	equ	0xFF4
  4102                           prodl	equ	0xFF3
  4103                           intcon	equ	0xFF2
  4104                           indf0	equ	0xFEF
  4105                           postinc0	equ	0xFEE
  4106                           fsr0h	equ	0xFEA
  4107                           fsr0l	equ	0xFE9
  4108                           wreg	equ	0xFE8
  4109                           postdec1	equ	0xFE5
  4110                           plusw1	equ	0xFE3
  4111                           fsr1l	equ	0xFE1
  4112                           indf2	equ	0xFDF
  4113                           plusw2	equ	0xFDB
  4114                           fsr2h	equ	0xFDA
  4115                           fsr2l	equ	0xFD9
  4116                           status	equ	0xFD8
  4117                           
  4118 ;; *************** function _YourHighPriorityISR *****************
  4119 ;; Defined at:
  4120 ;;		line 329 in file "test.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;		None
  4123 ;; Auto vars:     Size  Location     Type
  4124 ;;		None
  4125 ;; Return value:  Size  Location     Type
  4126 ;;                  1    wreg      void 
  4127 ;; Registers used:
  4128 ;;		wreg, status,2, status,0
  4129 ;; Tracked objects:
  4130 ;;		On entry : 0/0
  4131 ;;		On exit  : 0/0
  4132 ;;		Unchanged: 0/0
  4133 ;; Data sizes:     COMRAM   BANK0   BANK1
  4134 ;;      Params:         0       0       0
  4135 ;;      Locals:         0       0       0
  4136 ;;      Temps:         18       0       0
  4137 ;;      Totals:        18       0       0
  4138 ;;Total ram usage:       18 bytes
  4139 ;; Hardware stack levels used:    1
  4140 ;; This function calls:
  4141 ;;		Nothing
  4142 ;; This function is called by:
  4143 ;;		Interrupt level 2
  4144 ;; This function uses a non-reentrant model
  4145 ;;
  4146                           
  4147                           	psect	intcode
  4148  000008                     __pintcode:
  4149                           	opt stack 0
  4150  000008                     _YourHighPriorityISR:
  4151                           	opt stack 28
  4152                           
  4153                           ;incstack = 0
  4154  000008  826D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4155  00000A  CFFA F001          	movff	pclath,??_YourHighPriorityISR
  4156  00000E  CFFB F002          	movff	pclatu,??_YourHighPriorityISR+1
  4157  000012  CFE9 F003          	movff	fsr0l,??_YourHighPriorityISR+2
  4158  000016  CFEA F004          	movff	fsr0h,??_YourHighPriorityISR+3
  4159  00001A  CFE1 F005          	movff	fsr1l,??_YourHighPriorityISR+4
  4160  00001E  CFE2 F006          	movff	fsr1h,??_YourHighPriorityISR+5
  4161  000022  CFD9 F007          	movff	fsr2l,??_YourHighPriorityISR+6
  4162  000026  CFDA F008          	movff	fsr2h,??_YourHighPriorityISR+7
  4163  00002A  CFF3 F009          	movff	prodl,??_YourHighPriorityISR+8
  4164  00002E  CFF4 F00A          	movff	prodh,??_YourHighPriorityISR+9
  4165  000032  CFF6 F00B          	movff	tblptrl,??_YourHighPriorityISR+10
  4166  000036  CFF7 F00C          	movff	tblptrh,??_YourHighPriorityISR+11
  4167  00003A  CFF8 F00D          	movff	tblptru,??_YourHighPriorityISR+12
  4168  00003E  CFF5 F00E          	movff	tablat,??_YourHighPriorityISR+13
  4169  000042  C06D  F00F         	movff	btemp,??_YourHighPriorityISR+14
  4170  000046  C06E  F010         	movff	btemp+1,??_YourHighPriorityISR+15
  4171  00004A  C06F  F011         	movff	btemp+2,??_YourHighPriorityISR+16
  4172  00004E  C070  F012         	movff	btemp+3,??_YourHighPriorityISR+17
  4173                           
  4174                           ;test.c: 331: if (TMR0IE && TMR0IF)
  4175  000052  BAF2               	btfsc	intcon,5,c	;volatile
  4176  000054  A4F2               	btfss	intcon,2,c	;volatile
  4177  000056  D001               	goto	i2l219
  4178                           
  4179                           ;test.c: 332: {
  4180                           ;test.c: 334: TMR0IF=0;
  4181  000058  94F2               	bcf	intcon,2,c	;volatile
  4182  00005A                     i2l219:
  4183                           
  4184                           ;test.c: 339: }
  4185                           ;test.c: 340: if (PIR1bits.RCIF )
  4186  00005A  AA9E               	btfss	3998,5,c	;volatile
  4187  00005C  D009               	goto	i2l221
  4188                           
  4189                           ;test.c: 341: {
  4190                           ;test.c: 342: PIR1bits.RCIF = 0;
  4191  00005E  9A9E               	bcf	3998,5,c	;volatile
  4192                           
  4193                           ;test.c: 343: if(RCREG == 0x31)
  4194  000060  0E31               	movlw	49
  4195  000062  18AE               	xorwf	4014,w,c	;volatile
  4196  000064  A4D8               	btfss	status,2,c
  4197  000066  D004               	goto	i2l221
  4198                           
  4199                           ;test.c: 344: state = 0;
  4200  000068  0E00               	movlw	0
  4201  00006A  6E62               	movwf	_state+1,c
  4202  00006C  0E00               	movlw	0
  4203  00006E  6E61               	movwf	_state,c
  4204  000070                     i2l221:
  4205  000070  C012  F070         	movff	??_YourHighPriorityISR+17,btemp+3
  4206  000074  C011  F06F         	movff	??_YourHighPriorityISR+16,btemp+2
  4207  000078  C010  F06E         	movff	??_YourHighPriorityISR+15,btemp+1
  4208  00007C  C00F  F06D         	movff	??_YourHighPriorityISR+14,btemp
  4209  000080  C00E  FFF5         	movff	??_YourHighPriorityISR+13,tablat
  4210  000084  C00D  FFF8         	movff	??_YourHighPriorityISR+12,tblptru
  4211  000088  C00C  FFF7         	movff	??_YourHighPriorityISR+11,tblptrh
  4212  00008C  C00B  FFF6         	movff	??_YourHighPriorityISR+10,tblptrl
  4213  000090  C00A  FFF4         	movff	??_YourHighPriorityISR+9,prodh
  4214  000094  C009  FFF3         	movff	??_YourHighPriorityISR+8,prodl
  4215  000098  C008  FFDA         	movff	??_YourHighPriorityISR+7,fsr2h
  4216  00009C  C007  FFD9         	movff	??_YourHighPriorityISR+6,fsr2l
  4217  0000A0  C006  FFE2         	movff	??_YourHighPriorityISR+5,fsr1h
  4218  0000A4  C005  FFE1         	movff	??_YourHighPriorityISR+4,fsr1l
  4219  0000A8  C004  FFEA         	movff	??_YourHighPriorityISR+3,fsr0h
  4220  0000AC  C003  FFE9         	movff	??_YourHighPriorityISR+2,fsr0l
  4221  0000B0  C002  FFFB         	movff	??_YourHighPriorityISR+1,pclatu
  4222  0000B4  C001  FFFA         	movff	??_YourHighPriorityISR,pclath
  4223  0000B8  926D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4224  0000BA  0011               	retfie		f
  4225  0000BC                     __end_of_YourHighPriorityISR:
  4226                           	opt stack 0
  4227                           pclatu	equ	0xFFB
  4228                           pclath	equ	0xFFA
  4229                           tblptru	equ	0xFF8
  4230                           tblptrh	equ	0xFF7
  4231                           tblptrl	equ	0xFF6
  4232                           tablat	equ	0xFF5
  4233                           prodh	equ	0xFF4
  4234                           prodl	equ	0xFF3
  4235                           intcon	equ	0xFF2
  4236                           indf0	equ	0xFEF
  4237                           postinc0	equ	0xFEE
  4238                           fsr0h	equ	0xFEA
  4239                           fsr0l	equ	0xFE9
  4240                           wreg	equ	0xFE8
  4241                           postdec1	equ	0xFE5
  4242                           plusw1	equ	0xFE3
  4243                           fsr1h	equ	0xFE2
  4244                           fsr1l	equ	0xFE1
  4245                           indf2	equ	0xFDF
  4246                           plusw2	equ	0xFDB
  4247                           fsr2h	equ	0xFDA
  4248                           fsr2l	equ	0xFD9
  4249                           status	equ	0xFD8
  4250                           pclatu	equ	0xFFB
  4251                           pclath	equ	0xFFA
  4252                           tblptru	equ	0xFF8
  4253                           tblptrh	equ	0xFF7
  4254                           tblptrl	equ	0xFF6
  4255                           tablat	equ	0xFF5
  4256                           prodh	equ	0xFF4
  4257                           prodl	equ	0xFF3
  4258                           intcon	equ	0xFF2
  4259                           indf0	equ	0xFEF
  4260                           postinc0	equ	0xFEE
  4261                           fsr0h	equ	0xFEA
  4262                           fsr0l	equ	0xFE9
  4263                           wreg	equ	0xFE8
  4264                           postdec1	equ	0xFE5
  4265                           plusw1	equ	0xFE3
  4266                           fsr1h	equ	0xFE2
  4267                           fsr1l	equ	0xFE1
  4268                           indf2	equ	0xFDF
  4269                           plusw2	equ	0xFDB
  4270                           fsr2h	equ	0xFDA
  4271                           fsr2l	equ	0xFD9
  4272                           status	equ	0xFD8
  4273                           
  4274                           	psect	rparam
  4275  0000                     pclatu	equ	0xFFB
  4276                           pclath	equ	0xFFA
  4277                           tblptru	equ	0xFF8
  4278                           tblptrh	equ	0xFF7
  4279                           tblptrl	equ	0xFF6
  4280                           tablat	equ	0xFF5
  4281                           prodh	equ	0xFF4
  4282                           prodl	equ	0xFF3
  4283                           intcon	equ	0xFF2
  4284                           indf0	equ	0xFEF
  4285                           postinc0	equ	0xFEE
  4286                           fsr0h	equ	0xFEA
  4287                           fsr0l	equ	0xFE9
  4288                           wreg	equ	0xFE8
  4289                           postdec1	equ	0xFE5
  4290                           plusw1	equ	0xFE3
  4291                           fsr1h	equ	0xFE2
  4292                           fsr1l	equ	0xFE1
  4293                           indf2	equ	0xFDF
  4294                           plusw2	equ	0xFDB
  4295                           fsr2h	equ	0xFDA
  4296                           fsr2l	equ	0xFD9
  4297                           status	equ	0xFD8
  4298                           
  4299                           	psect	temp
  4300  00006D                     btemp:
  4301                           	opt stack 0
  4302  00006D                     	ds	1
  4303  0000                     int$flags	set	btemp
  4304  0000                     wtemp6	set	btemp+1
  4305                           pclatu	equ	0xFFB
  4306                           pclath	equ	0xFFA
  4307                           tblptru	equ	0xFF8
  4308                           tblptrh	equ	0xFF7
  4309                           tblptrl	equ	0xFF6
  4310                           tablat	equ	0xFF5
  4311                           prodh	equ	0xFF4
  4312                           prodl	equ	0xFF3
  4313                           intcon	equ	0xFF2
  4314                           indf0	equ	0xFEF
  4315                           postinc0	equ	0xFEE
  4316                           fsr0h	equ	0xFEA
  4317                           fsr0l	equ	0xFE9
  4318                           wreg	equ	0xFE8
  4319                           postdec1	equ	0xFE5
  4320                           plusw1	equ	0xFE3
  4321                           fsr1h	equ	0xFE2
  4322                           fsr1l	equ	0xFE1
  4323                           indf2	equ	0xFDF
  4324                           plusw2	equ	0xFDB
  4325                           fsr2h	equ	0xFDA
  4326                           fsr2l	equ	0xFD9
  4327                           status	equ	0xFD8


Data Sizes:
    Strings     35
    Constant    0
    Data        94
    BSS         47
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     89     108
    BANK0           128      4     126
    BANK1           239     14      14

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 25
		 -> appendUnits@data2(COMRAM[5]), STR_2(CODE[25]), STR_1(CODE[10]), measuringDisplay(BANK0[13]), 
		 -> bpmDisplay(BANK0[25]), sysDisplay(BANK0[20]), diasDisplay(BANK0[21]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 25
		 -> appendUnits@data2(COMRAM[5]), STR_2(CODE[25]), STR_1(CODE[10]), measuringDisplay(BANK0[13]), 
		 -> bpmDisplay(BANK0[25]), sysDisplay(BANK0[20]), diasDisplay(BANK0[21]), 

    UART_Write@info	PTR unsigned char  size(2) Largest target is 25
		 -> STR_2(CODE[25]), STR_1(CODE[10]), measuringDisplay(BANK0[13]), bpmDisplay(BANK0[25]), 
		 -> sysDisplay(BANK0[20]), diasDisplay(BANK0[21]), 

    measurePointer	PTR unsigned char  size(2) Largest target is 13
		 -> measuringDisplay(BANK0[13]), 

    bpmPointer	PTR unsigned char  size(2) Largest target is 25
		 -> bpmDisplay(BANK0[25]), 

    sysPointer	PTR unsigned char  size(2) Largest target is 20
		 -> sysDisplay(BANK0[20]), 

    diasPointer	PTR unsigned char  size(2) Largest target is 21
		 -> diasDisplay(BANK0[21]), 


Critical Paths under _main in COMRAM

    _main->_printData
    _printData->___awdiv
    ___fttol->___ftdiv
    ___awdiv->___fttol
    _appendUnits->_strlen
    ___lltoft->___ftpack
    ___ftmul->___ftadd
    ___ftdiv->___ftmul
    ___ftadd->___ftpack
    _UART_Write->_strlen

Critical Paths under _YourHighPriorityISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _printData->___awdiv

Critical Paths under _YourHighPriorityISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printData

Critical Paths under _YourHighPriorityISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   22607
                                              7 BANK1      7     7      0
                         _UART_Close
                          _UART_Open
                         _UART_Write
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lltoft
                          _adcConfig
                     _adcReadChannel
                        _appendUnits
                          _printData
                       _printNewLine
                        _timerConfig
 ---------------------------------------------------------------------------------
 (1) _timerConfig                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printNewLine                                         0     0      0       0
                       _UART_TX_Busy
 ---------------------------------------------------------------------------------
 (1) _printData                                            9     6      3    4190
                                             87 COMRAM     2     2      0
                                              0 BANK1      7     4      3
                       _UART_TX_Busy
                            ___awdiv
                             ___ftge
                            ___fttol
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     592
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     911
                                             68 COMRAM    15    11      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     918
                                             18 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     985
                                             83 COMRAM     4     0      4
                                              0 BANK0      4     4      0
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) _appendUnits                                          5     5      0     381
                                             24 COMRAM     5     5      0
                       _UART_TX_Busy
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _adcReadChannel                                       4     2      2     124
                                             18 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _adcConfig                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lltoft                                             9     5      4    3265
                                             26 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    4241
                                             38 COMRAM    15     9      6
                            ___ftadd (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    3633
                                             53 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             12     6      6    4758
                                             26 COMRAM    12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2893
                                             18 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           6     4      2     980
                                             24 COMRAM     6     4      2
                       _UART_TX_Busy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     310
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _UART_TX_Busy                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Open                                            4     0      4      90
                                             18 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _UART_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _YourHighPriorityISR                                 18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Close
   _UART_Open
   _UART_Write
     _UART_TX_Busy
     _strlen
   ___ftadd
     ___ftpack
   ___ftdiv
     ___ftmul (ARG)
       ___ftadd (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lltoft (ARG)
       ___ftpack
   ___ftmul
     ___ftadd (ARG)
       ___ftpack
     ___ftpack (ARG)
     ___ftpack (ARG)
     ___lltoft (ARG)
       ___ftpack
   ___fttol
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___ftadd (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___lltoft (ARG)
       ___ftpack
   ___lltoft
     ___ftpack
   _adcConfig
   _adcReadChannel
   _appendUnits
     _UART_TX_Busy
     _strlen
   _printData
     _UART_TX_Busy
     ___awdiv
       ___fttol (ARG)
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___lltoft (ARG)
           ___ftpack
     ___ftge
     ___fttol
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___lltoft (ARG)
         ___ftpack
     ___wmul
   _printNewLine
     _UART_TX_Busy
   _timerConfig

 _YourHighPriorityISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1EE      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1            EF      0       0       5        0.0%
BANK1               EF      E       E       6        5.9%
BITBANK0            80      0       0       3        0.0%
BANK0               80      4      7E       4       98.4%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     59      6C       1       85.7%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F8       7        0.0%
DATA                 0      0      F8       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri May 04 17:54:44 2018

                           _i 0063                  ___awdiv@sign 00FB           ___wmul@multiplicand 0015  
                 __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                ___ftadd@exp1 0026                  ___ftadd@exp2 0025                  ___ftadd@sign 0024  
                         l200 0844                           l140 027E                           l141 0368  
                         l206 0E04                           l150 0440                           l142 02D2  
                         l151 04AE                           l240 0F6E                           l152 04AE  
                         l144 02F0                           l241 0F32                           l145 0356  
                         l170 100C                           l146 03F2                           l243 0F60  
                         l155 064E                           l147 05A2                           l139 025E  
                         l172 101C                           l148 04B6                           l149 03FE  
                         l182 11A4                           l503 08A8                           l512 0938  
                         l432 0F06                           l192 0714                           l169 102A  
                         l433 0F10                           l425 0EB8                           l530 09AC  
                         l434 0F1E                           l426 0EC8                           l531 09DC  
                         l507 08D2                           l187 077E                           l540 0C9E  
                         l428 0EE6                           l517 092E                           l429 0EDE  
                         l197 07EA                           l189 06D4                           l526 096C  
                         l518 0924                           l630 10A6                           l527 0962  
                         l551 0B1E                           l472 0CF8                           l536 0C12  
                         l544 0E42                           l473 0CEE                           l529 0990  
                         l553 0B46                           l545 0E72                           l538 0C3A  
                         l554 0B78                           l475 0D2C                           l539 0C78  
                         l555 0B88                           l476 0D16                           l580 0AC8  
                         l572 0A2E                           l805 110A                           l557 0BA0  
                         l629 10B2                           l581 0ABC                           l806 1106  
                         l478 0D54                           l558 0BB0                           l574 0AA4  
                         l479 0D4A                           l583 0AE4                           l575 0A94  
                __CFG_CPB$OFF 000000                           _MAP 005A                  __CFG_CPD$OFF 000000  
                __CFG_BOR$OFF 000000                           _bpm 00E0                           wreg 000FE8  
              _adcReadChannel 0D7E                  __CFG_LVP$OFF 000000                  ___ftdiv@cntr 003F  
                ___ftdiv@sign 0044                  __CFG_WDT$OFF 000000                          l2141 0E9E  
                        l2715 04C6                          STR_1 021A                          STR_2 0201  
                        u2030 11F0                          u2120 0D5E                          u2050 112A  
                        u2300 0ACE                          u2320 0F5E                          u2080 0CE0  
                        u2057 1120                          u2241 0A12                          u3017 035E  
                        u3027 05B8                          u2180 0EEA                          u2260 0A4C  
                        u2501 0866                          u3037 0DFA                          u2327 0F54  
                        u2511 087A                          u2600 0902                          u2265 0A44  
                        u2540 089A                          u2711 0BFA                          u2471 0FFA  
                        u2640 0940                          u2570 08C4                          u2731 0C22  
                        u2670 0974                          u2910 0418                          u2761 0B06  
                        u2940 044C                          u2781 0B2E                          u2870 030A  
                        u2880 0332                          u2970 04AC                          _RCIF 007CF5  
                        u2885 0326                  __CFG_WDTPS$1 000000             _diastolicPressure 00E8  
                        _main 0226                  ___ftpack@arg 0013                  ___ftpack@exp 0016  
                        fsr0h 000FEA                          fsr1h 000FE2                          indf0 000FEF  
                        fsr2h 000FDA                          fsr0l 000FE9                          indf2 000FDF  
                        fsr1l 000FE1                          fsr2l 000FD9                          btemp 006D  
                        prodh 000FF4                          prodl 000FF3                          start 00BC  
               __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000                  ___ftmul@cntr 0034  
                ___param_bank 000000                  ___ftmul@sign 0035                  ___fttol@exp1 0053  
                ___fttol@lval 004F                         ?_main 0001               __end_of___awdiv 0F28  
                       _ADRES 000FC3               __end_of___ftadd 0A02               __end_of___ftdiv 0CD0  
             __end_of___ftmul 0BEA                         _T0CON 000FD5               ___awdiv@divisor 0056  
             __end_of___fttol 0AF6                         i2l221 0070                         i2l219 005A  
             ___awdiv@counter 00FA                         _RCREG 000FAE        __end_of_adcReadChannel 0E12  
                       _TMR0H 000FD7                         _TMR0L 000FD6                         _SPBRG 000FAF  
                 ?_UART_Close 0001                         _TXREG 000FAD                 __CFG_PWRT$OFF 000000  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                  ___lltoft@exp 0023  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
                 ?_UART_Write 0019            __size_of_UART_Open 001A                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
           UART_Open@baudrate 0013                         _count 005F                 ___ftpack@sign 0017  
                       _state 0061                         pclath 000FFA                         tablat 000FF5  
             _prevMeasurement 00F1                         plusw1 000FE3                         plusw2 000FDB  
                       status 000FD8                         wtemp6 006E               __initialization 0F88  
                __end_of_main 0660                        ??_main 0107                 ___fttol@sign1 004E  
               __activetblptr 000002               ?_adcReadChannel 0013               __CFG_CCP2MX$RC1 000000  
                      _ADCON0 000FC2                        _ADCON1 000FC1              ___awdiv@dividend 0054  
            __end_of___ftpack 0D7E              __end_of___lltoft 10FC                        _TMR0IE 007F95  
                      _TMR0IF 007F92          __size_of_appendUnits 005E                __CFG_XINST$OFF 000000  
         __size_of_UART_Close 0004             __end_of_UART_Open 11E8                        ___ftge 0E12  
         __size_of_UART_Write 0060                        ___wmul 114E                     ??___awdiv 0058  
                   ??___ftadd 0021                __CFG_STVREN$ON 000000                     ??___ftdiv 003C  
                   ??___ftmul 002D                     ??___fttol 0049                        clear_0 0FC6  
                      clear_1 0FD2              ___awdiv@quotient 00FC                        _strlen 10FC  
       ___ftmul@f3_as_product 0031                  ?_timerConfig 0001                  __pdataCOMRAM 006B  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8            __size_of_adcConfig 001A                    __accesstop 0080  
     __end_of__initialization 0FD8               __CFG_PBADEN$ANA 000000                    ___ftadd@f1 001B  
                  ___ftadd@f2 001E                    ___ftge@ff1 0013                    ___ftge@ff2 0016  
               ___rparam_used 000001                    ___ftdiv@f1 0036                    ___ftdiv@f2 0039  
                  ___ftdiv@f3 0040  __size_of_YourHighPriorityISR 00B4                    ___ftmul@f1 0027  
                  ___ftmul@f2 002A                    ___fttol@f1 0045                __pcstackCOMRAM 0001  
                __pidataBANK0 1044                    ___lltoft@c 001B               __CFG_OSC$INTIO1 000000  
                  __pbssBANK0 00DC                    _bpmDisplay 008D                       ?___ftge 0013  
                     ?___wmul 0013                    _bpmPointer 0087             __end_of_adcConfig 11CE  
                   ?___ftpack 0013                    _heartFloat 00EB                     ?___lltoft 001B  
                     ?_strlen 0013              __CFG_BBSIZ$BB256 000000                  ??_UART_Close 0013  
          __size_of_printData 01F6                  ??_UART_Write 001B                 ?_UART_TX_Busy 0001  
                     __Hparam 0000                       __Lparam 0000            __end_of_UART_Close 11F8  
                     _adcData 0069               __size_of___ftge 0090                       ___awdiv 0EA2  
                     ___ftadd 0856                       _adcPrev 006B                       ___ftdiv 0BEA  
             __size_of___wmul 0026            __end_of_UART_Write 0F88                       ___ftmul 0AF6  
                     ___fttol 0A02                  __psmallconst 0200              ??_adcReadChannel 0015  
                     __pcinit 0F88                    ??___ftpack 0018                       _avgData 00F8  
                     __ramtop 0200                    ??___lltoft 001F                       __ptext0 0226  
                     __ptext1 1174                       __ptext2 1196                       __ptext3 0660  
                     __ptext4 114E                       __ptext5 0A02                       __ptext6 0E12  
                     __ptext7 0EA2                       __ptext8 0FE6                       __ptext9 0D7E  
                   _T0CONbits 000FD5                       _maxData 0067               __size_of_strlen 0052  
        __size_of_timerConfig 0022                   UART_Write@i 001D                ??_UART_TX_Busy 0013  
                     _sysComp 00DC          end_of_initialization 0FD8                _measurePointer 0085  
               __Lmediumconst 0000             __end_of_printData 0856                     _RCSTAbits 000FAB  
                     postdec1 000FE5                       postinc0 000FEE                 ?_printNewLine 0001  
                     strlen@s 0013                     _UART_Open 11CE                UART_Write@info 0019  
         _YourHighPriorityISR 0008                     _TRISAbits 000F92                     _TRISBbits 000F93  
                   _TRISCbits 000F94                 ??_appendUnits 0019                   ___ftdiv@exp 0043  
                   _TXSTAbits 000FAC                    _sysDisplay 00BB          ?_YourHighPriorityISR 0001  
                  _sysMeasure 00F4                   ___ftmul@exp 0030                    _sysPointer 0089  
              ??_printNewLine 0013                __end_of___ftge 0EA2                __end_of___wmul 1174  
                 _BAUDCONbits 000FB8                 __pidataCOMRAM 11F8                    ?_UART_Open 0013  
              __end_of_strlen 114E           start_initialization 0F88         ??_YourHighPriorityISR 0001  
         __end_of_appendUnits 1044                      ??___ftge 0019                      ??___wmul 0017  
        __end_of_UART_TX_Busy 11F4                   __pdataBANK0 0080              __CFG_LPT1OSC$OFF 000000  
                    ??_strlen 0015                     _adcConfig 11B4             __size_of___ftpack 00AE  
 adcReadChannel@channelNumber 0016             __size_of___lltoft 005C                   __pbssCOMRAM 005A  
               __pcstackBANK0 00FA                 __pcstackBANK1 0100                   _diasDisplay 00A6  
                 _diasPointer 008B                     _main$1526 010B                     __pintcode 0008  
                    ?___awdiv 0054                      ?___ftadd 001B                      ?___ftdiv 0036  
                    ?___ftmul 0027                      ?___fttol 0045                   ??_UART_Open 0017  
                  ?_adcConfig 0001                   __smallconst 0200          __end_of_printNewLine 11B4  
            _systolicPressure 00EE                   _appendUnits 0FE6                ___wmul@product 0017  
                    _LATAbits 000F89                      _LATCbits 000F8B                      _PIE1bits 000F9D  
                    _PIR1bits 000F9E                      _RCONbits 000FD0                     _timerComp 00E4  
                   _printData 0660                    _ADCON0bits 000FC2                    _ADCON2bits 000FC0  
           ___wmul@multiplier 0013                 ??_timerConfig 0013                     copy_data0 0F9C  
       __size_of_UART_TX_Busy 000C                      __Hrparam 0000                      __Lrparam 0000  
                  ?_printData 0100              __size_of___awdiv 0086              __size_of___ftadd 01AC  
            __size_of___ftdiv 00E6              __size_of___ftmul 00F4              __size_of___fttol 00F4  
                    ___ftpack 0CD0                      ___lltoft 10A0                   ??_adcConfig 0013  
                    _avgCount 005D       __size_of_adcReadChannel 0094                      __ptext10 11B4  
                    __ptext11 10A0                      __ptext20 11F4                      __ptext12 0AF6  
                    __ptext13 0BEA                      __ptext14 0856                      __ptext15 0CD0  
                    __ptext16 0F28                      __ptext17 10FC                      __ptext18 11E8  
                    __ptext19 11CE           __end_of_timerConfig 1196                  _UART_TX_Busy 11E8  
            appendUnits@F2916 0080                 __size_of_main 043A              appendUnits@data2 0019  
                    _timerInt 0065                      int$flags 006D                      _pressure 00F6  
            _measuringDisplay 00CF                    _INTCONbits 000FF2         __size_of_printNewLine 001E  
 __end_of_YourHighPriorityISR 00BC                      intlevel2 0000                    _OSCCONbits 000FD3  
                 ??_printData 0103                  _printNewLine 1196                   _timerConfig 1174  
                  _UART_Close 11F4                      strlen@cp 0017                    _UART_Write 0F28  
                ?_appendUnits 0001               printData@sender 0058                 printData@data 0100  
