

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri May 04 18:03:36 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF2321
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41  0000                     
    42                           ; Version 1.45
    43                           ; Generated 16/11/2017 GMT
    44                           ; 
    45                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18LF2321 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     
    77                           	psect	idataCOMRAM
    78  001246                     __pidataCOMRAM:
    79                           	opt stack 0
    80                           
    81                           ;initializer for _adcPrev
    82  001246  03E8               	dw	1000
    83                           
    84                           	psect	idataBANK0
    85  001092                     __pidataBANK0:
    86                           	opt stack 0
    87                           
    88                           ;initializer for appendUnits@F2916
    89  001092  6D                 	db	109
    90  001093  6D                 	db	109
    91  001094  48                 	db	72
    92  001095  67                 	db	103
    93  001096  00                 	db	0
    94                           
    95                           ;initializer for _measurePointer
    96  001097  CF                 	db	low _measuringDisplay
    97  001098  00                 	db	high _measuringDisplay
    98                           
    99                           ;initializer for _bpmPointer
   100  001099  8D                 	db	low _bpmDisplay
   101  00109A  00                 	db	high _bpmDisplay
   102                           
   103                           ;initializer for _sysPointer
   104  00109B  BB                 	db	low _sysDisplay
   105  00109C  00                 	db	high _sysDisplay
   106                           
   107                           ;initializer for _diasPointer
   108  00109D  A6                 	db	low _diasDisplay
   109  00109E  00                 	db	high _diasDisplay
   110                           
   111                           ;initializer for _bpmDisplay
   112  00109F  48                 	db	72
   113  0010A0  65                 	db	101
   114  0010A1  61                 	db	97
   115  0010A2  72                 	db	114
   116  0010A3  74                 	db	116
   117  0010A4  20                 	db	32
   118  0010A5  42                 	db	66
   119  0010A6  65                 	db	101
   120  0010A7  61                 	db	97
   121  0010A8  74                 	db	116
   122  0010A9  73                 	db	115
   123  0010AA  20                 	db	32
   124  0010AB  70                 	db	112
   125  0010AC  65                 	db	101
   126  0010AD  72                 	db	114
   127  0010AE  20                 	db	32
   128  0010AF  4D                 	db	77
   129  0010B0  69                 	db	105
   130  0010B1  6E                 	db	110
   131  0010B2  75                 	db	117
   132  0010B3  74                 	db	116
   133  0010B4  65                 	db	101
   134  0010B5  3A                 	db	58
   135  0010B6  20                 	db	32
   136  0010B7  00                 	db	0
   137                           
   138                           ;initializer for _diasDisplay
   139  0010B8  44                 	db	68
   140  0010B9  69                 	db	105
   141  0010BA  61                 	db	97
   142  0010BB  73                 	db	115
   143  0010BC  74                 	db	116
   144  0010BD  6F                 	db	111
   145  0010BE  6C                 	db	108
   146  0010BF  69                 	db	105
   147  0010C0  63                 	db	99
   148  0010C1  20                 	db	32
   149  0010C2  50                 	db	80
   150  0010C3  72                 	db	114
   151  0010C4  65                 	db	101
   152  0010C5  73                 	db	115
   153  0010C6  73                 	db	115
   154  0010C7  75                 	db	117
   155  0010C8  72                 	db	114
   156  0010C9  65                 	db	101
   157  0010CA  3A                 	db	58
   158  0010CB  20                 	db	32
   159  0010CC  00                 	db	0
   160                           
   161                           ;initializer for _sysDisplay
   162  0010CD  53                 	db	83
   163  0010CE  79                 	db	121
   164  0010CF  73                 	db	115
   165  0010D0  74                 	db	116
   166  0010D1  6F                 	db	111
   167  0010D2  6C                 	db	108
   168  0010D3  69                 	db	105
   169  0010D4  63                 	db	99
   170  0010D5  20                 	db	32
   171  0010D6  50                 	db	80
   172  0010D7  72                 	db	114
   173  0010D8  65                 	db	101
   174  0010D9  73                 	db	115
   175  0010DA  73                 	db	115
   176  0010DB  75                 	db	117
   177  0010DC  72                 	db	114
   178  0010DD  65                 	db	101
   179  0010DE  3A                 	db	58
   180  0010DF  20                 	db	32
   181  0010E0  00                 	db	0
   182                           
   183                           ;initializer for _measuringDisplay
   184  0010E1  4D                 	db	77
   185  0010E2  65                 	db	101
   186  0010E3  61                 	db	97
   187  0010E4  73                 	db	115
   188  0010E5  75                 	db	117
   189  0010E6  72                 	db	114
   190  0010E7  69                 	db	105
   191  0010E8  6E                 	db	110
   192  0010E9  67                 	db	103
   193  0010EA  2E                 	db	46
   194  0010EB  2E                 	db	46
   195  0010EC  2E                 	db	46
   196  0010ED  00                 	db	0
   197  0000                     _TMR0	set	4054
   198  0000                     _ADRES	set	4035
   199  0000                     _PIE1bits	set	3997
   200  0000                     _RCSTAbits	set	4011
   201  0000                     _TXSTAbits	set	4012
   202  0000                     _SPBRG	set	4015
   203  0000                     _BAUDCONbits	set	4024
   204  0000                     _RCREG	set	4014
   205  0000                     _PIR1bits	set	3998
   206  0000                     _RCONbits	set	4048
   207  0000                     _INTCONbits	set	4082
   208  0000                     _T0CON	set	4053
   209  0000                     _ADCON1	set	4033
   210  0000                     _ADCON0	set	4034
   211  0000                     _ADCON2bits	set	4032
   212  0000                     _ADCON0bits	set	4034
   213  0000                     _TXREG	set	4013
   214  0000                     _T0CONbits	set	4053
   215  0000                     _TMR0L	set	4054
   216  0000                     _TMR0H	set	4055
   217  0000                     _LATAbits	set	3977
   218  0000                     _TRISAbits	set	3986
   219  0000                     _TRISBbits	set	3987
   220  0000                     _LATCbits	set	3979
   221  0000                     _TRISCbits	set	3988
   222  0000                     _OSCCONbits	set	4051
   223  0000                     _RCIF	set	31989
   224  0000                     _TMR0IF	set	32658
   225  0000                     _TMR0IE	set	32661
   226                           
   227                           	psect	smallconst
   228  000200                     __psmallconst:
   229                           	opt stack 0
   230  000200  00                 	db	0
   231  000201                     STR_2:
   232  000201  50                 	db	80	;'P'
   233  000202  72                 	db	114	;'r'
   234  000203  65                 	db	101	;'e'
   235  000204  73                 	db	115	;'s'
   236  000205  73                 	db	115	;'s'
   237  000206  20                 	db	32
   238  000207  31                 	db	49	;'1'
   239  000208  20                 	db	32
   240  000209  74                 	db	116	;'t'
   241  00020A  6F                 	db	111	;'o'
   242  00020B  20                 	db	32
   243  00020C  73                 	db	115	;'s'
   244  00020D  74                 	db	116	;'t'
   245  00020E  61                 	db	97	;'a'
   246  00020F  72                 	db	114	;'r'
   247  000210  74                 	db	116	;'t'
   248  000211  20                 	db	32
   249  000212  6F                 	db	111	;'o'
   250  000213  76                 	db	118	;'v'
   251  000214  65                 	db	101	;'e'
   252  000215  72                 	db	114	;'r'
   253  000216  21                 	db	33
   254  000217  0D                 	db	13
   255  000218  0A                 	db	10
   256  000219  00                 	db	0
   257  00021A                     STR_1:
   258  00021A  46                 	db	70	;'F'
   259  00021B  69                 	db	105	;'i'
   260  00021C  6E                 	db	110	;'n'
   261  00021D  69                 	db	105	;'i'
   262  00021E  73                 	db	115	;'s'
   263  00021F  68                 	db	104	;'h'
   264  000220  21                 	db	33
   265  000221  0D                 	db	13
   266  000222  0A                 	db	10
   267  000223  00                 	db	0
   268                           
   269                           ; #config settings
   270  000224  00                 	db	0	; dummy byte at the end
   271  0000                     
   272                           	psect	cinit
   273  000FD6                     __pcinit:
   274                           	opt stack 0
   275  000FD6                     start_initialization:
   276                           	opt stack 0
   277  000FD6                     __initialization:
   278                           	opt stack 0
   279                           
   280                           ; Initialize objects allocated to BANK0 (92 bytes)
   281                           ; load TBLPTR registers with __pidataBANK0
   282  000FD6  0E92               	movlw	low __pidataBANK0
   283  000FD8  6EF6               	movwf	tblptrl,c
   284  000FDA  0E10               	movlw	high __pidataBANK0
   285  000FDC  6EF7               	movwf	tblptrh,c
   286  000FDE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   287  000FE0  6EF8               	movwf	tblptru,c
   288  000FE2  EE00  F080         	lfsr	0,__pdataBANK0
   289  000FE6  EE10 F05C          	lfsr	1,92
   290  000FEA                     copy_data0:
   291  000FEA  0009               	tblrd		*+
   292  000FEC  CFF5 FFEE          	movff	tablat,postinc0
   293  000FF0  50E5               	movf	postdec1,w,c
   294  000FF2  50E1               	movf	fsr1l,w,c
   295  000FF4  E1FA               	bnz	copy_data0
   296                           
   297                           ; Initialize objects allocated to COMRAM (2 bytes)
   298                           ; load TBLPTR registers with __pidataCOMRAM
   299  000FF6  0E46               	movlw	low __pidataCOMRAM
   300  000FF8  6EF6               	movwf	tblptrl,c
   301  000FFA  0E12               	movlw	high __pidataCOMRAM
   302  000FFC  6EF7               	movwf	tblptrh,c
   303  000FFE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   304  001000  6EF8               	movwf	tblptru,c
   305  001002  0009               	tblrd		*+	;fetch initializer
   306  001004  CFF5 F06B          	movff	tablat,__pdataCOMRAM
   307  001008  0009               	tblrd		*+	;fetch initializer
   308  00100A  CFF5 F06C          	movff	tablat,__pdataCOMRAM+1
   309                           
   310                           ; Clear objects allocated to BANK0 (30 bytes)
   311  00100E  EE00  F0DC         	lfsr	0,__pbssBANK0
   312  001012  0E1E               	movlw	30
   313  001014                     clear_0:
   314  001014  6AEE               	clrf	postinc0,c
   315  001016  06E8               	decf	wreg,f,c
   316  001018  E1FD               	bnz	clear_0
   317                           
   318                           ; Clear objects allocated to COMRAM (17 bytes)
   319  00101A  EE00  F05A         	lfsr	0,__pbssCOMRAM
   320  00101E  0E11               	movlw	17
   321  001020                     clear_1:
   322  001020  6AEE               	clrf	postinc0,c
   323  001022  06E8               	decf	wreg,f,c
   324  001024  E1FD               	bnz	clear_1
   325  001026                     end_of_initialization:
   326                           	opt stack 0
   327  001026                     __end_of__initialization:
   328                           	opt stack 0
   329  001026  906D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   330  001028  926D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   331  00102A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   332  00102C  6EF8               	movwf	tblptru,c
   333  00102E  0100               	movlb	0
   334  001030  EF13  F001         	goto	_main	;jump to C main() function
   335                           tblptru	equ	0xFF8
   336                           tblptrh	equ	0xFF7
   337                           tblptrl	equ	0xFF6
   338                           tablat	equ	0xFF5
   339                           postinc0	equ	0xFEE
   340                           wreg	equ	0xFE8
   341                           postdec1	equ	0xFE5
   342                           fsr1l	equ	0xFE1
   343                           
   344                           	psect	bssCOMRAM
   345  00005A                     __pbssCOMRAM:
   346                           	opt stack 0
   347  00005A                     _MAP:
   348                           	opt stack 0
   349  00005A                     	ds	3
   350  00005D                     _avgCount:
   351                           	opt stack 0
   352  00005D                     	ds	2
   353  00005F                     _count:
   354                           	opt stack 0
   355  00005F                     	ds	2
   356  000061                     _state:
   357                           	opt stack 0
   358  000061                     	ds	2
   359  000063                     _i:
   360                           	opt stack 0
   361  000063                     	ds	2
   362  000065                     _timerInt:
   363                           	opt stack 0
   364  000065                     	ds	2
   365  000067                     _maxData:
   366                           	opt stack 0
   367  000067                     	ds	2
   368  000069                     _adcData:
   369                           	opt stack 0
   370  000069                     	ds	2
   371                           tblptru	equ	0xFF8
   372                           tblptrh	equ	0xFF7
   373                           tblptrl	equ	0xFF6
   374                           tablat	equ	0xFF5
   375                           postinc0	equ	0xFEE
   376                           wreg	equ	0xFE8
   377                           postdec1	equ	0xFE5
   378                           fsr1l	equ	0xFE1
   379                           
   380                           	psect	dataCOMRAM
   381  00006B                     __pdataCOMRAM:
   382                           	opt stack 0
   383  00006B                     _adcPrev:
   384                           	opt stack 0
   385  00006B                     	ds	2
   386                           tblptru	equ	0xFF8
   387                           tblptrh	equ	0xFF7
   388                           tblptrl	equ	0xFF6
   389                           tablat	equ	0xFF5
   390                           postinc0	equ	0xFEE
   391                           wreg	equ	0xFE8
   392                           postdec1	equ	0xFE5
   393                           fsr1l	equ	0xFE1
   394                           
   395                           	psect	bssBANK0
   396  0000DC                     __pbssBANK0:
   397                           	opt stack 0
   398  0000DC                     _sysComp:
   399                           	opt stack 0
   400  0000DC                     	ds	4
   401  0000E0                     _bpm:
   402                           	opt stack 0
   403  0000E0                     	ds	4
   404  0000E4                     _timerComp:
   405                           	opt stack 0
   406  0000E4                     	ds	4
   407  0000E8                     _diastolicPressure:
   408                           	opt stack 0
   409  0000E8                     	ds	3
   410  0000EB                     _heartFloat:
   411                           	opt stack 0
   412  0000EB                     	ds	3
   413  0000EE                     _systolicPressure:
   414                           	opt stack 0
   415  0000EE                     	ds	3
   416  0000F1                     _prevMeasurement:
   417                           	opt stack 0
   418  0000F1                     	ds	3
   419  0000F4                     _sysMeasure:
   420                           	opt stack 0
   421  0000F4                     	ds	2
   422  0000F6                     _pressure:
   423                           	opt stack 0
   424  0000F6                     	ds	2
   425  0000F8                     _avgData:
   426                           	opt stack 0
   427  0000F8                     	ds	2
   428                           tblptru	equ	0xFF8
   429                           tblptrh	equ	0xFF7
   430                           tblptrl	equ	0xFF6
   431                           tablat	equ	0xFF5
   432                           postinc0	equ	0xFEE
   433                           wreg	equ	0xFE8
   434                           postdec1	equ	0xFE5
   435                           fsr1l	equ	0xFE1
   436                           
   437                           	psect	dataBANK0
   438  000080                     __pdataBANK0:
   439                           	opt stack 0
   440  000080                     appendUnits@F2916:
   441                           	opt stack 0
   442  000080                     	ds	5
   443  000085                     _measurePointer:
   444                           	opt stack 0
   445  000085                     	ds	2
   446  000087                     _bpmPointer:
   447                           	opt stack 0
   448  000087                     	ds	2
   449  000089                     _sysPointer:
   450                           	opt stack 0
   451  000089                     	ds	2
   452  00008B                     _diasPointer:
   453                           	opt stack 0
   454  00008B                     	ds	2
   455  00008D                     _bpmDisplay:
   456                           	opt stack 0
   457  00008D                     	ds	25
   458  0000A6                     _diasDisplay:
   459                           	opt stack 0
   460  0000A6                     	ds	21
   461  0000BB                     _sysDisplay:
   462                           	opt stack 0
   463  0000BB                     	ds	20
   464  0000CF                     _measuringDisplay:
   465                           	opt stack 0
   466  0000CF                     	ds	13
   467                           tblptru	equ	0xFF8
   468                           tblptrh	equ	0xFF7
   469                           tblptrl	equ	0xFF6
   470                           tablat	equ	0xFF5
   471                           postinc0	equ	0xFEE
   472                           wreg	equ	0xFE8
   473                           postdec1	equ	0xFE5
   474                           fsr1l	equ	0xFE1
   475                           
   476                           	psect	cstackBANK1
   477  000100                     __pcstackBANK1:
   478                           	opt stack 0
   479  000100                     printData@data:
   480                           	opt stack 0
   481                           
   482                           ; 3 bytes @ 0x0
   483  000100                     	ds	3
   484  000103                     ??_printData:
   485                           
   486                           ; 1 bytes @ 0x3
   487  000103                     	ds	4
   488  000107                     ??_main:
   489                           
   490                           ; 1 bytes @ 0x7
   491  000107                     	ds	4
   492  00010B                     _main$1527:
   493                           	opt stack 0
   494                           
   495                           ; 3 bytes @ 0xB
   496  00010B                     	ds	3
   497                           tblptru	equ	0xFF8
   498                           tblptrh	equ	0xFF7
   499                           tblptrl	equ	0xFF6
   500                           tablat	equ	0xFF5
   501                           postinc0	equ	0xFEE
   502                           wreg	equ	0xFE8
   503                           postdec1	equ	0xFE5
   504                           fsr1l	equ	0xFE1
   505                           
   506                           	psect	cstackBANK0
   507  0000FA                     __pcstackBANK0:
   508                           	opt stack 0
   509  0000FA                     ___awdiv@counter:
   510                           	opt stack 0
   511                           
   512                           ; 1 bytes @ 0x0
   513  0000FA                     	ds	1
   514  0000FB                     ___awdiv@sign:
   515                           	opt stack 0
   516                           
   517                           ; 1 bytes @ 0x1
   518  0000FB                     	ds	1
   519  0000FC                     ___awdiv@quotient:
   520                           	opt stack 0
   521                           
   522                           ; 2 bytes @ 0x2
   523  0000FC                     	ds	2
   524                           tblptru	equ	0xFF8
   525                           tblptrh	equ	0xFF7
   526                           tblptrl	equ	0xFF6
   527                           tablat	equ	0xFF5
   528                           postinc0	equ	0xFEE
   529                           wreg	equ	0xFE8
   530                           postdec1	equ	0xFE5
   531                           fsr1l	equ	0xFE1
   532                           
   533                           	psect	cstackCOMRAM
   534  000001                     __pcstackCOMRAM:
   535                           	opt stack 0
   536  000001                     ??_YourHighPriorityISR:
   537                           
   538                           ; 1 bytes @ 0x0
   539  000001                     	ds	18
   540  000013                     ?_adcReadChannel:
   541                           	opt stack 0
   542  000013                     ?_strlen:
   543                           	opt stack 0
   544  000013                     ?___wmul:
   545                           	opt stack 0
   546  000013                     ?___ftpack:
   547                           	opt stack 0
   548  000013                     ___wmul@multiplier:
   549                           	opt stack 0
   550  000013                     strlen@s:
   551                           	opt stack 0
   552  000013                     ___ftpack@arg:
   553                           	opt stack 0
   554  000013                     ___ftge@ff1:
   555                           	opt stack 0
   556  000013                     UART_Open@baudrate:
   557                           	opt stack 0
   558                           
   559                           ; 4 bytes @ 0x12
   560  000013                     	ds	2
   561  000015                     ??_adcReadChannel:
   562  000015                     ??_strlen:
   563  000015                     ___wmul@multiplicand:
   564                           	opt stack 0
   565                           
   566                           ; 2 bytes @ 0x14
   567  000015                     	ds	1
   568  000016                     adcReadChannel@channelNumber:
   569                           	opt stack 0
   570  000016                     ___ftpack@exp:
   571                           	opt stack 0
   572  000016                     ___ftge@ff2:
   573                           	opt stack 0
   574                           
   575                           ; 3 bytes @ 0x15
   576  000016                     	ds	1
   577  000017                     ___ftpack@sign:
   578                           	opt stack 0
   579  000017                     ___wmul@product:
   580                           	opt stack 0
   581  000017                     strlen@cp:
   582                           	opt stack 0
   583                           
   584                           ; 2 bytes @ 0x16
   585  000017                     	ds	1
   586  000018                     ??___ftpack:
   587                           
   588                           ; 1 bytes @ 0x17
   589  000018                     	ds	1
   590  000019                     ??___ftge:
   591  000019                     UART_Write@info:
   592                           	opt stack 0
   593  000019                     appendUnits@data2:
   594                           	opt stack 0
   595                           
   596                           ; 5 bytes @ 0x18
   597  000019                     	ds	2
   598  00001B                     ??_UART_Write:
   599  00001B                     ?___ftadd:
   600                           	opt stack 0
   601  00001B                     ?___lltoft:
   602                           	opt stack 0
   603  00001B                     ___ftadd@f1:
   604                           	opt stack 0
   605  00001B                     ___lltoft@c:
   606                           	opt stack 0
   607                           
   608                           ; 4 bytes @ 0x1A
   609  00001B                     	ds	2
   610  00001D                     UART_Write@i:
   611                           	opt stack 0
   612                           
   613                           ; 2 bytes @ 0x1C
   614  00001D                     	ds	1
   615  00001E                     ___ftadd@f2:
   616                           	opt stack 0
   617                           
   618                           ; 3 bytes @ 0x1D
   619  00001E                     	ds	1
   620  00001F                     ??___lltoft:
   621                           
   622                           ; 1 bytes @ 0x1E
   623  00001F                     	ds	2
   624  000021                     ??___ftadd:
   625                           
   626                           ; 1 bytes @ 0x20
   627  000021                     	ds	2
   628  000023                     ___lltoft@exp:
   629                           	opt stack 0
   630                           
   631                           ; 1 bytes @ 0x22
   632  000023                     	ds	1
   633  000024                     ___ftadd@sign:
   634                           	opt stack 0
   635                           
   636                           ; 1 bytes @ 0x23
   637  000024                     	ds	1
   638  000025                     ___ftadd@exp2:
   639                           	opt stack 0
   640                           
   641                           ; 1 bytes @ 0x24
   642  000025                     	ds	1
   643  000026                     ___ftadd@exp1:
   644                           	opt stack 0
   645                           
   646                           ; 1 bytes @ 0x25
   647  000026                     	ds	1
   648  000027                     ?___ftmul:
   649                           	opt stack 0
   650  000027                     ___ftmul@f1:
   651                           	opt stack 0
   652                           
   653                           ; 3 bytes @ 0x26
   654  000027                     	ds	3
   655  00002A                     ___ftmul@f2:
   656                           	opt stack 0
   657                           
   658                           ; 3 bytes @ 0x29
   659  00002A                     	ds	3
   660  00002D                     ??___ftmul:
   661                           
   662                           ; 1 bytes @ 0x2C
   663  00002D                     	ds	3
   664  000030                     ___ftmul@exp:
   665                           	opt stack 0
   666                           
   667                           ; 1 bytes @ 0x2F
   668  000030                     	ds	1
   669  000031                     ___ftmul@f3_as_product:
   670                           	opt stack 0
   671                           
   672                           ; 3 bytes @ 0x30
   673  000031                     	ds	3
   674  000034                     ___ftmul@cntr:
   675                           	opt stack 0
   676                           
   677                           ; 1 bytes @ 0x33
   678  000034                     	ds	1
   679  000035                     ___ftmul@sign:
   680                           	opt stack 0
   681                           
   682                           ; 1 bytes @ 0x34
   683  000035                     	ds	1
   684  000036                     ?___ftdiv:
   685                           	opt stack 0
   686  000036                     ___ftdiv@f1:
   687                           	opt stack 0
   688                           
   689                           ; 3 bytes @ 0x35
   690  000036                     	ds	3
   691  000039                     ___ftdiv@f2:
   692                           	opt stack 0
   693                           
   694                           ; 3 bytes @ 0x38
   695  000039                     	ds	3
   696  00003C                     ??___ftdiv:
   697                           
   698                           ; 1 bytes @ 0x3B
   699  00003C                     	ds	3
   700  00003F                     ___ftdiv@cntr:
   701                           	opt stack 0
   702                           
   703                           ; 1 bytes @ 0x3E
   704  00003F                     	ds	1
   705  000040                     ___ftdiv@f3:
   706                           	opt stack 0
   707                           
   708                           ; 3 bytes @ 0x3F
   709  000040                     	ds	3
   710  000043                     ___ftdiv@exp:
   711                           	opt stack 0
   712                           
   713                           ; 1 bytes @ 0x42
   714  000043                     	ds	1
   715  000044                     ___ftdiv@sign:
   716                           	opt stack 0
   717                           
   718                           ; 1 bytes @ 0x43
   719  000044                     	ds	1
   720  000045                     ?___fttol:
   721                           	opt stack 0
   722  000045                     ___fttol@f1:
   723                           	opt stack 0
   724                           
   725                           ; 3 bytes @ 0x44
   726  000045                     	ds	4
   727  000049                     ??___fttol:
   728                           
   729                           ; 1 bytes @ 0x48
   730  000049                     	ds	5
   731  00004E                     ___fttol@sign1:
   732                           	opt stack 0
   733                           
   734                           ; 1 bytes @ 0x4D
   735  00004E                     	ds	1
   736  00004F                     ___fttol@lval:
   737                           	opt stack 0
   738                           
   739                           ; 4 bytes @ 0x4E
   740  00004F                     	ds	4
   741  000053                     ___fttol@exp1:
   742                           	opt stack 0
   743                           
   744                           ; 1 bytes @ 0x52
   745  000053                     	ds	1
   746  000054                     ?___awdiv:
   747                           	opt stack 0
   748  000054                     ___awdiv@dividend:
   749                           	opt stack 0
   750                           
   751                           ; 2 bytes @ 0x53
   752  000054                     	ds	2
   753  000056                     ___awdiv@divisor:
   754                           	opt stack 0
   755                           
   756                           ; 2 bytes @ 0x55
   757  000056                     	ds	2
   758  000058                     printData@sender:
   759                           	opt stack 0
   760                           
   761                           ; 2 bytes @ 0x57
   762  000058                     	ds	2
   763                           tblptru	equ	0xFF8
   764                           tblptrh	equ	0xFF7
   765                           tblptrl	equ	0xFF6
   766                           tablat	equ	0xFF5
   767                           postinc0	equ	0xFEE
   768                           wreg	equ	0xFE8
   769                           postdec1	equ	0xFE5
   770                           fsr1l	equ	0xFE1
   771                           
   772 ;;
   773 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   774 ;;
   775 ;; *************** function _main *****************
   776 ;; Defined at:
   777 ;;		line 100 in file "test.c"
   778 ;; Parameters:    Size  Location     Type
   779 ;;		None
   780 ;; Auto vars:     Size  Location     Type
   781 ;;		None
   782 ;; Return value:  Size  Location     Type
   783 ;;                  1    wreg      void 
   784 ;; Registers used:
   785 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMRAM   BANK0   BANK1
   791 ;;      Params:         0       0       0
   792 ;;      Locals:         0       0       3
   793 ;;      Temps:          0       0       4
   794 ;;      Totals:         0       0       7
   795 ;;Total ram usage:        7 bytes
   796 ;; Hardware stack levels required when called:    3
   797 ;; This function calls:
   798 ;;		_UART_Close
   799 ;;		_UART_Open
   800 ;;		_UART_Write
   801 ;;		___ftadd
   802 ;;		___ftdiv
   803 ;;		___ftmul
   804 ;;		___fttol
   805 ;;		___lltoft
   806 ;;		_adcConfig
   807 ;;		_adcReadChannel
   808 ;;		_appendUnits
   809 ;;		_printData
   810 ;;		_printNewLine
   811 ;;		_timerConfig
   812 ;; This function is called by:
   813 ;;		Startup code after reset
   814 ;; This function uses a non-reentrant model
   815 ;;
   816                           
   817                           	psect	text0
   818  000226                     __ptext0:
   819                           	opt stack 0
   820  000226                     _main:
   821                           	opt stack 28
   822                           
   823                           ;test.c: 103: OSCCONbits.IRCF0 = 1;
   824                           
   825                           ;incstack = 0
   826  000226  88D3               	bsf	4051,4,c	;volatile
   827                           
   828                           ;test.c: 104: OSCCONbits.IRCF1 = 1;
   829  000228  8AD3               	bsf	4051,5,c	;volatile
   830                           
   831                           ;test.c: 105: OSCCONbits.IRCF2 = 1;
   832  00022A  8CD3               	bsf	4051,6,c	;volatile
   833                           
   834                           ;test.c: 106: OSCCONbits.SCS0 = 1;
   835  00022C  80D3               	bsf	4051,0,c	;volatile
   836                           
   837                           ;test.c: 107: OSCCONbits.SCS1 = 1;
   838  00022E  82D3               	bsf	4051,1,c	;volatile
   839                           
   840                           ;test.c: 110: TRISCbits.RC6 = 1;
   841  000230  8C94               	bsf	3988,6,c	;volatile
   842                           
   843                           ;test.c: 111: TRISCbits.RC7 = 1;
   844  000232  8E94               	bsf	3988,7,c	;volatile
   845                           
   846                           ;test.c: 112: LATCbits.LATC6 = 1;
   847  000234  8C8B               	bsf	3979,6,c	;volatile
   848                           
   849                           ;test.c: 113: LATCbits.LATC7 = 1;
   850  000236  8E8B               	bsf	3979,7,c	;volatile
   851                           
   852                           ;test.c: 114: TRISBbits.RB0 = 0;
   853  000238  9093               	bcf	3987,0,c	;volatile
   854                           
   855                           ;test.c: 116: TRISAbits.RA0 = 0;
   856  00023A  9092               	bcf	3986,0,c	;volatile
   857                           
   858                           ;test.c: 117: LATAbits.LATA0 = 0;
   859  00023C  9089               	bcf	3977,0,c	;volatile
   860                           
   861                           ;test.c: 120: UART_Close();
   862  00023E  EC21  F009         	call	_UART_Close	;wreg free
   863                           
   864                           ;test.c: 121: UART_Open(9600);
   865  000242  0E80               	movlw	128
   866  000244  6E13               	movwf	UART_Open@baudrate,c
   867  000246  0E25               	movlw	37
   868  000248  6E14               	movwf	UART_Open@baudrate+1,c
   869  00024A  0E00               	movlw	0
   870  00024C  6E15               	movwf	UART_Open@baudrate+2,c
   871  00024E  0E00               	movlw	0
   872  000250  6E16               	movwf	UART_Open@baudrate+3,c
   873  000252  EC0E  F009         	call	_UART_Open	;wreg free
   874                           
   875                           ;test.c: 123: adcConfig();
   876  000256  EC01  F009         	call	_adcConfig	;wreg free
   877                           
   878                           ;test.c: 124: timerConfig();
   879  00025A  ECE1  F008         	call	_timerConfig	;wreg free
   880  00025E                     
   881                           ;test.c: 127: if(state == 0)
   882  00025E  5061               	movf	_state,w,c
   883  000260  1062               	iorwf	_state+1,w,c
   884  000262  A4D8               	btfss	status,2,c
   885  000264  D00C               	goto	l142
   886                           
   887                           ;test.c: 128: {
   888                           ;test.c: 129: UART_Write(measurePointer);
   889  000266  C085  F019         	movff	_measurePointer,UART_Write@info
   890  00026A  C086  F01A         	movff	_measurePointer+1,UART_Write@info+1
   891  00026E  ECBB  F007         	call	_UART_Write	;wreg free
   892                           
   893                           ;test.c: 130: printNewLine();
   894  000272  ECF2  F008         	call	_printNewLine	;wreg free
   895                           
   896                           ;test.c: 131: state =1;
   897  000276  0E00               	movlw	0
   898  000278  6E62               	movwf	_state+1,c
   899  00027A  0E01               	movlw	1
   900  00027C  6E61               	movwf	_state,c
   901  00027E                     l142:
   902                           
   903                           ;test.c: 132: }
   904                           ;test.c: 133: if(state == 1)
   905  00027E  0461               	decf	_state,w,c
   906  000280  1062               	iorwf	_state+1,w,c
   907  000282  A4D8               	btfss	status,2,c
   908  000284  D071               	goto	l143
   909                           
   910                           ;test.c: 134: {
   911                           ;test.c: 135: adcData = adcReadChannel(0);
   912  000286  0E00               	movlw	0
   913  000288  ECE6  F006         	call	_adcReadChannel
   914  00028C  C013  F069         	movff	?_adcReadChannel,_adcData
   915  000290  C014  F06A         	movff	?_adcReadChannel+1,_adcData+1
   916                           
   917                           ;test.c: 136: if (maxData> adcData)
   918  000294  5067               	movf	_maxData,w,c
   919  000296  5C69               	subwf	_adcData,w,c
   920  000298  506A               	movf	_adcData+1,w,c
   921  00029A  0A80               	xorlw	128
   922  00029C  0101               	movlb	1	; () banked
   923  00029E  6F07               	movwf	??_main& (0+255),b
   924  0002A0  5068               	movf	_maxData+1,w,c
   925  0002A2  0A80               	xorlw	128
   926  0002A4  5907               	subwfb	??_main& (0+255),w,b
   927  0002A6  B0D8               	btfsc	status,0,c
   928  0002A8  D014               	goto	l144
   929                           
   930                           ; BSR set to: 1
   931                           ;test.c: 137: {
   932                           ;test.c: 138: sysMeasure++;
   933  0002AA  0100               	movlb	0	; () banked
   934  0002AC  4BF4               	infsnz	_sysMeasure& (0+255),f,b
   935  0002AE  2BF5               	incf	(_sysMeasure+1)& (0+255),f,b
   936                           
   937                           ; BSR set to: 0
   938                           ;test.c: 139: maxData = 0;
   939  0002B0  0E00               	movlw	0
   940  0002B2  6E68               	movwf	_maxData+1,c
   941  0002B4  0E00               	movlw	0
   942  0002B6  6E67               	movwf	_maxData,c
   943                           
   944                           ; BSR set to: 0
   945                           ;test.c: 140: sysComp += (unsigned)adcReadChannel(1);
   946  0002B8  0E01               	movlw	1
   947  0002BA  ECE6  F006         	call	_adcReadChannel
   948  0002BE  5013               	movf	?_adcReadChannel,w,c
   949  0002C0  0100               	movlb	0	; () banked
   950  0002C2  27DC               	addwf	_sysComp& (0+255),f,b
   951  0002C4  5014               	movf	?_adcReadChannel+1,w,c
   952  0002C6  23DD               	addwfc	(_sysComp+1)& (0+255),f,b
   953  0002C8  0E00               	movlw	0
   954  0002CA  23DE               	addwfc	(_sysComp+2)& (0+255),f,b
   955  0002CC  0E00               	movlw	0
   956  0002CE  23DF               	addwfc	(_sysComp+3)& (0+255),f,b
   957                           
   958                           ;test.c: 141: }
   959  0002D0  D00F               	goto	l146
   960  0002D2                     l144:
   961                           
   962                           ;test.c: 142: else if(adcData>adcPrev)
   963                           
   964                           ; BSR set to: 0
   965  0002D2  5069               	movf	_adcData,w,c
   966  0002D4  5C6B               	subwf	_adcPrev,w,c
   967  0002D6  506C               	movf	_adcPrev+1,w,c
   968  0002D8  0A80               	xorlw	128
   969  0002DA  0101               	movlb	1	; () banked
   970  0002DC  6F07               	movwf	??_main& (0+255),b
   971  0002DE  506A               	movf	_adcData+1,w,c
   972  0002E0  0A80               	xorlw	128
   973  0002E2  5907               	subwfb	??_main& (0+255),w,b
   974  0002E4  B0D8               	btfsc	status,0,c
   975  0002E6  D004               	goto	l146
   976                           
   977                           ; BSR set to: 1
   978                           ;test.c: 143: {
   979                           ;test.c: 144: maxData = adcData;
   980  0002E8  C069  F067         	movff	_adcData,_maxData
   981  0002EC  C06A  F068         	movff	_adcData+1,_maxData+1
   982  0002F0                     l146:
   983                           
   984                           ;test.c: 145: }
   985                           ;test.c: 146: adcPrev = adcData;
   986                           
   987                           ; BSR set to: 1
   988  0002F0  C069  F06B         	movff	_adcData,_adcPrev
   989  0002F4  C06A  F06C         	movff	_adcData+1,_adcPrev+1
   990                           
   991                           ;test.c: 147: if (sysMeasure >= 8 )
   992  0002F8  0100               	movlb	0	; () banked
   993  0002FA  BFF5               	btfsc	(_sysMeasure+1)& (0+255),7,b
   994  0002FC  D02C               	goto	l147
   995  0002FE  51F5               	movf	(_sysMeasure+1)& (0+255),w,b
   996  000300  E104               	bnz	u2870
   997  000302  0E08               	movlw	8
   998  000304  5DF4               	subwf	_sysMeasure& (0+255),w,b
   999  000306  A0D8               	btfss	status,0,c
  1000  000308  D026               	goto	l147
  1001  00030A                     u2870:
  1002                           
  1003                           ; BSR set to: 0
  1004                           ;test.c: 148: {
  1005                           ;test.c: 149: state = 2;
  1006  00030A  0E00               	movlw	0
  1007  00030C  6E62               	movwf	_state+1,c
  1008  00030E  0E02               	movlw	2
  1009  000310  6E61               	movwf	_state,c
  1010                           
  1011                           ; BSR set to: 0
  1012                           ;test.c: 150: MAP = (sysComp/8);
  1013  000312  C0DC  F107         	movff	_sysComp,??_main
  1014  000316  C0DD  F108         	movff	_sysComp+1,??_main+1
  1015  00031A  C0DE  F109         	movff	_sysComp+2,??_main+2
  1016  00031E  C0DF  F10A         	movff	_sysComp+3,??_main+3
  1017  000322  0E04               	movlw	4
  1018  000324  D006               	goto	u2880
  1019  000326                     u2885:
  1020  000326  0101               	movlb	1	; () banked
  1021  000328  90D8               	bcf	status,0,c
  1022  00032A  330A               	rrcf	(??_main+3)& (0+255),f,b
  1023  00032C  3309               	rrcf	(??_main+2)& (0+255),f,b
  1024  00032E  3308               	rrcf	(??_main+1)& (0+255),f,b
  1025  000330  3307               	rrcf	??_main& (0+255),f,b
  1026  000332                     u2880:
  1027  000332  2EE8               	decfsz	wreg,f,c
  1028  000334  D7F8               	goto	u2885
  1029  000336  C107  F01B         	movff	??_main,___lltoft@c
  1030  00033A  C108  F01C         	movff	??_main+1,___lltoft@c+1
  1031  00033E  C109  F01D         	movff	??_main+2,___lltoft@c+2
  1032  000342  C10A  F01E         	movff	??_main+3,___lltoft@c+3
  1033  000346  EC77  F008         	call	___lltoft	;wreg free
  1034  00034A  C01B  F05A         	movff	?___lltoft,_MAP
  1035  00034E  C01C  F05B         	movff	?___lltoft+1,_MAP+1
  1036  000352  C01D  F05C         	movff	?___lltoft+2,_MAP+2
  1037  000356                     l147:
  1038                           
  1039                           ;test.c: 152: }
  1040                           ;test.c: 153: _delay((unsigned long)((40)*(8000000/4000.0)));
  1041  000356  0E68               	movlw	104
  1042  000358  0101               	movlb	1	; () banked
  1043  00035A  6F07               	movwf	??_main& (0+255),b
  1044  00035C  0EE4               	movlw	228
  1045  00035E                     u3017:
  1046  00035E  2EE8               	decfsz	wreg,f,c
  1047  000360  D7FE               	bra	u3017
  1048  000362  2F07               	decfsz	??_main& (0+255),f,b
  1049  000364  D7FC               	bra	u3017
  1050  000366  F000               	nop	
  1051  000368                     l143:
  1052                           
  1053                           ;test.c: 155: }
  1054                           ;test.c: 156: if (state == 2)
  1055  000368  0E02               	movlw	2
  1056  00036A  1861               	xorwf	_state,w,c
  1057  00036C  1062               	iorwf	_state+1,w,c
  1058  00036E  A4D8               	btfss	status,2,c
  1059  000370  D040               	goto	l148
  1060                           
  1061                           ;test.c: 157: {
  1062                           ;test.c: 158: systolicPressure = (float)(MAP-0x14F)*0.25925;
  1063  000372  0E80               	movlw	128
  1064  000374  6E1E               	movwf	___ftadd@f2,c
  1065  000376  0EA7               	movlw	167
  1066  000378  6E1F               	movwf	___ftadd@f2+1,c
  1067  00037A  0EC3               	movlw	195
  1068  00037C  6E20               	movwf	___ftadd@f2+2,c
  1069  00037E  C05A  F01B         	movff	_MAP,___ftadd@f1
  1070  000382  C05B  F01C         	movff	_MAP+1,___ftadd@f1+1
  1071  000386  C05C  F01D         	movff	_MAP+2,___ftadd@f1+2
  1072  00038A  EC52  F004         	call	___ftadd	;wreg free
  1073  00038E  C01B  F027         	movff	?___ftadd,___ftmul@f1
  1074  000392  C01C  F028         	movff	?___ftadd+1,___ftmul@f1+1
  1075  000396  C01D  F029         	movff	?___ftadd+2,___ftmul@f1+2
  1076  00039A  0EBC               	movlw	188
  1077  00039C  6E2A               	movwf	___ftmul@f2,c
  1078  00039E  0E84               	movlw	132
  1079  0003A0  6E2B               	movwf	___ftmul@f2+1,c
  1080  0003A2  0E3E               	movlw	62
  1081  0003A4  6E2C               	movwf	___ftmul@f2+2,c
  1082  0003A6  ECA2  F005         	call	___ftmul	;wreg free
  1083  0003AA  C027  F0EE         	movff	?___ftmul,_systolicPressure
  1084  0003AE  C028  F0EF         	movff	?___ftmul+1,_systolicPressure+1
  1085  0003B2  C029  F0F0         	movff	?___ftmul+2,_systolicPressure+2
  1086                           
  1087                           ;test.c: 159: UART_Write(sysPointer);
  1088  0003B6  C089  F019         	movff	_sysPointer,UART_Write@info
  1089  0003BA  C08A  F01A         	movff	_sysPointer+1,UART_Write@info+1
  1090  0003BE  ECBB  F007         	call	_UART_Write	;wreg free
  1091                           
  1092                           ;test.c: 160: printData(systolicPressure);
  1093  0003C2  C0EE  F100         	movff	_systolicPressure,printData@data
  1094  0003C6  C0EF  F101         	movff	_systolicPressure+1,printData@data+1
  1095  0003CA  C0F0  F102         	movff	_systolicPressure+2,printData@data+2
  1096  0003CE  EC57  F003         	call	_printData	;wreg free
  1097                           
  1098                           ;test.c: 161: appendUnits();
  1099  0003D2  EC1A  F008         	call	_appendUnits	;wreg free
  1100                           
  1101                           ;test.c: 162: printNewLine();
  1102  0003D6  ECF2  F008         	call	_printNewLine	;wreg free
  1103                           
  1104                           ;test.c: 163: adcPrev = 1000;
  1105  0003DA  0E03               	movlw	3
  1106  0003DC  6E6C               	movwf	_adcPrev+1,c
  1107  0003DE  0EE8               	movlw	232
  1108  0003E0  6E6B               	movwf	_adcPrev,c
  1109                           
  1110                           ;test.c: 164: count = 0;
  1111  0003E2  0E00               	movlw	0
  1112  0003E4  6E60               	movwf	_count+1,c
  1113  0003E6  0E00               	movlw	0
  1114  0003E8  6E5F               	movwf	_count,c
  1115                           
  1116                           ;test.c: 165: state = 3;
  1117  0003EA  0E00               	movlw	0
  1118  0003EC  6E62               	movwf	_state+1,c
  1119  0003EE  0E03               	movlw	3
  1120  0003F0  6E61               	movwf	_state,c
  1121  0003F2                     l148:
  1122                           
  1123                           ;test.c: 167: }
  1124                           ;test.c: 168: if (state ==3)
  1125  0003F2  0E03               	movlw	3
  1126  0003F4  1861               	xorwf	_state,w,c
  1127  0003F6  1062               	iorwf	_state+1,w,c
  1128  0003F8  B4D8               	btfsc	status,2,c
  1129  0003FA  D05D               	goto	l150
  1130  0003FC  D0D2               	goto	l149
  1131  0003FE                     
  1132                           ;test.c: 174: {
  1133                           ;test.c: 175: adcData = adcReadChannel(0);
  1134  0003FE  0E00               	movlw	0
  1135  000400  ECE6  F006         	call	_adcReadChannel
  1136  000404  C013  F069         	movff	?_adcReadChannel,_adcData
  1137  000408  C014  F06A         	movff	?_adcReadChannel+1,_adcData+1
  1138                           
  1139                           ;test.c: 176: if (adcPrev < 0x200 && adcData > 0x200 && count ==0)
  1140  00040C  BE6C               	btfsc	_adcPrev+1,7,c
  1141  00040E  D004               	goto	u2910
  1142  000410  0E02               	movlw	2
  1143  000412  5C6C               	subwf	_adcPrev+1,w,c
  1144  000414  B0D8               	btfsc	status,0,c
  1145  000416  D014               	goto	l152
  1146  000418                     u2910:
  1147  000418  BE6A               	btfsc	_adcData+1,7,c
  1148  00041A  D012               	goto	l152
  1149  00041C  0469               	decf	_adcData,w,c
  1150  00041E  0E02               	movlw	2
  1151  000420  586A               	subwfb	_adcData+1,w,c
  1152  000422  A0D8               	btfss	status,0,c
  1153  000424  D00D               	goto	l152
  1154  000426  505F               	movf	_count,w,c
  1155  000428  1060               	iorwf	_count+1,w,c
  1156  00042A  A4D8               	btfss	status,2,c
  1157  00042C  D009               	goto	l152
  1158                           
  1159                           ;test.c: 177: {
  1160                           ;test.c: 178: count=1;
  1161  00042E  0E00               	movlw	0
  1162  000430  6E60               	movwf	_count+1,c
  1163  000432  0E01               	movlw	1
  1164  000434  6E5F               	movwf	_count,c
  1165                           
  1166                           ;test.c: 179: TMR0H = 0x00;
  1167  000436  0E00               	movlw	0
  1168  000438  6ED7               	movwf	4055,c	;volatile
  1169                           
  1170                           ;test.c: 180: TMR0L = 0x00;
  1171  00043A  0E00               	movlw	0
  1172  00043C  6ED6               	movwf	4054,c	;volatile
  1173                           
  1174                           ;test.c: 181: T0CONbits.TMR0ON = 1;
  1175  00043E  8ED5               	bsf	4053,7,c	;volatile
  1176  000440                     l152:
  1177                           
  1178                           ;test.c: 182: }
  1179                           ;test.c: 183: if (adcPrev < 0x200 && adcData > 0x200 && count ==1)
  1180  000440  BE6C               	btfsc	_adcPrev+1,7,c
  1181  000442  D004               	goto	u2940
  1182  000444  0E02               	movlw	2
  1183  000446  5C6C               	subwf	_adcPrev+1,w,c
  1184  000448  B0D8               	btfsc	status,0,c
  1185  00044A  D031               	goto	l154
  1186  00044C                     u2940:
  1187  00044C  BE6A               	btfsc	_adcData+1,7,c
  1188  00044E  D02F               	goto	l154
  1189  000450  0469               	decf	_adcData,w,c
  1190  000452  0E02               	movlw	2
  1191  000454  586A               	subwfb	_adcData+1,w,c
  1192  000456  A0D8               	btfss	status,0,c
  1193  000458  D02A               	goto	l154
  1194  00045A  045F               	decf	_count,w,c
  1195  00045C  1060               	iorwf	_count+1,w,c
  1196  00045E  A4D8               	btfss	status,2,c
  1197  000460  D026               	goto	l154
  1198                           
  1199                           ;test.c: 184: {
  1200                           ;test.c: 185: T0CONbits.TMR0ON = 0;
  1201  000462  9ED5               	bcf	4053,7,c	;volatile
  1202                           
  1203                           ;test.c: 186: timerInt = (TMR0H*256)+TMR0L;
  1204  000464  50D7               	movf	4055,w,c	;volatile
  1205  000466  0101               	movlb	1	; () banked
  1206  000468  6F08               	movwf	(??_main+1)& (0+255),b
  1207  00046A  6B07               	clrf	??_main& (0+255),b
  1208  00046C  50D6               	movf	4054,w,c	;volatile
  1209  00046E  2507               	addwf	??_main& (0+255),w,b
  1210  000470  6E65               	movwf	_timerInt,c
  1211  000472  0E00               	movlw	0
  1212  000474  2108               	addwfc	(??_main+1)& (0+255),w,b
  1213  000476  6E66               	movwf	_timerInt+1,c
  1214                           
  1215                           ;test.c: 187: timerComp = timerInt + timerComp;
  1216  000478  5065               	movf	_timerInt,w,c
  1217  00047A  0100               	movlb	0	; () banked
  1218  00047C  25E4               	addwf	_timerComp& (0+255),w,b
  1219  00047E  6FE4               	movwf	_timerComp& (0+255),b
  1220  000480  5066               	movf	_timerInt+1,w,c
  1221  000482  21E5               	addwfc	(_timerComp+1)& (0+255),w,b
  1222  000484  6FE5               	movwf	(_timerComp+1)& (0+255),b
  1223  000486  0E00               	movlw	0
  1224  000488  21E6               	addwfc	(_timerComp+2)& (0+255),w,b
  1225  00048A  6FE6               	movwf	(_timerComp+2)& (0+255),b
  1226  00048C  0E00               	movlw	0
  1227  00048E  21E7               	addwfc	(_timerComp+3)& (0+255),w,b
  1228  000490  6FE7               	movwf	(_timerComp+3)& (0+255),b
  1229                           
  1230                           ; BSR set to: 0
  1231                           ;test.c: 188: TMR0H = 0x00;
  1232  000492  0E00               	movlw	0
  1233  000494  6ED7               	movwf	4055,c	;volatile
  1234                           
  1235                           ; BSR set to: 0
  1236                           ;test.c: 189: TMR0L = 0x00;
  1237  000496  0E00               	movlw	0
  1238  000498  6ED6               	movwf	4054,c	;volatile
  1239                           
  1240                           ; BSR set to: 0
  1241                           ;test.c: 190: avgCount++;
  1242  00049A  4A5D               	infsnz	_avgCount,f,c
  1243  00049C  2A5E               	incf	_avgCount+1,f,c
  1244                           
  1245                           ; BSR set to: 0
  1246                           ;test.c: 191: if(avgCount<8)
  1247  00049E  BE5E               	btfsc	_avgCount+1,7,c
  1248  0004A0  D005               	goto	u2970
  1249  0004A2  505E               	movf	_avgCount+1,w,c
  1250  0004A4  E104               	bnz	l153
  1251  0004A6  0E08               	movlw	8
  1252  0004A8  5C5D               	subwf	_avgCount,w,c
  1253  0004AA  A0D8               	btfss	status,0,c
  1254  0004AC                     u2970:
  1255                           
  1256                           ; BSR set to: 0
  1257                           ;test.c: 192: {
  1258                           ;test.c: 193: T0CONbits.TMR0ON = 1;
  1259  0004AC  8ED5               	bsf	4053,7,c	;volatile
  1260  0004AE                     l154:
  1261  0004AE                     l153:
  1262                           
  1263                           ;test.c: 194: }
  1264                           ;test.c: 195: }
  1265                           ;test.c: 197: adcPrev = adcData;
  1266  0004AE  C069  F06B         	movff	_adcData,_adcPrev
  1267  0004B2  C06A  F06C         	movff	_adcData+1,_adcPrev+1
  1268  0004B6                     l150:
  1269  0004B6  BE5E               	btfsc	_avgCount+1,7,c
  1270  0004B8  D7A2               	goto	l151
  1271  0004BA  505E               	movf	_avgCount+1,w,c
  1272  0004BC  E104               	bnz	l2718
  1273  0004BE  0E08               	movlw	8
  1274  0004C0  5C5D               	subwf	_avgCount,w,c
  1275  0004C2  A0D8               	btfss	status,0,c
  1276  0004C4  D79C               	goto	l151
  1277  0004C6                     l2718:
  1278                           
  1279                           ;test.c: 198: }
  1280                           ;test.c: 199: bpm = ((timerComp*0.000032)/8)*60;
  1281  0004C6  0E00               	movlw	0
  1282  0004C8  6E39               	movwf	___ftdiv@f2,c
  1283  0004CA  0E00               	movlw	0
  1284  0004CC  6E3A               	movwf	___ftdiv@f2+1,c
  1285  0004CE  0E41               	movlw	65
  1286  0004D0  6E3B               	movwf	___ftdiv@f2+2,c
  1287  0004D2  0E38               	movlw	56
  1288  0004D4  6E2A               	movwf	___ftmul@f2,c
  1289  0004D6  0E06               	movlw	6
  1290  0004D8  6E2B               	movwf	___ftmul@f2+1,c
  1291  0004DA  0E38               	movlw	56
  1292  0004DC  6E2C               	movwf	___ftmul@f2+2,c
  1293  0004DE  C0E4  F01B         	movff	_timerComp,___lltoft@c
  1294  0004E2  C0E5  F01C         	movff	_timerComp+1,___lltoft@c+1
  1295  0004E6  C0E6  F01D         	movff	_timerComp+2,___lltoft@c+2
  1296  0004EA  C0E7  F01E         	movff	_timerComp+3,___lltoft@c+3
  1297  0004EE  EC77  F008         	call	___lltoft	;wreg free
  1298  0004F2  C01B  F027         	movff	?___lltoft,___ftmul@f1
  1299  0004F6  C01C  F028         	movff	?___lltoft+1,___ftmul@f1+1
  1300  0004FA  C01D  F029         	movff	?___lltoft+2,___ftmul@f1+2
  1301  0004FE  ECA2  F005         	call	___ftmul	;wreg free
  1302  000502  C027  F036         	movff	?___ftmul,___ftdiv@f1
  1303  000506  C028  F037         	movff	?___ftmul+1,___ftdiv@f1+1
  1304  00050A  C029  F038         	movff	?___ftmul+2,___ftdiv@f1+2
  1305  00050E  EC1C  F006         	call	___ftdiv	;wreg free
  1306  000512  C036  F10B         	movff	?___ftdiv,_main$1527
  1307  000516  C037  F10C         	movff	?___ftdiv+1,_main$1527+1
  1308  00051A  C038  F10D         	movff	?___ftdiv+2,_main$1527+2
  1309                           
  1310                           ;test.c: 198: }
  1311                           ;test.c: 199: bpm = ((timerComp*0.000032)/8)*60;
  1312  00051E  0E00               	movlw	0
  1313  000520  6E2A               	movwf	___ftmul@f2,c
  1314  000522  0E70               	movlw	112
  1315  000524  6E2B               	movwf	___ftmul@f2+1,c
  1316  000526  0E42               	movlw	66
  1317  000528  6E2C               	movwf	___ftmul@f2+2,c
  1318  00052A  C10B  F027         	movff	_main$1527,___ftmul@f1
  1319  00052E  C10C  F028         	movff	_main$1527+1,___ftmul@f1+1
  1320  000532  C10D  F029         	movff	_main$1527+2,___ftmul@f1+2
  1321  000536  ECA2  F005         	call	___ftmul	;wreg free
  1322  00053A  C027  F045         	movff	?___ftmul,___fttol@f1
  1323  00053E  C028  F046         	movff	?___ftmul+1,___fttol@f1+1
  1324  000542  C029  F047         	movff	?___ftmul+2,___fttol@f1+2
  1325  000546  EC28  F005         	call	___fttol	;wreg free
  1326  00054A  C045  F0E0         	movff	?___fttol,_bpm
  1327  00054E  C046  F0E1         	movff	?___fttol+1,_bpm+1
  1328  000552  C047  F0E2         	movff	?___fttol+2,_bpm+2
  1329  000556  C048  F0E3         	movff	?___fttol+3,_bpm+3
  1330                           
  1331                           ;test.c: 201: UART_Write(bpmPointer);
  1332  00055A  C087  F019         	movff	_bpmPointer,UART_Write@info
  1333  00055E  C088  F01A         	movff	_bpmPointer+1,UART_Write@info+1
  1334  000562  ECBB  F007         	call	_UART_Write	;wreg free
  1335                           
  1336                           ;test.c: 202: heartFloat = (float)bpm;
  1337  000566  C0E0  F01B         	movff	_bpm,___lltoft@c
  1338  00056A  C0E1  F01C         	movff	_bpm+1,___lltoft@c+1
  1339  00056E  C0E2  F01D         	movff	_bpm+2,___lltoft@c+2
  1340  000572  C0E3  F01E         	movff	_bpm+3,___lltoft@c+3
  1341  000576  EC77  F008         	call	___lltoft	;wreg free
  1342  00057A  C01B  F0EB         	movff	?___lltoft,_heartFloat
  1343  00057E  C01C  F0EC         	movff	?___lltoft+1,_heartFloat+1
  1344  000582  C01D  F0ED         	movff	?___lltoft+2,_heartFloat+2
  1345                           
  1346                           ;test.c: 203: printData(heartFloat);
  1347  000586  C0EB  F100         	movff	_heartFloat,printData@data
  1348  00058A  C0EC  F101         	movff	_heartFloat+1,printData@data+1
  1349  00058E  C0ED  F102         	movff	_heartFloat+2,printData@data+2
  1350  000592  EC57  F003         	call	_printData	;wreg free
  1351                           
  1352                           ;test.c: 204: printNewLine();
  1353  000596  ECF2  F008         	call	_printNewLine	;wreg free
  1354                           
  1355                           ;test.c: 205: state = 4;
  1356  00059A  0E00               	movlw	0
  1357  00059C  6E62               	movwf	_state+1,c
  1358  00059E  0E04               	movlw	4
  1359  0005A0  6E61               	movwf	_state,c
  1360  0005A2                     l149:
  1361                           
  1362                           ;test.c: 206: }
  1363                           ;test.c: 207: if(state ==4)
  1364  0005A2  0E04               	movlw	4
  1365  0005A4  1861               	xorwf	_state,w,c
  1366  0005A6  1062               	iorwf	_state+1,w,c
  1367  0005A8  A4D8               	btfss	status,2,c
  1368  0005AA  D050               	goto	l156
  1369                           
  1370                           ;test.c: 208: {
  1371                           ;test.c: 209: _delay((unsigned long)((2593)*(8000000/4000.0)));
  1372  0005AC  0E1B               	movlw	27
  1373  0005AE  0101               	movlb	1	; () banked
  1374  0005B0  6F08               	movwf	(??_main+1)& (0+255),b
  1375  0005B2  0E4F               	movlw	79
  1376  0005B4  6F07               	movwf	??_main& (0+255),b
  1377  0005B6  0EFD               	movlw	253
  1378  0005B8                     u3027:
  1379  0005B8  2EE8               	decfsz	wreg,f,c
  1380  0005BA  D7FE               	bra	u3027
  1381  0005BC  2F07               	decfsz	??_main& (0+255),f,b
  1382  0005BE  D7FC               	bra	u3027
  1383  0005C0  2F08               	decfsz	(??_main+1)& (0+255),f,b
  1384  0005C2  D7FA               	bra	u3027
  1385                           
  1386                           ;test.c: 210: diastolicPressure = ((float)MAP-0x14F)*0.16775;
  1387  0005C4  0E80               	movlw	128
  1388  0005C6  6E1E               	movwf	___ftadd@f2,c
  1389  0005C8  0EA7               	movlw	167
  1390  0005CA  6E1F               	movwf	___ftadd@f2+1,c
  1391  0005CC  0EC3               	movlw	195
  1392  0005CE  6E20               	movwf	___ftadd@f2+2,c
  1393  0005D0  C05A  F01B         	movff	_MAP,___ftadd@f1
  1394  0005D4  C05B  F01C         	movff	_MAP+1,___ftadd@f1+1
  1395  0005D8  C05C  F01D         	movff	_MAP+2,___ftadd@f1+2
  1396  0005DC  EC52  F004         	call	___ftadd	;wreg free
  1397  0005E0  C01B  F027         	movff	?___ftadd,___ftmul@f1
  1398  0005E4  C01C  F028         	movff	?___ftadd+1,___ftmul@f1+1
  1399  0005E8  C01D  F029         	movff	?___ftadd+2,___ftmul@f1+2
  1400  0005EC  0EC7               	movlw	199
  1401  0005EE  6E2A               	movwf	___ftmul@f2,c
  1402  0005F0  0E2B               	movlw	43
  1403  0005F2  6E2B               	movwf	___ftmul@f2+1,c
  1404  0005F4  0E3E               	movlw	62
  1405  0005F6  6E2C               	movwf	___ftmul@f2+2,c
  1406  0005F8  ECA2  F005         	call	___ftmul	;wreg free
  1407  0005FC  C027  F0E8         	movff	?___ftmul,_diastolicPressure
  1408  000600  C028  F0E9         	movff	?___ftmul+1,_diastolicPressure+1
  1409  000604  C029  F0EA         	movff	?___ftmul+2,_diastolicPressure+2
  1410                           
  1411                           ;test.c: 211: UART_Write(diasPointer);
  1412  000608  C08B  F019         	movff	_diasPointer,UART_Write@info
  1413  00060C  C08C  F01A         	movff	_diasPointer+1,UART_Write@info+1
  1414  000610  ECBB  F007         	call	_UART_Write	;wreg free
  1415                           
  1416                           ;test.c: 212: printData(diastolicPressure);
  1417  000614  C0E8  F100         	movff	_diastolicPressure,printData@data
  1418  000618  C0E9  F101         	movff	_diastolicPressure+1,printData@data+1
  1419  00061C  C0EA  F102         	movff	_diastolicPressure+2,printData@data+2
  1420  000620  EC57  F003         	call	_printData	;wreg free
  1421                           
  1422                           ;test.c: 213: appendUnits();
  1423  000624  EC1A  F008         	call	_appendUnits	;wreg free
  1424                           
  1425                           ;test.c: 214: printNewLine();
  1426  000628  ECF2  F008         	call	_printNewLine	;wreg free
  1427                           
  1428                           ;test.c: 215: UART_Write("Finish!\r\n");
  1429  00062C  0E1A               	movlw	low STR_1
  1430  00062E  6E19               	movwf	UART_Write@info,c
  1431  000630  0E02               	movlw	high STR_1
  1432  000632  6E1A               	movwf	UART_Write@info+1,c
  1433  000634  ECBB  F007         	call	_UART_Write	;wreg free
  1434                           
  1435                           ;test.c: 216: UART_Write("Press 1 to start over!\r\n");
  1436  000638  0E01               	movlw	low STR_2
  1437  00063A  6E19               	movwf	UART_Write@info,c
  1438  00063C  0E02               	movlw	high STR_2
  1439  00063E  6E1A               	movwf	UART_Write@info+1,c
  1440  000640  ECBB  F007         	call	_UART_Write	;wreg free
  1441                           
  1442                           ;test.c: 217: state =5;
  1443  000644  0E00               	movlw	0
  1444  000646  6E62               	movwf	_state+1,c
  1445  000648  0E05               	movlw	5
  1446  00064A  6E61               	movwf	_state,c
  1447  00064C                     l156:
  1448                           
  1449                           ;test.c: 218: }
  1450                           ;test.c: 219: if(state ==5)
  1451  00064C  0E05               	movlw	5
  1452  00064E  1861               	xorwf	_state,w,c
  1453  000650  1062               	iorwf	_state+1,w,c
  1454  000652  A4D8               	btfss	status,2,c
  1455  000654  D604               	goto	l141
  1456                           
  1457                           ;test.c: 220: {
  1458                           ;test.c: 221: sysMeasure = 0;
  1459  000656  0E00               	movlw	0
  1460  000658  0100               	movlb	0	; () banked
  1461  00065A  6FF5               	movwf	(_sysMeasure+1)& (0+255),b
  1462  00065C  0E00               	movlw	0
  1463  00065E  6FF4               	movwf	_sysMeasure& (0+255),b
  1464                           
  1465                           ;test.c: 222: maxData = 0;
  1466  000660  0E00               	movlw	0
  1467  000662  6E68               	movwf	_maxData+1,c
  1468  000664  0E00               	movlw	0
  1469  000666  6E67               	movwf	_maxData,c
  1470                           
  1471                           ;test.c: 223: sysComp = 0;
  1472  000668  0E00               	movlw	0
  1473  00066A  6FDC               	movwf	_sysComp& (0+255),b
  1474  00066C  0E00               	movlw	0
  1475  00066E  6FDD               	movwf	(_sysComp+1)& (0+255),b
  1476  000670  0E00               	movlw	0
  1477  000672  6FDE               	movwf	(_sysComp+2)& (0+255),b
  1478  000674  0E00               	movlw	0
  1479  000676  6FDF               	movwf	(_sysComp+3)& (0+255),b
  1480                           
  1481                           ;test.c: 224: MAP = 0;
  1482  000678  0E00               	movlw	0
  1483  00067A  6E5A               	movwf	_MAP,c
  1484  00067C  0E00               	movlw	0
  1485  00067E  6E5B               	movwf	_MAP+1,c
  1486  000680  0E00               	movlw	0
  1487  000682  6E5C               	movwf	_MAP+2,c
  1488                           
  1489                           ;test.c: 225: count = 0;
  1490  000684  0E00               	movlw	0
  1491  000686  6E60               	movwf	_count+1,c
  1492  000688  0E00               	movlw	0
  1493  00068A  6E5F               	movwf	_count,c
  1494                           
  1495                           ;test.c: 226: avgCount = 0;
  1496  00068C  0E00               	movlw	0
  1497  00068E  6E5E               	movwf	_avgCount+1,c
  1498  000690  0E00               	movlw	0
  1499  000692  6E5D               	movwf	_avgCount,c
  1500                           
  1501                           ;test.c: 227: timerComp = 0;
  1502  000694  0E00               	movlw	0
  1503  000696  6FE4               	movwf	_timerComp& (0+255),b
  1504  000698  0E00               	movlw	0
  1505  00069A  6FE5               	movwf	(_timerComp+1)& (0+255),b
  1506  00069C  0E00               	movlw	0
  1507  00069E  6FE6               	movwf	(_timerComp+2)& (0+255),b
  1508  0006A0  0E00               	movlw	0
  1509  0006A2  6FE7               	movwf	(_timerComp+3)& (0+255),b
  1510                           
  1511                           ;test.c: 228: state = 6;
  1512  0006A4  0E00               	movlw	0
  1513  0006A6  6E62               	movwf	_state+1,c
  1514  0006A8  0E06               	movlw	6
  1515  0006AA  6E61               	movwf	_state,c
  1516                           
  1517                           ; BSR set to: 0
  1518                           
  1519                           ; BSR set to: 0
  1520  0006AC  D5D8               	goto	l141
  1521  0006AE                     __end_of_main:
  1522                           	opt stack 0
  1523                           tblptru	equ	0xFF8
  1524                           tblptrh	equ	0xFF7
  1525                           tblptrl	equ	0xFF6
  1526                           tablat	equ	0xFF5
  1527                           postinc0	equ	0xFEE
  1528                           wreg	equ	0xFE8
  1529                           postdec1	equ	0xFE5
  1530                           fsr1l	equ	0xFE1
  1531                           status	equ	0xFD8
  1532                           
  1533 ;; *************** function _timerConfig *****************
  1534 ;; Defined at:
  1535 ;;		line 312 in file "test.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;		None
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;		None
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  1    wreg      void 
  1542 ;; Registers used:
  1543 ;;		wreg, status,2
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMRAM   BANK0   BANK1
  1549 ;;      Params:         0       0       0
  1550 ;;      Locals:         0       0       0
  1551 ;;      Temps:          0       0       0
  1552 ;;      Totals:         0       0       0
  1553 ;;Total ram usage:        0 bytes
  1554 ;; Hardware stack levels used:    1
  1555 ;; Hardware stack levels required when called:    1
  1556 ;; This function calls:
  1557 ;;		Nothing
  1558 ;; This function is called by:
  1559 ;;		_main
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           	psect	text1
  1564  0011C2                     __ptext1:
  1565                           	opt stack 0
  1566  0011C2                     _timerConfig:
  1567                           	opt stack 29
  1568                           
  1569                           ;test.c: 314: T0CON = 0;
  1570                           
  1571                           ; BSR set to: 0
  1572                           ;incstack = 0
  1573  0011C2  0E00               	movlw	0
  1574  0011C4  6ED5               	movwf	4053,c	;volatile
  1575                           
  1576                           ;test.c: 315: T0CONbits.PSA = 1;
  1577  0011C6  86D5               	bsf	4053,3,c	;volatile
  1578                           
  1579                           ;test.c: 316: TMR0H = 0x00;
  1580  0011C8  0E00               	movlw	0
  1581  0011CA  6ED7               	movwf	4055,c	;volatile
  1582                           
  1583                           ;test.c: 317: TMR0L = 0x00;
  1584  0011CC  0E00               	movlw	0
  1585  0011CE  6ED6               	movwf	4054,c	;volatile
  1586                           
  1587                           ;test.c: 319: INTCONbits.TMR0IE =1;
  1588  0011D0  8AF2               	bsf	intcon,5,c	;volatile
  1589                           
  1590                           ;test.c: 320: INTCONbits.TMR0IF = 0;
  1591  0011D2  94F2               	bcf	intcon,2,c	;volatile
  1592                           
  1593                           ;test.c: 322: RCONbits.IPEN = 1;
  1594  0011D4  8ED0               	bsf	4048,7,c	;volatile
  1595                           
  1596                           ;test.c: 323: T0CONbits.T08BIT = 0;
  1597  0011D6  9CD5               	bcf	4053,6,c	;volatile
  1598                           
  1599                           ;test.c: 324: T0CONbits.T0CS = 0;
  1600  0011D8  9AD5               	bcf	4053,5,c	;volatile
  1601                           
  1602                           ;test.c: 326: T0CONbits.PSA = 0;
  1603  0011DA  96D5               	bcf	4053,3,c	;volatile
  1604                           
  1605                           ;test.c: 327: T0CONbits.T0PS2 = 0;
  1606  0011DC  94D5               	bcf	4053,2,c	;volatile
  1607                           
  1608                           ;test.c: 328: T0CONbits.T0PS1 = 1;
  1609  0011DE  82D5               	bsf	4053,1,c	;volatile
  1610                           
  1611                           ;test.c: 329: T0CONbits.T0PS0 = 0;
  1612  0011E0  90D5               	bcf	4053,0,c	;volatile
  1613  0011E2  0012               	return		;funcret
  1614  0011E4                     __end_of_timerConfig:
  1615                           	opt stack 0
  1616                           tblptru	equ	0xFF8
  1617                           tblptrh	equ	0xFF7
  1618                           tblptrl	equ	0xFF6
  1619                           tablat	equ	0xFF5
  1620                           intcon	equ	0xFF2
  1621                           postinc0	equ	0xFEE
  1622                           wreg	equ	0xFE8
  1623                           postdec1	equ	0xFE5
  1624                           fsr1l	equ	0xFE1
  1625                           status	equ	0xFD8
  1626                           
  1627 ;; *************** function _printNewLine *****************
  1628 ;; Defined at:
  1629 ;;		line 243 in file "test.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;		None
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;		None
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  1    wreg      void 
  1636 ;; Registers used:
  1637 ;;		wreg, status,2, cstack
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMRAM   BANK0   BANK1
  1643 ;;      Params:         0       0       0
  1644 ;;      Locals:         0       0       0
  1645 ;;      Temps:          0       0       0
  1646 ;;      Totals:         0       0       0
  1647 ;;Total ram usage:        0 bytes
  1648 ;; Hardware stack levels used:    1
  1649 ;; Hardware stack levels required when called:    2
  1650 ;; This function calls:
  1651 ;;		_UART_TX_Busy
  1652 ;; This function is called by:
  1653 ;;		_main
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           	psect	text2
  1658  0011E4                     __ptext2:
  1659                           	opt stack 0
  1660  0011E4                     _printNewLine:
  1661                           	opt stack 28
  1662                           
  1663                           ;test.c: 245: while (UART_TX_Busy());
  1664                           
  1665                           ;incstack = 0
  1666  0011E4  EC1B  F009         	call	_UART_TX_Busy	;wreg free
  1667  0011E8  0900               	iorlw	0
  1668  0011EA  A4D8               	btfss	status,2,c
  1669  0011EC  D7FB               	goto	_printNewLine
  1670                           
  1671                           ;test.c: 246: TXREG = 0x0A;
  1672  0011EE  0E0A               	movlw	10
  1673  0011F0  6EAD               	movwf	4013,c	;volatile
  1674  0011F2  EC1B  F009         	call	_UART_TX_Busy	;wreg free
  1675  0011F6  0900               	iorlw	0
  1676  0011F8  A4D8               	btfss	status,2,c
  1677  0011FA  D7FB               	goto	l181
  1678                           
  1679                           ;test.c: 248: TXREG = 0x0D;
  1680  0011FC  0E0D               	movlw	13
  1681  0011FE  6EAD               	movwf	4013,c	;volatile
  1682  001200  0012               	return		;funcret
  1683  001202                     __end_of_printNewLine:
  1684                           	opt stack 0
  1685                           tblptru	equ	0xFF8
  1686                           tblptrh	equ	0xFF7
  1687                           tblptrl	equ	0xFF6
  1688                           tablat	equ	0xFF5
  1689                           intcon	equ	0xFF2
  1690                           postinc0	equ	0xFEE
  1691                           wreg	equ	0xFE8
  1692                           postdec1	equ	0xFE5
  1693                           fsr1l	equ	0xFE1
  1694                           status	equ	0xFD8
  1695                           
  1696 ;; *************** function _printData *****************
  1697 ;; Defined at:
  1698 ;;		line 250 in file "test.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;  data            3    0[BANK1 ] float 
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;  sender          2   87[COMRAM] int 
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMRAM   BANK0   BANK1
  1712 ;;      Params:         0       0       3
  1713 ;;      Locals:         2       0       0
  1714 ;;      Temps:          0       0       4
  1715 ;;      Totals:         2       0       7
  1716 ;;Total ram usage:        9 bytes
  1717 ;; Hardware stack levels used:    1
  1718 ;; Hardware stack levels required when called:    2
  1719 ;; This function calls:
  1720 ;;		_UART_TX_Busy
  1721 ;;		___awdiv
  1722 ;;		___ftge
  1723 ;;		___fttol
  1724 ;;		___wmul
  1725 ;; This function is called by:
  1726 ;;		_main
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           	psect	text3
  1731  0006AE                     __ptext3:
  1732                           	opt stack 0
  1733  0006AE                     _printData:
  1734                           	opt stack 28
  1735                           
  1736                           ;test.c: 252: int sender = 0;
  1737                           
  1738                           ;incstack = 0
  1739  0006AE  0E00               	movlw	0
  1740  0006B0  6E59               	movwf	printData@sender+1,c
  1741  0006B2  0E00               	movlw	0
  1742  0006B4  6E58               	movwf	printData@sender,c
  1743                           
  1744                           ;test.c: 253: if (data>100 && data<200)
  1745  0006B6  0E00               	movlw	0
  1746  0006B8  6E13               	movwf	___ftge@ff1,c
  1747  0006BA  0EC8               	movlw	200
  1748  0006BC  6E14               	movwf	___ftge@ff1+1,c
  1749  0006BE  0E42               	movlw	66
  1750  0006C0  6E15               	movwf	___ftge@ff1+2,c
  1751  0006C2  C100  F016         	movff	printData@data,___ftge@ff2
  1752  0006C6  C101  F017         	movff	printData@data+1,___ftge@ff2+1
  1753  0006CA  C102  F018         	movff	printData@data+2,___ftge@ff2+2
  1754  0006CE  EC30  F007         	call	___ftge	;wreg free
  1755  0006D2  B0D8               	btfsc	status,0,c
  1756  0006D4  D07B               	goto	l186
  1757  0006D6  C100  F013         	movff	printData@data,___ftge@ff1
  1758  0006DA  C101  F014         	movff	printData@data+1,___ftge@ff1+1
  1759  0006DE  C102  F015         	movff	printData@data+2,___ftge@ff1+2
  1760  0006E2  0E00               	movlw	0
  1761  0006E4  6E16               	movwf	___ftge@ff2,c
  1762  0006E6  0E48               	movlw	72
  1763  0006E8  6E17               	movwf	___ftge@ff2+1,c
  1764  0006EA  0E43               	movlw	67
  1765  0006EC  6E18               	movwf	___ftge@ff2+2,c
  1766  0006EE  EC30  F007         	call	___ftge	;wreg free
  1767  0006F2  B0D8               	btfsc	status,0,c
  1768  0006F4  D06B               	goto	l186
  1769                           
  1770                           ;test.c: 254: {
  1771                           ;test.c: 255: sender = ((int)data/100);
  1772  0006F6  C100  F045         	movff	printData@data,___fttol@f1
  1773  0006FA  C101  F046         	movff	printData@data+1,___fttol@f1+1
  1774  0006FE  C102  F047         	movff	printData@data+2,___fttol@f1+2
  1775  000702  EC28  F005         	call	___fttol	;wreg free
  1776  000706  C045  F054         	movff	?___fttol,___awdiv@dividend
  1777  00070A  C046  F055         	movff	?___fttol+1,___awdiv@dividend+1
  1778  00070E  0E00               	movlw	0
  1779  000710  6E57               	movwf	___awdiv@divisor+1,c
  1780  000712  0E64               	movlw	100
  1781  000714  6E56               	movwf	___awdiv@divisor,c
  1782  000716  EC78  F007         	call	___awdiv	;wreg free
  1783  00071A  C054  F058         	movff	?___awdiv,printData@sender
  1784  00071E  C055  F059         	movff	?___awdiv+1,printData@sender+1
  1785  000722  EC1B  F009         	call	_UART_TX_Busy	;wreg free
  1786  000726  0900               	iorlw	0
  1787  000728  A4D8               	btfss	status,2,c
  1788  00072A  D7FB               	goto	l188
  1789                           
  1790                           ;test.c: 257: TXREG = (int)sender + 0x30;
  1791  00072C  5058               	movf	printData@sender,w,c
  1792  00072E  0F30               	addlw	48
  1793  000730  6EAD               	movwf	4013,c	;volatile
  1794                           
  1795                           ;test.c: 258: sender = (int)(((int)data -100)/10);
  1796  000732  C100  F045         	movff	printData@data,___fttol@f1
  1797  000736  C101  F046         	movff	printData@data+1,___fttol@f1+1
  1798  00073A  C102  F047         	movff	printData@data+2,___fttol@f1+2
  1799  00073E  EC28  F005         	call	___fttol	;wreg free
  1800  000742  0E9C               	movlw	156
  1801  000744  2445               	addwf	?___fttol,w,c
  1802  000746  6E54               	movwf	___awdiv@dividend,c
  1803  000748  0EFF               	movlw	255
  1804  00074A  2046               	addwfc	?___fttol+1,w,c
  1805  00074C  6E55               	movwf	___awdiv@dividend+1,c
  1806  00074E  0E00               	movlw	0
  1807  000750  6E57               	movwf	___awdiv@divisor+1,c
  1808  000752  0E0A               	movlw	10
  1809  000754  6E56               	movwf	___awdiv@divisor,c
  1810  000756  EC78  F007         	call	___awdiv	;wreg free
  1811  00075A  C054  F058         	movff	?___awdiv,printData@sender
  1812  00075E  C055  F059         	movff	?___awdiv+1,printData@sender+1
  1813  000762  EC1B  F009         	call	_UART_TX_Busy	;wreg free
  1814  000766  0900               	iorlw	0
  1815  000768  A4D8               	btfss	status,2,c
  1816  00076A  D7FB               	goto	l191
  1817                           
  1818                           ;test.c: 260: TXREG =(int)sender + 0x30;
  1819  00076C  5058               	movf	printData@sender,w,c
  1820  00076E  0F30               	addlw	48
  1821  000770  6EAD               	movwf	4013,c	;volatile
  1822                           
  1823                           ;test.c: 261: sender = ((int)data - 100 -(sender*10));
  1824  000772  C100  F045         	movff	printData@data,___fttol@f1
  1825  000776  C101  F046         	movff	printData@data+1,___fttol@f1+1
  1826  00077A  C102  F047         	movff	printData@data+2,___fttol@f1+2
  1827  00077E  EC28  F005         	call	___fttol	;wreg free
  1828  000782  C045  F103         	movff	?___fttol,??_printData
  1829  000786  C046  F104         	movff	?___fttol+1,??_printData+1
  1830  00078A  C047  F105         	movff	?___fttol+2,??_printData+2
  1831  00078E  C048  F106         	movff	?___fttol+3,??_printData+3
  1832  000792  C058  F013         	movff	printData@sender,___wmul@multiplier
  1833  000796  C059  F014         	movff	printData@sender+1,___wmul@multiplier+1
  1834  00079A  0E00               	movlw	0
  1835  00079C  6E16               	movwf	___wmul@multiplicand+1,c
  1836  00079E  0E0A               	movlw	10
  1837  0007A0  6E15               	movwf	___wmul@multiplicand,c
  1838  0007A2  ECCE  F008         	call	___wmul	;wreg free
  1839  0007A6  1E13               	comf	?___wmul,f,c
  1840  0007A8  1E14               	comf	?___wmul+1,f,c
  1841  0007AA  4A13               	infsnz	?___wmul,f,c
  1842  0007AC  2A14               	incf	?___wmul+1,f,c
  1843  0007AE  5013               	movf	?___wmul,w,c
  1844  0007B0  0101               	movlb	1	; () banked
  1845  0007B2  2703               	addwf	??_printData& (0+255),f,b
  1846  0007B4  5014               	movf	?___wmul+1,w,c
  1847  0007B6  2304               	addwfc	(??_printData+1)& (0+255),f,b
  1848  0007B8  0E9C               	movlw	156
  1849  0007BA  2503               	addwf	??_printData& (0+255),w,b
  1850  0007BC  6E58               	movwf	printData@sender,c
  1851  0007BE  0EFF               	movlw	255
  1852  0007C0  2104               	addwfc	(??_printData+1)& (0+255),w,b
  1853  0007C2  6E59               	movwf	printData@sender+1,c
  1854                           
  1855                           ; BSR set to: 1
  1856                           ;test.c: 262: TXREG = (int)sender + 0x30;
  1857  0007C4  5058               	movf	printData@sender,w,c
  1858  0007C6  0F30               	addlw	48
  1859  0007C8  6EAD               	movwf	4013,c	;volatile
  1860                           
  1861                           ;test.c: 263: }
  1862  0007CA  0012               	return	
  1863  0007CC                     l186:
  1864                           
  1865                           ;test.c: 264: else if(data<100 && data>0)
  1866                           
  1867                           ; BSR set to: 1
  1868  0007CC  C100  F013         	movff	printData@data,___ftge@ff1
  1869  0007D0  C101  F014         	movff	printData@data+1,___ftge@ff1+1
  1870  0007D4  C102  F015         	movff	printData@data+2,___ftge@ff1+2
  1871  0007D8  0E00               	movlw	0
  1872  0007DA  6E16               	movwf	___ftge@ff2,c
  1873  0007DC  0EC8               	movlw	200
  1874  0007DE  6E17               	movwf	___ftge@ff2+1,c
  1875  0007E0  0E42               	movlw	66
  1876  0007E2  6E18               	movwf	___ftge@ff2+2,c
  1877  0007E4  EC30  F007         	call	___ftge	;wreg free
  1878  0007E8  B0D8               	btfsc	status,0,c
  1879  0007EA  0012               	return	
  1880  0007EC  0E00               	movlw	0
  1881  0007EE  6E13               	movwf	___ftge@ff1,c
  1882  0007F0  0E00               	movlw	0
  1883  0007F2  6E14               	movwf	___ftge@ff1+1,c
  1884  0007F4  0E00               	movlw	0
  1885  0007F6  6E15               	movwf	___ftge@ff1+2,c
  1886  0007F8  C100  F016         	movff	printData@data,___ftge@ff2
  1887  0007FC  C101  F017         	movff	printData@data+1,___ftge@ff2+1
  1888  000800  C102  F018         	movff	printData@data+2,___ftge@ff2+2
  1889  000804  EC30  F007         	call	___ftge	;wreg free
  1890  000808  B0D8               	btfsc	status,0,c
  1891  00080A  0012               	return	
  1892                           
  1893                           ;test.c: 265: {
  1894                           ;test.c: 266: sender = ((int)data/10);
  1895  00080C  C100  F045         	movff	printData@data,___fttol@f1
  1896  000810  C101  F046         	movff	printData@data+1,___fttol@f1+1
  1897  000814  C102  F047         	movff	printData@data+2,___fttol@f1+2
  1898  000818  EC28  F005         	call	___fttol	;wreg free
  1899  00081C  C045  F054         	movff	?___fttol,___awdiv@dividend
  1900  000820  C046  F055         	movff	?___fttol+1,___awdiv@dividend+1
  1901  000824  0E00               	movlw	0
  1902  000826  6E57               	movwf	___awdiv@divisor+1,c
  1903  000828  0E0A               	movlw	10
  1904  00082A  6E56               	movwf	___awdiv@divisor,c
  1905  00082C  EC78  F007         	call	___awdiv	;wreg free
  1906  000830  C054  F058         	movff	?___awdiv,printData@sender
  1907  000834  C055  F059         	movff	?___awdiv+1,printData@sender+1
  1908  000838  EC1B  F009         	call	_UART_TX_Busy	;wreg free
  1909  00083C  0900               	iorlw	0
  1910  00083E  A4D8               	btfss	status,2,c
  1911  000840  D7FB               	goto	l196
  1912                           
  1913                           ;test.c: 268: TXREG =(int)sender + 0x30;
  1914  000842  5058               	movf	printData@sender,w,c
  1915  000844  0F30               	addlw	48
  1916  000846  6EAD               	movwf	4013,c	;volatile
  1917                           
  1918                           ;test.c: 269: sender = (int)data-(sender*10);
  1919  000848  C100  F045         	movff	printData@data,___fttol@f1
  1920  00084C  C101  F046         	movff	printData@data+1,___fttol@f1+1
  1921  000850  C102  F047         	movff	printData@data+2,___fttol@f1+2
  1922  000854  EC28  F005         	call	___fttol	;wreg free
  1923  000858  C045  F103         	movff	?___fttol,??_printData
  1924  00085C  C046  F104         	movff	?___fttol+1,??_printData+1
  1925  000860  C047  F105         	movff	?___fttol+2,??_printData+2
  1926  000864  C048  F106         	movff	?___fttol+3,??_printData+3
  1927  000868  C058  F013         	movff	printData@sender,___wmul@multiplier
  1928  00086C  C059  F014         	movff	printData@sender+1,___wmul@multiplier+1
  1929  000870  0E00               	movlw	0
  1930  000872  6E16               	movwf	___wmul@multiplicand+1,c
  1931  000874  0E0A               	movlw	10
  1932  000876  6E15               	movwf	___wmul@multiplicand,c
  1933  000878  ECCE  F008         	call	___wmul	;wreg free
  1934  00087C  1E13               	comf	?___wmul,f,c
  1935  00087E  1E14               	comf	?___wmul+1,f,c
  1936  000880  4A13               	infsnz	?___wmul,f,c
  1937  000882  2A14               	incf	?___wmul+1,f,c
  1938  000884  5013               	movf	?___wmul,w,c
  1939  000886  0101               	movlb	1	; () banked
  1940  000888  2503               	addwf	??_printData& (0+255),w,b
  1941  00088A  6E58               	movwf	printData@sender,c
  1942  00088C  5014               	movf	?___wmul+1,w,c
  1943  00088E  2104               	addwfc	(??_printData+1)& (0+255),w,b
  1944  000890  6E59               	movwf	printData@sender+1,c
  1945  000892                     
  1946                           ; BSR set to: 1
  1947                           
  1948                           ; BSR set to: 1
  1949  000892  EC1B  F009         	call	_UART_TX_Busy	;wreg free
  1950  000896  0900               	iorlw	0
  1951  000898  A4D8               	btfss	status,2,c
  1952  00089A  D7FB               	goto	l199
  1953                           
  1954                           ;test.c: 271: TXREG = (int)sender + 0x30;
  1955  00089C  5058               	movf	printData@sender,w,c
  1956  00089E  0F30               	addlw	48
  1957  0008A0  6EAD               	movwf	4013,c	;volatile
  1958  0008A2  0012               	return	
  1959  0008A4                     __end_of_printData:
  1960                           	opt stack 0
  1961                           tblptru	equ	0xFF8
  1962                           tblptrh	equ	0xFF7
  1963                           tblptrl	equ	0xFF6
  1964                           tablat	equ	0xFF5
  1965                           intcon	equ	0xFF2
  1966                           postinc0	equ	0xFEE
  1967                           wreg	equ	0xFE8
  1968                           postdec1	equ	0xFE5
  1969                           fsr1l	equ	0xFE1
  1970                           status	equ	0xFD8
  1971                           
  1972 ;; *************** function ___wmul *****************
  1973 ;; Defined at:
  1974 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;  multiplier      2   18[COMRAM] unsigned int 
  1977 ;;  multiplicand    2   20[COMRAM] unsigned int 
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;  product         2   22[COMRAM] unsigned int 
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  2   18[COMRAM] unsigned int 
  1982 ;; Registers used:
  1983 ;;		wreg, status,2, status,0, prodl, prodh
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMRAM   BANK0   BANK1
  1989 ;;      Params:         4       0       0
  1990 ;;      Locals:         2       0       0
  1991 ;;      Temps:          0       0       0
  1992 ;;      Totals:         6       0       0
  1993 ;;Total ram usage:        6 bytes
  1994 ;; Hardware stack levels used:    1
  1995 ;; Hardware stack levels required when called:    1
  1996 ;; This function calls:
  1997 ;;		Nothing
  1998 ;; This function is called by:
  1999 ;;		_printData
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           	psect	text4
  2004  00119C                     __ptext4:
  2005                           	opt stack 0
  2006  00119C                     ___wmul:
  2007                           	opt stack 28
  2008                           
  2009                           ;incstack = 0
  2010  00119C  5013               	movf	___wmul@multiplier,w,c
  2011  00119E  0215               	mulwf	___wmul@multiplicand,c
  2012  0011A0  CFF3 F017          	movff	prodl,___wmul@product
  2013  0011A4  CFF4 F018          	movff	prodh,___wmul@product+1
  2014  0011A8  5013               	movf	___wmul@multiplier,w,c
  2015  0011AA  0216               	mulwf	___wmul@multiplicand+1,c
  2016  0011AC  50F3               	movf	prodl,w,c
  2017  0011AE  2618               	addwf	___wmul@product+1,f,c
  2018  0011B0  5014               	movf	___wmul@multiplier+1,w,c
  2019  0011B2  0215               	mulwf	___wmul@multiplicand,c
  2020  0011B4  50F3               	movf	prodl,w,c
  2021  0011B6  2618               	addwf	___wmul@product+1,f,c
  2022  0011B8  C017  F013         	movff	___wmul@product,?___wmul
  2023  0011BC  C018  F014         	movff	___wmul@product+1,?___wmul+1
  2024  0011C0  0012               	return	
  2025  0011C2                     __end_of___wmul:
  2026                           	opt stack 0
  2027                           tblptru	equ	0xFF8
  2028                           tblptrh	equ	0xFF7
  2029                           tblptrl	equ	0xFF6
  2030                           tablat	equ	0xFF5
  2031                           prodh	equ	0xFF4
  2032                           prodl	equ	0xFF3
  2033                           intcon	equ	0xFF2
  2034                           postinc0	equ	0xFEE
  2035                           wreg	equ	0xFE8
  2036                           postdec1	equ	0xFE5
  2037                           fsr1l	equ	0xFE1
  2038                           status	equ	0xFD8
  2039                           
  2040 ;; *************** function ___fttol *****************
  2041 ;; Defined at:
  2042 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;  f1              3   68[COMRAM] float 
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;  lval            4   78[COMRAM] unsigned long 
  2047 ;;  exp1            1   82[COMRAM] unsigned char 
  2048 ;;  sign1           1   77[COMRAM] unsigned char 
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  4   68[COMRAM] long 
  2051 ;; Registers used:
  2052 ;;		wreg, status,2, status,0
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMRAM   BANK0   BANK1
  2058 ;;      Params:         4       0       0
  2059 ;;      Locals:         6       0       0
  2060 ;;      Temps:          5       0       0
  2061 ;;      Totals:        15       0       0
  2062 ;;Total ram usage:       15 bytes
  2063 ;; Hardware stack levels used:    1
  2064 ;; Hardware stack levels required when called:    1
  2065 ;; This function calls:
  2066 ;;		Nothing
  2067 ;; This function is called by:
  2068 ;;		_main
  2069 ;;		_printData
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           	psect	text5
  2074  000A50                     __ptext5:
  2075                           	opt stack 0
  2076  000A50                     ___fttol:
  2077                           	opt stack 28
  2078                           
  2079                           ;incstack = 0
  2080  000A50  C047  F049         	movff	___fttol@f1+2,??___fttol
  2081  000A54  6A4A               	clrf	(??___fttol+1)& (0+255),c
  2082  000A56  6A4B               	clrf	(??___fttol+2)& (0+255),c
  2083  000A58  3446               	rlcf	___fttol@f1+1,w,c
  2084  000A5A  3649               	rlcf	??___fttol& (0+255),f,c
  2085  000A5C  E301               	bnc	u2241
  2086  000A5E  804A               	bsf	(??___fttol+1)& (0+255),0,c
  2087  000A60                     u2241:
  2088  000A60  5049               	movf	??___fttol,w,c
  2089  000A62  6E53               	movwf	___fttol@exp1,c
  2090  000A64  5053               	movf	___fttol@exp1,w,c
  2091  000A66  A4D8               	btfss	status,2,c
  2092  000A68  D009               	goto	l571
  2093  000A6A  0E00               	movlw	0
  2094  000A6C  6E45               	movwf	?___fttol,c
  2095  000A6E  0E00               	movlw	0
  2096  000A70  6E46               	movwf	?___fttol+1,c
  2097  000A72  0E00               	movlw	0
  2098  000A74  6E47               	movwf	?___fttol+2,c
  2099  000A76  0E00               	movlw	0
  2100  000A78  6E48               	movwf	?___fttol+3,c
  2101  000A7A  0012               	return	
  2102  000A7C                     l571:
  2103  000A7C  0E17               	movlw	23
  2104  000A7E  6E49               	movwf	??___fttol& (0+255),c
  2105  000A80  C045  F04A         	movff	___fttol@f1,??___fttol+1
  2106  000A84  C046  F04B         	movff	___fttol@f1+1,??___fttol+2
  2107  000A88  C047  F04C         	movff	___fttol@f1+2,??___fttol+3
  2108  000A8C  2849               	incf	??___fttol,w,c
  2109  000A8E  6E4D               	movwf	(??___fttol+4)& (0+255),c
  2110  000A90  D004               	goto	u2260
  2111  000A92                     u2265:
  2112  000A92  90D8               	bcf	status,0,c
  2113  000A94  324C               	rrcf	??___fttol+3,f,c
  2114  000A96  324B               	rrcf	??___fttol+2,f,c
  2115  000A98  324A               	rrcf	??___fttol+1,f,c
  2116  000A9A                     u2260:
  2117  000A9A  2E4D               	decfsz	(??___fttol+4)& (0+255),f,c
  2118  000A9C  D7FA               	goto	u2265
  2119  000A9E  504A               	movf	??___fttol+1,w,c
  2120  000AA0  6E4E               	movwf	___fttol@sign1,c
  2121  000AA2  8E46               	bsf	___fttol@f1+1,7,c
  2122  000AA4  0EFF               	movlw	255
  2123  000AA6  1645               	andwf	___fttol@f1,f,c
  2124  000AA8  0EFF               	movlw	255
  2125  000AAA  1646               	andwf	___fttol@f1+1,f,c
  2126  000AAC  0E00               	movlw	0
  2127  000AAE  1647               	andwf	___fttol@f1+2,f,c
  2128  000AB0  5045               	movf	___fttol@f1,w,c
  2129  000AB2  6E4F               	movwf	___fttol@lval,c
  2130  000AB4  5046               	movf	___fttol@f1+1,w,c
  2131  000AB6  6E50               	movwf	___fttol@lval+1,c
  2132  000AB8  5047               	movf	___fttol@f1+2,w,c
  2133  000ABA  6E51               	movwf	___fttol@lval+2,c
  2134  000ABC  6A52               	clrf	___fttol@lval+3,c
  2135  000ABE  0E8E               	movlw	142
  2136  000AC0  5E53               	subwf	___fttol@exp1,f,c
  2137  000AC2  AE53               	btfss	___fttol@exp1,7,c
  2138  000AC4  D016               	goto	l573
  2139  000AC6  5053               	movf	___fttol@exp1,w,c
  2140  000AC8  0A80               	xorlw	128
  2141  000ACA  0F8F               	addlw	143
  2142  000ACC  B0D8               	btfsc	status,0,c
  2143  000ACE  D009               	goto	l574
  2144  000AD0  0E00               	movlw	0
  2145  000AD2  6E45               	movwf	?___fttol,c
  2146  000AD4  0E00               	movlw	0
  2147  000AD6  6E46               	movwf	?___fttol+1,c
  2148  000AD8  0E00               	movlw	0
  2149  000ADA  6E47               	movwf	?___fttol+2,c
  2150  000ADC  0E00               	movlw	0
  2151  000ADE  6E48               	movwf	?___fttol+3,c
  2152  000AE0  0012               	return	
  2153  000AE2                     l574:
  2154  000AE2  90D8               	bcf	status,0,c
  2155  000AE4  3252               	rrcf	___fttol@lval+3,f,c
  2156  000AE6  3251               	rrcf	___fttol@lval+2,f,c
  2157  000AE8  3250               	rrcf	___fttol@lval+1,f,c
  2158  000AEA  324F               	rrcf	___fttol@lval,f,c
  2159  000AEC  3E53               	incfsz	___fttol@exp1,f,c
  2160  000AEE  D7F9               	goto	l574
  2161  000AF0  D015               	goto	u2300
  2162  000AF2                     l573:
  2163  000AF2  0E17               	movlw	23
  2164  000AF4  6453               	cpfsgt	___fttol@exp1,c
  2165  000AF6  D00F               	goto	l579
  2166  000AF8  0E00               	movlw	0
  2167  000AFA  6E45               	movwf	?___fttol,c
  2168  000AFC  0E00               	movlw	0
  2169  000AFE  6E46               	movwf	?___fttol+1,c
  2170  000B00  0E00               	movlw	0
  2171  000B02  6E47               	movwf	?___fttol+2,c
  2172  000B04  0E00               	movlw	0
  2173  000B06  6E48               	movwf	?___fttol+3,c
  2174  000B08  0012               	return	
  2175  000B0A  90D8               	bcf	status,0,c
  2176  000B0C  364F               	rlcf	___fttol@lval,f,c
  2177  000B0E  3650               	rlcf	___fttol@lval+1,f,c
  2178  000B10  3651               	rlcf	___fttol@lval+2,f,c
  2179  000B12  3652               	rlcf	___fttol@lval+3,f,c
  2180  000B14  0653               	decf	___fttol@exp1,f,c
  2181  000B16                     l579:
  2182  000B16  5053               	movf	___fttol@exp1,w,c
  2183  000B18  A4D8               	btfss	status,2,c
  2184  000B1A  D7F7               	goto	l580
  2185  000B1C                     u2300:
  2186  000B1C  504E               	movf	___fttol@sign1,w,c
  2187  000B1E  B4D8               	btfsc	status,2,c
  2188  000B20  D008               	goto	l582
  2189  000B22  1E52               	comf	___fttol@lval+3,f,c
  2190  000B24  1E51               	comf	___fttol@lval+2,f,c
  2191  000B26  1E50               	comf	___fttol@lval+1,f,c
  2192  000B28  6C4F               	negf	___fttol@lval,c
  2193  000B2A  0E00               	movlw	0
  2194  000B2C  2250               	addwfc	___fttol@lval+1,f,c
  2195  000B2E  2251               	addwfc	___fttol@lval+2,f,c
  2196  000B30  2252               	addwfc	___fttol@lval+3,f,c
  2197  000B32                     l582:
  2198  000B32  C04F  F045         	movff	___fttol@lval,?___fttol
  2199  000B36  C050  F046         	movff	___fttol@lval+1,?___fttol+1
  2200  000B3A  C051  F047         	movff	___fttol@lval+2,?___fttol+2
  2201  000B3E  C052  F048         	movff	___fttol@lval+3,?___fttol+3
  2202  000B42  0012               	return	
  2203  000B44                     __end_of___fttol:
  2204                           	opt stack 0
  2205                           tblptru	equ	0xFF8
  2206                           tblptrh	equ	0xFF7
  2207                           tblptrl	equ	0xFF6
  2208                           tablat	equ	0xFF5
  2209                           prodh	equ	0xFF4
  2210                           prodl	equ	0xFF3
  2211                           intcon	equ	0xFF2
  2212                           postinc0	equ	0xFEE
  2213                           wreg	equ	0xFE8
  2214                           postdec1	equ	0xFE5
  2215                           fsr1l	equ	0xFE1
  2216                           status	equ	0xFD8
  2217                           
  2218 ;; *************** function ___ftge *****************
  2219 ;; Defined at:
  2220 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;  ff1             3   18[COMRAM] float 
  2223 ;;  ff2             3   21[COMRAM] float 
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;		None
  2226 ;; Return value:  Size  Location     Type
  2227 ;;		None               void
  2228 ;; Registers used:
  2229 ;;		wreg, status,2, status,0
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMRAM   BANK0   BANK1
  2235 ;;      Params:         6       0       0
  2236 ;;      Locals:         0       0       0
  2237 ;;      Temps:          3       0       0
  2238 ;;      Totals:         9       0       0
  2239 ;;Total ram usage:        9 bytes
  2240 ;; Hardware stack levels used:    1
  2241 ;; Hardware stack levels required when called:    1
  2242 ;; This function calls:
  2243 ;;		Nothing
  2244 ;; This function is called by:
  2245 ;;		_printData
  2246 ;; This function uses a non-reentrant model
  2247 ;;
  2248                           
  2249                           	psect	text6
  2250  000E60                     __ptext6:
  2251                           	opt stack 0
  2252  000E60                     ___ftge:
  2253                           	opt stack 28
  2254                           
  2255                           ;incstack = 0
  2256  000E60  AE15               	btfss	___ftge@ff1+2,7,c
  2257  000E62  D016               	goto	l543
  2258  000E64  C013  F019         	movff	___ftge@ff1,??___ftge
  2259  000E68  C014  F01A         	movff	___ftge@ff1+1,??___ftge+1
  2260  000E6C  C015  F01B         	movff	___ftge@ff1+2,??___ftge+2
  2261  000E70  1E19               	comf	??___ftge,f,c
  2262  000E72  1E1A               	comf	??___ftge+1,f,c
  2263  000E74  1E1B               	comf	??___ftge+2,f,c
  2264  000E76  2A19               	incf	??___ftge,f,c
  2265  000E78  0E00               	movlw	0
  2266  000E7A  221A               	addwfc	??___ftge+1,f,c
  2267  000E7C  221B               	addwfc	??___ftge+2,f,c
  2268  000E7E  0E00               	movlw	0
  2269  000E80  2419               	addwf	??___ftge,w,c
  2270  000E82  6E13               	movwf	___ftge@ff1,c
  2271  000E84  0E00               	movlw	0
  2272  000E86  201A               	addwfc	??___ftge+1,w,c
  2273  000E88  6E14               	movwf	___ftge@ff1+1,c
  2274  000E8A  0E80               	movlw	128
  2275  000E8C  201B               	addwfc	??___ftge+2,w,c
  2276  000E8E  6E15               	movwf	___ftge@ff1+2,c
  2277  000E90                     l543:
  2278  000E90  AE18               	btfss	___ftge@ff2+2,7,c
  2279  000E92  D016               	goto	l544
  2280  000E94  C016  F019         	movff	___ftge@ff2,??___ftge
  2281  000E98  C017  F01A         	movff	___ftge@ff2+1,??___ftge+1
  2282  000E9C  C018  F01B         	movff	___ftge@ff2+2,??___ftge+2
  2283  000EA0  1E19               	comf	??___ftge,f,c
  2284  000EA2  1E1A               	comf	??___ftge+1,f,c
  2285  000EA4  1E1B               	comf	??___ftge+2,f,c
  2286  000EA6  2A19               	incf	??___ftge,f,c
  2287  000EA8  0E00               	movlw	0
  2288  000EAA  221A               	addwfc	??___ftge+1,f,c
  2289  000EAC  221B               	addwfc	??___ftge+2,f,c
  2290  000EAE  0E00               	movlw	0
  2291  000EB0  2419               	addwf	??___ftge,w,c
  2292  000EB2  6E16               	movwf	___ftge@ff2,c
  2293  000EB4  0E00               	movlw	0
  2294  000EB6  201A               	addwfc	??___ftge+1,w,c
  2295  000EB8  6E17               	movwf	___ftge@ff2+1,c
  2296  000EBA  0E80               	movlw	128
  2297  000EBC  201B               	addwfc	??___ftge+2,w,c
  2298  000EBE  6E18               	movwf	___ftge@ff2+2,c
  2299  000EC0                     l544:
  2300  000EC0  0E00               	movlw	0
  2301  000EC2  1A13               	xorwf	___ftge@ff1,f,c
  2302  000EC4  0E00               	movlw	0
  2303  000EC6  1A14               	xorwf	___ftge@ff1+1,f,c
  2304  000EC8  0E80               	movlw	128
  2305  000ECA  1A15               	xorwf	___ftge@ff1+2,f,c
  2306  000ECC  0E00               	movlw	0
  2307  000ECE  1A16               	xorwf	___ftge@ff2,f,c
  2308  000ED0  0E00               	movlw	0
  2309  000ED2  1A17               	xorwf	___ftge@ff2+1,f,c
  2310  000ED4  0E80               	movlw	128
  2311  000ED6  1A18               	xorwf	___ftge@ff2+2,f,c
  2312  000ED8  5016               	movf	___ftge@ff2,w,c
  2313  000EDA  5C13               	subwf	___ftge@ff1,w,c
  2314  000EDC  5017               	movf	___ftge@ff2+1,w,c
  2315  000EDE  5814               	subwfb	___ftge@ff1+1,w,c
  2316  000EE0  5018               	movf	___ftge@ff2+2,w,c
  2317  000EE2  5815               	subwfb	___ftge@ff1+2,w,c
  2318  000EE4  B0D8               	btfsc	status,0,c
  2319  000EE6  D002               	goto	l2144
  2320  000EE8  90D8               	bcf	status,0,c
  2321  000EEA  0012               	return	
  2322  000EEC                     l2144:
  2323  000EEC  80D8               	bsf	status,0,c
  2324  000EEE  0012               	return	
  2325  000EF0                     __end_of___ftge:
  2326                           	opt stack 0
  2327                           tblptru	equ	0xFF8
  2328                           tblptrh	equ	0xFF7
  2329                           tblptrl	equ	0xFF6
  2330                           tablat	equ	0xFF5
  2331                           prodh	equ	0xFF4
  2332                           prodl	equ	0xFF3
  2333                           intcon	equ	0xFF2
  2334                           postinc0	equ	0xFEE
  2335                           wreg	equ	0xFE8
  2336                           postdec1	equ	0xFE5
  2337                           fsr1l	equ	0xFE1
  2338                           status	equ	0xFD8
  2339                           
  2340 ;; *************** function ___awdiv *****************
  2341 ;; Defined at:
  2342 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;  dividend        2   83[COMRAM] int 
  2345 ;;  divisor         2   85[COMRAM] int 
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;  quotient        2    2[BANK0 ] int 
  2348 ;;  sign            1    1[BANK0 ] unsigned char 
  2349 ;;  counter         1    0[BANK0 ] unsigned char 
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  2   83[COMRAM] int 
  2352 ;; Registers used:
  2353 ;;		wreg, status,2, status,0
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMRAM   BANK0   BANK1
  2359 ;;      Params:         4       0       0
  2360 ;;      Locals:         0       4       0
  2361 ;;      Temps:          0       0       0
  2362 ;;      Totals:         4       4       0
  2363 ;;Total ram usage:        8 bytes
  2364 ;; Hardware stack levels used:    1
  2365 ;; Hardware stack levels required when called:    1
  2366 ;; This function calls:
  2367 ;;		Nothing
  2368 ;; This function is called by:
  2369 ;;		_printData
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           	psect	text7
  2374  000EF0                     __ptext7:
  2375                           	opt stack 0
  2376  000EF0                     ___awdiv:
  2377                           	opt stack 28
  2378                           
  2379                           ;incstack = 0
  2380  000EF0  0E00               	movlw	0
  2381  000EF2  0100               	movlb	0	; () banked
  2382  000EF4  6FFB               	movwf	___awdiv@sign& (0+255),b
  2383                           
  2384                           ; BSR set to: 0
  2385  000EF6  AE57               	btfss	___awdiv@divisor+1,7,c
  2386  000EF8  D006               	goto	l424
  2387                           
  2388                           ; BSR set to: 0
  2389  000EFA  6C56               	negf	___awdiv@divisor,c
  2390  000EFC  1E57               	comf	___awdiv@divisor+1,f,c
  2391  000EFE  B0D8               	btfsc	status,0,c
  2392  000F00  2A57               	incf	___awdiv@divisor+1,f,c
  2393                           
  2394                           ; BSR set to: 0
  2395  000F02  0E01               	movlw	1
  2396  000F04  6FFB               	movwf	___awdiv@sign& (0+255),b
  2397  000F06                     l424:
  2398                           
  2399                           ; BSR set to: 0
  2400                           
  2401                           ; BSR set to: 0
  2402  000F06  AE55               	btfss	___awdiv@dividend+1,7,c
  2403  000F08  D006               	goto	l425
  2404                           
  2405                           ; BSR set to: 0
  2406  000F0A  6C54               	negf	___awdiv@dividend,c
  2407  000F0C  1E55               	comf	___awdiv@dividend+1,f,c
  2408  000F0E  B0D8               	btfsc	status,0,c
  2409  000F10  2A55               	incf	___awdiv@dividend+1,f,c
  2410                           
  2411                           ; BSR set to: 0
  2412  000F12  0E01               	movlw	1
  2413  000F14  1BFB               	xorwf	___awdiv@sign& (0+255),f,b
  2414  000F16                     l425:
  2415                           
  2416                           ; BSR set to: 0
  2417                           
  2418                           ; BSR set to: 0
  2419  000F16  0E00               	movlw	0
  2420  000F18  6FFD               	movwf	(___awdiv@quotient+1)& (0+255),b
  2421  000F1A  0E00               	movlw	0
  2422  000F1C  6FFC               	movwf	___awdiv@quotient& (0+255),b
  2423                           
  2424                           ; BSR set to: 0
  2425  000F1E  5056               	movf	___awdiv@divisor,w,c
  2426  000F20  1057               	iorwf	___awdiv@divisor+1,w,c
  2427  000F22  B4D8               	btfsc	status,2,c
  2428  000F24  D01C               	goto	l432
  2429                           
  2430                           ; BSR set to: 0
  2431  000F26  0E01               	movlw	1
  2432  000F28  6FFA               	movwf	___awdiv@counter& (0+255),b
  2433  000F2A  D004               	goto	l427
  2434  000F2C                     
  2435                           ; BSR set to: 0
  2436                           
  2437                           ; BSR set to: 0
  2438  000F2C  90D8               	bcf	status,0,c
  2439  000F2E  3656               	rlcf	___awdiv@divisor,f,c
  2440  000F30  3657               	rlcf	___awdiv@divisor+1,f,c
  2441  000F32  2BFA               	incf	___awdiv@counter& (0+255),f,b
  2442  000F34                     l427:
  2443                           
  2444                           ; BSR set to: 0
  2445                           
  2446                           ; BSR set to: 0
  2447  000F34  AE57               	btfss	___awdiv@divisor+1,7,c
  2448  000F36  D7FA               	goto	l428
  2449  000F38                     u2180:
  2450                           
  2451                           ; BSR set to: 0
  2452                           
  2453                           ; BSR set to: 0
  2454                           
  2455                           ; BSR set to: 0
  2456  000F38  90D8               	bcf	status,0,c
  2457  000F3A  37FC               	rlcf	___awdiv@quotient& (0+255),f,b
  2458  000F3C  37FD               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  2459                           
  2460                           ; BSR set to: 0
  2461  000F3E  5056               	movf	___awdiv@divisor,w,c
  2462  000F40  5C54               	subwf	___awdiv@dividend,w,c
  2463  000F42  5057               	movf	___awdiv@divisor+1,w,c
  2464  000F44  5855               	subwfb	___awdiv@dividend+1,w,c
  2465  000F46  A0D8               	btfss	status,0,c
  2466  000F48  D005               	goto	l431
  2467                           
  2468                           ; BSR set to: 0
  2469  000F4A  5056               	movf	___awdiv@divisor,w,c
  2470  000F4C  5E54               	subwf	___awdiv@dividend,f,c
  2471  000F4E  5057               	movf	___awdiv@divisor+1,w,c
  2472  000F50  5A55               	subwfb	___awdiv@dividend+1,f,c
  2473                           
  2474                           ; BSR set to: 0
  2475  000F52  81FC               	bsf	___awdiv@quotient& (0+255),0,b
  2476  000F54                     l431:
  2477                           
  2478                           ; BSR set to: 0
  2479                           
  2480                           ; BSR set to: 0
  2481  000F54  90D8               	bcf	status,0,c
  2482  000F56  3257               	rrcf	___awdiv@divisor+1,f,c
  2483  000F58  3256               	rrcf	___awdiv@divisor,f,c
  2484                           
  2485                           ; BSR set to: 0
  2486  000F5A  2FFA               	decfsz	___awdiv@counter& (0+255),f,b
  2487  000F5C  D7ED               	goto	u2180
  2488  000F5E                     l432:
  2489                           
  2490                           ; BSR set to: 0
  2491                           
  2492                           ; BSR set to: 0
  2493                           
  2494                           ; BSR set to: 0
  2495  000F5E  51FB               	movf	___awdiv@sign& (0+255),w,b
  2496  000F60  B4D8               	btfsc	status,2,c
  2497  000F62  D004               	goto	l433
  2498                           
  2499                           ; BSR set to: 0
  2500  000F64  6DFC               	negf	___awdiv@quotient& (0+255),b
  2501  000F66  1FFD               	comf	(___awdiv@quotient+1)& (0+255),f,b
  2502  000F68  B0D8               	btfsc	status,0,c
  2503  000F6A  2BFD               	incf	(___awdiv@quotient+1)& (0+255),f,b
  2504  000F6C                     l433:
  2505                           
  2506                           ; BSR set to: 0
  2507                           
  2508                           ; BSR set to: 0
  2509  000F6C  C0FC  F054         	movff	___awdiv@quotient,?___awdiv
  2510  000F70  C0FD  F055         	movff	___awdiv@quotient+1,?___awdiv+1
  2511  000F74  0012               	return	
  2512  000F76                     __end_of___awdiv:
  2513                           	opt stack 0
  2514                           tblptru	equ	0xFF8
  2515                           tblptrh	equ	0xFF7
  2516                           tblptrl	equ	0xFF6
  2517                           tablat	equ	0xFF5
  2518                           prodh	equ	0xFF4
  2519                           prodl	equ	0xFF3
  2520                           intcon	equ	0xFF2
  2521                           postinc0	equ	0xFEE
  2522                           wreg	equ	0xFE8
  2523                           postdec1	equ	0xFE5
  2524                           fsr1l	equ	0xFE1
  2525                           status	equ	0xFD8
  2526                           
  2527 ;; *************** function _appendUnits *****************
  2528 ;; Defined at:
  2529 ;;		line 233 in file "test.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;		None
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;  data2           5   24[COMRAM] unsigned char [5]
  2534 ;; Return value:  Size  Location     Type
  2535 ;;                  1    wreg      void 
  2536 ;; Registers used:
  2537 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMRAM   BANK0   BANK1
  2543 ;;      Params:         0       0       0
  2544 ;;      Locals:         5       0       0
  2545 ;;      Temps:          0       0       0
  2546 ;;      Totals:         5       0       0
  2547 ;;Total ram usage:        5 bytes
  2548 ;; Hardware stack levels used:    1
  2549 ;; Hardware stack levels required when called:    2
  2550 ;; This function calls:
  2551 ;;		_UART_TX_Busy
  2552 ;;		_strlen
  2553 ;; This function is called by:
  2554 ;;		_main
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           	psect	text8
  2559  001034                     __ptext8:
  2560                           	opt stack 0
  2561  001034                     _appendUnits:
  2562                           	opt stack 28
  2563                           
  2564                           ;test.c: 235: while (UART_TX_Busy());
  2565                           
  2566                           ; BSR set to: 0
  2567                           ;incstack = 0
  2568  001034  EC1B  F009         	call	_UART_TX_Busy	;wreg free
  2569  001038  0900               	iorlw	0
  2570  00103A  A4D8               	btfss	status,2,c
  2571  00103C  D7FB               	goto	_appendUnits
  2572                           
  2573                           ;test.c: 236: unsigned char data2[] = "mmHg";
  2574  00103E  EE20  F080         	lfsr	2,appendUnits@F2916
  2575  001042  EE10  F019         	lfsr	1,appendUnits@data2
  2576  001046  0E04               	movlw	4
  2577  001048                     u2471:
  2578  001048  CFDB FFE3          	movff	plusw2,plusw1
  2579  00104C  06E8               	decf	wreg,f,c
  2580  00104E  E2FC               	bc	u2471
  2581                           
  2582                           ;test.c: 237: for (i = 0; i<strlen(data2);i++)
  2583  001050  0E00               	movlw	0
  2584  001052  6E64               	movwf	_i+1,c
  2585  001054  0E00               	movlw	0
  2586  001056  6E63               	movwf	_i,c
  2587  001058  D00F               	goto	l168
  2588  00105A                     
  2589                           ;test.c: 238: {
  2590                           ;test.c: 239: TXREG = data2[i];
  2591  00105A  0E19               	movlw	low appendUnits@data2
  2592  00105C  2463               	addwf	_i,w,c
  2593  00105E  6ED9               	movwf	fsr2l,c
  2594  001060  0E00               	movlw	high appendUnits@data2
  2595  001062  2064               	addwfc	_i+1,w,c
  2596  001064  6EDA               	movwf	fsr2h,c
  2597  001066  50DF               	movf	indf2,w,c
  2598  001068  6EAD               	movwf	4013,c	;volatile
  2599  00106A  EC1B  F009         	call	_UART_TX_Busy	;wreg free
  2600  00106E  0900               	iorlw	0
  2601  001070  A4D8               	btfss	status,2,c
  2602  001072  D7FB               	goto	l171
  2603  001074  4A63               	infsnz	_i,f,c
  2604  001076  2A64               	incf	_i+1,f,c
  2605  001078                     l168:
  2606  001078  0E19               	movlw	low appendUnits@data2
  2607  00107A  6E13               	movwf	strlen@s,c
  2608  00107C  0E00               	movlw	high appendUnits@data2
  2609  00107E  6E14               	movwf	strlen@s+1,c
  2610  001080  ECA5  F008         	call	_strlen	;wreg free
  2611  001084  5013               	movf	?_strlen,w,c
  2612  001086  5C63               	subwf	_i,w,c
  2613  001088  5014               	movf	?_strlen+1,w,c
  2614  00108A  5864               	subwfb	_i+1,w,c
  2615  00108C  B0D8               	btfsc	status,0,c
  2616  00108E  0012               	return	
  2617  001090  D7E4               	goto	l169
  2618  001092                     __end_of_appendUnits:
  2619                           	opt stack 0
  2620                           tblptru	equ	0xFF8
  2621                           tblptrh	equ	0xFF7
  2622                           tblptrl	equ	0xFF6
  2623                           tablat	equ	0xFF5
  2624                           prodh	equ	0xFF4
  2625                           prodl	equ	0xFF3
  2626                           intcon	equ	0xFF2
  2627                           postinc0	equ	0xFEE
  2628                           wreg	equ	0xFE8
  2629                           postdec1	equ	0xFE5
  2630                           plusw1	equ	0xFE3
  2631                           fsr1l	equ	0xFE1
  2632                           indf2	equ	0xFDF
  2633                           plusw2	equ	0xFDB
  2634                           fsr2h	equ	0xFDA
  2635                           fsr2l	equ	0xFD9
  2636                           status	equ	0xFD8
  2637                           
  2638 ;; *************** function _adcReadChannel *****************
  2639 ;; Defined at:
  2640 ;;		line 275 in file "test.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;  channelNumbe    1    wreg     unsigned char 
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;  channelNumbe    1   21[COMRAM] unsigned char 
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  2   18[COMRAM] int 
  2647 ;; Registers used:
  2648 ;;		wreg, status,2, status,0
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMRAM   BANK0   BANK1
  2654 ;;      Params:         2       0       0
  2655 ;;      Locals:         1       0       0
  2656 ;;      Temps:          1       0       0
  2657 ;;      Totals:         4       0       0
  2658 ;;Total ram usage:        4 bytes
  2659 ;; Hardware stack levels used:    1
  2660 ;; Hardware stack levels required when called:    1
  2661 ;; This function calls:
  2662 ;;		Nothing
  2663 ;; This function is called by:
  2664 ;;		_main
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           	psect	text9
  2669  000DCC                     __ptext9:
  2670                           	opt stack 0
  2671  000DCC                     _adcReadChannel:
  2672                           	opt stack 29
  2673                           
  2674                           ;incstack = 0
  2675                           ;adcReadChannel@channelNumber stored from wreg
  2676  000DCC  6E16               	movwf	adcReadChannel@channelNumber,c
  2677                           
  2678                           ;test.c: 278: ADCON0bits.CHS3 =(channelNumber>>3)&0x01;
  2679  000DCE  C016  F015         	movff	adcReadChannel@channelNumber,??_adcReadChannel
  2680  000DD2  90D8               	bcf	status,0,c
  2681  000DD4  3215               	rrcf	??_adcReadChannel,f,c
  2682  000DD6  90D8               	bcf	status,0,c
  2683  000DD8  3215               	rrcf	??_adcReadChannel,f,c
  2684  000DDA  90D8               	bcf	status,0,c
  2685  000DDC  3215               	rrcf	??_adcReadChannel,f,c
  2686  000DDE  0E01               	movlw	1
  2687  000DE0  1615               	andwf	??_adcReadChannel,f,c
  2688  000DE2  3A15               	swapf	??_adcReadChannel,f,c
  2689  000DE4  4615               	rlncf	??_adcReadChannel,f,c
  2690  000DE6  50C2               	movf	4034,w,c	;volatile
  2691  000DE8  1815               	xorwf	??_adcReadChannel,w,c
  2692  000DEA  0BDF               	andlw	-33
  2693  000DEC  1815               	xorwf	??_adcReadChannel,w,c
  2694  000DEE  6EC2               	movwf	4034,c	;volatile
  2695                           
  2696                           ;test.c: 279: ADCON0bits.CHS2 =(channelNumber>>2)&0x01;
  2697  000DF0  C016  F015         	movff	adcReadChannel@channelNumber,??_adcReadChannel
  2698  000DF4  90D8               	bcf	status,0,c
  2699  000DF6  3215               	rrcf	??_adcReadChannel,f,c
  2700  000DF8  90D8               	bcf	status,0,c
  2701  000DFA  3215               	rrcf	??_adcReadChannel,f,c
  2702  000DFC  0E01               	movlw	1
  2703  000DFE  1615               	andwf	??_adcReadChannel,f,c
  2704  000E00  3A15               	swapf	??_adcReadChannel,f,c
  2705  000E02  50C2               	movf	4034,w,c	;volatile
  2706  000E04  1815               	xorwf	??_adcReadChannel,w,c
  2707  000E06  0BEF               	andlw	-17
  2708  000E08  1815               	xorwf	??_adcReadChannel,w,c
  2709  000E0A  6EC2               	movwf	4034,c	;volatile
  2710                           
  2711                           ;test.c: 280: ADCON0bits.CHS1 = (channelNumber>>1)&0x01;
  2712  000E0C  C016  F015         	movff	adcReadChannel@channelNumber,??_adcReadChannel
  2713  000E10  90D8               	bcf	status,0,c
  2714  000E12  3215               	rrcf	??_adcReadChannel,f,c
  2715  000E14  0E01               	movlw	1
  2716  000E16  1615               	andwf	??_adcReadChannel,f,c
  2717  000E18  4615               	rlncf	??_adcReadChannel,f,c
  2718  000E1A  4615               	rlncf	??_adcReadChannel,f,c
  2719  000E1C  4615               	rlncf	??_adcReadChannel,f,c
  2720  000E1E  50C2               	movf	4034,w,c	;volatile
  2721  000E20  1815               	xorwf	??_adcReadChannel,w,c
  2722  000E22  0BF7               	andlw	-9
  2723  000E24  1815               	xorwf	??_adcReadChannel,w,c
  2724  000E26  6EC2               	movwf	4034,c	;volatile
  2725                           
  2726                           ;test.c: 281: ADCON0bits.CHS0 = channelNumber&0x01;
  2727  000E28  C016  F015         	movff	adcReadChannel@channelNumber,??_adcReadChannel
  2728  000E2C  0E01               	movlw	1
  2729  000E2E  1615               	andwf	??_adcReadChannel,f,c
  2730  000E30  4615               	rlncf	??_adcReadChannel,f,c
  2731  000E32  4615               	rlncf	??_adcReadChannel,f,c
  2732  000E34  50C2               	movf	4034,w,c	;volatile
  2733  000E36  1815               	xorwf	??_adcReadChannel,w,c
  2734  000E38  0BFB               	andlw	-5
  2735  000E3A  1815               	xorwf	??_adcReadChannel,w,c
  2736  000E3C  6EC2               	movwf	4034,c	;volatile
  2737                           
  2738                           ;test.c: 284: ADCON0bits.ADON = 1;
  2739  000E3E  80C2               	bsf	4034,0,c	;volatile
  2740                           
  2741                           ;test.c: 285: ADCON0bits.GO = 1;
  2742  000E40  82C2               	bsf	4034,1,c	;volatile
  2743                           
  2744                           ;test.c: 286: _delay(50000);
  2745  000E42  0E41               	movlw	65
  2746  000E44  6E15               	movwf	??_adcReadChannel& (0+255),c
  2747  000E46  0EEE               	movlw	238
  2748  000E48                     u3037:
  2749  000E48  2EE8               	decfsz	wreg,f,c
  2750  000E4A  D7FE               	bra	u3037
  2751  000E4C  2E15               	decfsz	??_adcReadChannel& (0+255),f,c
  2752  000E4E  D7FC               	bra	u3037
  2753  000E50  D000               	nop2	
  2754  000E52                     
  2755                           ;test.c: 288: ;
  2756  000E52  B2C2               	btfsc	4034,1,c	;volatile
  2757  000E54  D7FE               	goto	l205
  2758                           
  2759                           ;test.c: 289: return ADRES;
  2760  000E56  CFC3 F013          	movff	4035,?_adcReadChannel	;volatile
  2761  000E5A  CFC4 F014          	movff	4036,?_adcReadChannel+1	;volatile
  2762  000E5E  0012               	return		;funcret
  2763  000E60                     __end_of_adcReadChannel:
  2764                           	opt stack 0
  2765                           tblptru	equ	0xFF8
  2766                           tblptrh	equ	0xFF7
  2767                           tblptrl	equ	0xFF6
  2768                           tablat	equ	0xFF5
  2769                           prodh	equ	0xFF4
  2770                           prodl	equ	0xFF3
  2771                           intcon	equ	0xFF2
  2772                           postinc0	equ	0xFEE
  2773                           wreg	equ	0xFE8
  2774                           postdec1	equ	0xFE5
  2775                           plusw1	equ	0xFE3
  2776                           fsr1l	equ	0xFE1
  2777                           indf2	equ	0xFDF
  2778                           plusw2	equ	0xFDB
  2779                           fsr2h	equ	0xFDA
  2780                           fsr2l	equ	0xFD9
  2781                           status	equ	0xFD8
  2782                           
  2783 ;; *************** function _adcConfig *****************
  2784 ;; Defined at:
  2785 ;;		line 292 in file "test.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;		None
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;		None
  2790 ;; Return value:  Size  Location     Type
  2791 ;;                  1    wreg      void 
  2792 ;; Registers used:
  2793 ;;		wreg, status,2
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMRAM   BANK0   BANK1
  2799 ;;      Params:         0       0       0
  2800 ;;      Locals:         0       0       0
  2801 ;;      Temps:          0       0       0
  2802 ;;      Totals:         0       0       0
  2803 ;;Total ram usage:        0 bytes
  2804 ;; Hardware stack levels used:    1
  2805 ;; Hardware stack levels required when called:    1
  2806 ;; This function calls:
  2807 ;;		Nothing
  2808 ;; This function is called by:
  2809 ;;		_main
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813                           	psect	text10
  2814  001202                     __ptext10:
  2815                           	opt stack 0
  2816  001202                     _adcConfig:
  2817                           	opt stack 29
  2818                           
  2819                           ;test.c: 295: TRISAbits.TRISA0 = 1;
  2820                           
  2821                           ;incstack = 0
  2822  001202  8092               	bsf	3986,0,c	;volatile
  2823                           
  2824                           ;test.c: 296: TRISAbits.TRISA1 = 1;
  2825  001204  8292               	bsf	3986,1,c	;volatile
  2826                           
  2827                           ;test.c: 297: TRISAbits.TRISA2 = 1;
  2828  001206  8492               	bsf	3986,2,c	;volatile
  2829                           
  2830                           ;test.c: 298: TRISAbits.TRISA3 = 1;
  2831  001208  8692               	bsf	3986,3,c	;volatile
  2832                           
  2833                           ;test.c: 301: ADCON2bits.ADCS2 = 1;
  2834  00120A  84C0               	bsf	4032,2,c	;volatile
  2835                           
  2836                           ;test.c: 302: ADCON2bits.ADCS1 = 1;
  2837  00120C  82C0               	bsf	4032,1,c	;volatile
  2838                           
  2839                           ;test.c: 303: ADCON2bits.ADCS0 = 1;
  2840  00120E  80C0               	bsf	4032,0,c	;volatile
  2841                           
  2842                           ;test.c: 305: ADCON0 = 0;
  2843  001210  0E00               	movlw	0
  2844  001212  6EC2               	movwf	4034,c	;volatile
  2845                           
  2846                           ;test.c: 308: ADCON1 = 0b00001010;
  2847  001214  0E0A               	movlw	10
  2848  001216  6EC1               	movwf	4033,c	;volatile
  2849                           
  2850                           ;test.c: 309: ADCON2bits.ADFM = 1;
  2851  001218  8EC0               	bsf	4032,7,c	;volatile
  2852  00121A  0012               	return		;funcret
  2853  00121C                     __end_of_adcConfig:
  2854                           	opt stack 0
  2855                           tblptru	equ	0xFF8
  2856                           tblptrh	equ	0xFF7
  2857                           tblptrl	equ	0xFF6
  2858                           tablat	equ	0xFF5
  2859                           prodh	equ	0xFF4
  2860                           prodl	equ	0xFF3
  2861                           intcon	equ	0xFF2
  2862                           postinc0	equ	0xFEE
  2863                           wreg	equ	0xFE8
  2864                           postdec1	equ	0xFE5
  2865                           plusw1	equ	0xFE3
  2866                           fsr1l	equ	0xFE1
  2867                           indf2	equ	0xFDF
  2868                           plusw2	equ	0xFDB
  2869                           fsr2h	equ	0xFDA
  2870                           fsr2l	equ	0xFD9
  2871                           status	equ	0xFD8
  2872                           
  2873 ;; *************** function ___lltoft *****************
  2874 ;; Defined at:
  2875 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;  c               4   26[COMRAM] unsigned long 
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;  exp             1   34[COMRAM] unsigned char 
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  3   26[COMRAM] float 
  2882 ;; Registers used:
  2883 ;;		wreg, status,2, status,0, cstack
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMRAM   BANK0   BANK1
  2889 ;;      Params:         4       0       0
  2890 ;;      Locals:         1       0       0
  2891 ;;      Temps:          4       0       0
  2892 ;;      Totals:         9       0       0
  2893 ;;Total ram usage:        9 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; Hardware stack levels required when called:    2
  2896 ;; This function calls:
  2897 ;;		___ftpack
  2898 ;; This function is called by:
  2899 ;;		_main
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           	psect	text11
  2904  0010EE                     __ptext11:
  2905                           	opt stack 0
  2906  0010EE                     ___lltoft:
  2907                           	opt stack 28
  2908                           
  2909                           ;incstack = 0
  2910  0010EE  0E8E               	movlw	142
  2911  0010F0  6E23               	movwf	___lltoft@exp,c
  2912  0010F2  D006               	goto	l628
  2913  0010F4  90D8               	bcf	status,0,c
  2914  0010F6  321E               	rrcf	___lltoft@c+3,f,c
  2915  0010F8  321D               	rrcf	___lltoft@c+2,f,c
  2916  0010FA  321C               	rrcf	___lltoft@c+1,f,c
  2917  0010FC  321B               	rrcf	___lltoft@c,f,c
  2918  0010FE  2A23               	incf	___lltoft@exp,f,c
  2919  001100                     l628:
  2920  001100  0E00               	movlw	0
  2921  001102  141B               	andwf	___lltoft@c,w,c
  2922  001104  6E1F               	movwf	??___lltoft& (0+255),c
  2923  001106  0E00               	movlw	0
  2924  001108  141C               	andwf	___lltoft@c+1,w,c
  2925  00110A  6E20               	movwf	(??___lltoft+1)& (0+255),c
  2926  00110C  0E00               	movlw	0
  2927  00110E  141D               	andwf	___lltoft@c+2,w,c
  2928  001110  6E21               	movwf	(??___lltoft+2)& (0+255),c
  2929  001112  0EFF               	movlw	255
  2930  001114  141E               	andwf	___lltoft@c+3,w,c
  2931  001116  6E22               	movwf	(??___lltoft+3)& (0+255),c
  2932  001118  501F               	movf	??___lltoft,w,c
  2933  00111A  1020               	iorwf	??___lltoft+1,w,c
  2934  00111C  1021               	iorwf	??___lltoft+2,w,c
  2935  00111E  1022               	iorwf	??___lltoft+3,w,c
  2936  001120  A4D8               	btfss	status,2,c
  2937  001122  D7E8               	goto	l629
  2938  001124  C01B  F013         	movff	___lltoft@c,___ftpack@arg
  2939  001128  C01C  F014         	movff	___lltoft@c+1,___ftpack@arg+1
  2940  00112C  C01D  F015         	movff	___lltoft@c+2,___ftpack@arg+2
  2941  001130  C023  F016         	movff	___lltoft@exp,___ftpack@exp
  2942  001134  0E00               	movlw	0
  2943  001136  6E17               	movwf	___ftpack@sign,c
  2944  001138  EC8F  F006         	call	___ftpack	;wreg free
  2945  00113C  C013  F01B         	movff	?___ftpack,?___lltoft
  2946  001140  C014  F01C         	movff	?___ftpack+1,?___lltoft+1
  2947  001144  C015  F01D         	movff	?___ftpack+2,?___lltoft+2
  2948  001148  0012               	return	
  2949  00114A                     __end_of___lltoft:
  2950                           	opt stack 0
  2951                           tblptru	equ	0xFF8
  2952                           tblptrh	equ	0xFF7
  2953                           tblptrl	equ	0xFF6
  2954                           tablat	equ	0xFF5
  2955                           prodh	equ	0xFF4
  2956                           prodl	equ	0xFF3
  2957                           intcon	equ	0xFF2
  2958                           postinc0	equ	0xFEE
  2959                           wreg	equ	0xFE8
  2960                           postdec1	equ	0xFE5
  2961                           plusw1	equ	0xFE3
  2962                           fsr1l	equ	0xFE1
  2963                           indf2	equ	0xFDF
  2964                           plusw2	equ	0xFDB
  2965                           fsr2h	equ	0xFDA
  2966                           fsr2l	equ	0xFD9
  2967                           status	equ	0xFD8
  2968                           
  2969 ;; *************** function ___ftmul *****************
  2970 ;; Defined at:
  2971 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;  f1              3   38[COMRAM] float 
  2974 ;;  f2              3   41[COMRAM] float 
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;  f3_as_produc    3   48[COMRAM] unsigned um
  2977 ;;  sign            1   52[COMRAM] unsigned char 
  2978 ;;  cntr            1   51[COMRAM] unsigned char 
  2979 ;;  exp             1   47[COMRAM] unsigned char 
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  3   38[COMRAM] float 
  2982 ;; Registers used:
  2983 ;;		wreg, status,2, status,0, cstack
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMRAM   BANK0   BANK1
  2989 ;;      Params:         6       0       0
  2990 ;;      Locals:         6       0       0
  2991 ;;      Temps:          3       0       0
  2992 ;;      Totals:        15       0       0
  2993 ;;Total ram usage:       15 bytes
  2994 ;; Hardware stack levels used:    1
  2995 ;; Hardware stack levels required when called:    2
  2996 ;; This function calls:
  2997 ;;		___ftpack
  2998 ;; This function is called by:
  2999 ;;		_main
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           	psect	text12
  3004  000B44                     __ptext12:
  3005                           	opt stack 0
  3006  000B44                     ___ftmul:
  3007                           	opt stack 28
  3008                           
  3009                           ;incstack = 0
  3010  000B44  C029  F02D         	movff	___ftmul@f1+2,??___ftmul
  3011  000B48  6A2E               	clrf	(??___ftmul+1)& (0+255),c
  3012  000B4A  6A2F               	clrf	(??___ftmul+2)& (0+255),c
  3013  000B4C  3428               	rlcf	___ftmul@f1+1,w,c
  3014  000B4E  362D               	rlcf	??___ftmul& (0+255),f,c
  3015  000B50  E301               	bnc	u2761
  3016  000B52  802E               	bsf	(??___ftmul+1)& (0+255),0,c
  3017  000B54                     u2761:
  3018  000B54  502D               	movf	??___ftmul,w,c
  3019  000B56  6E30               	movwf	___ftmul@exp,c
  3020  000B58  5030               	movf	___ftmul@exp,w,c
  3021  000B5A  A4D8               	btfss	status,2,c
  3022  000B5C  D007               	goto	l550
  3023  000B5E  0E00               	movlw	0
  3024  000B60  6E27               	movwf	?___ftmul,c
  3025  000B62  0E00               	movlw	0
  3026  000B64  6E28               	movwf	?___ftmul+1,c
  3027  000B66  0E00               	movlw	0
  3028  000B68  6E29               	movwf	?___ftmul+2,c
  3029  000B6A  0012               	return	
  3030  000B6C                     l550:
  3031  000B6C  C02C  F02D         	movff	___ftmul@f2+2,??___ftmul
  3032  000B70  6A2E               	clrf	(??___ftmul+1)& (0+255),c
  3033  000B72  6A2F               	clrf	(??___ftmul+2)& (0+255),c
  3034  000B74  342B               	rlcf	___ftmul@f2+1,w,c
  3035  000B76  362D               	rlcf	??___ftmul& (0+255),f,c
  3036  000B78  E301               	bnc	u2781
  3037  000B7A  802E               	bsf	(??___ftmul+1)& (0+255),0,c
  3038  000B7C                     u2781:
  3039  000B7C  502D               	movf	??___ftmul,w,c
  3040  000B7E  6E35               	movwf	___ftmul@sign,c
  3041  000B80  5035               	movf	___ftmul@sign,w,c
  3042  000B82  A4D8               	btfss	status,2,c
  3043  000B84  D007               	goto	l552
  3044  000B86  0E00               	movlw	0
  3045  000B88  6E27               	movwf	?___ftmul,c
  3046  000B8A  0E00               	movlw	0
  3047  000B8C  6E28               	movwf	?___ftmul+1,c
  3048  000B8E  0E00               	movlw	0
  3049  000B90  6E29               	movwf	?___ftmul+2,c
  3050  000B92  0012               	return	
  3051  000B94                     l552:
  3052  000B94  5035               	movf	___ftmul@sign,w,c
  3053  000B96  0F7B               	addlw	123
  3054  000B98  2630               	addwf	___ftmul@exp,f,c
  3055  000B9A  C029  F035         	movff	___ftmul@f1+2,___ftmul@sign
  3056  000B9E  502C               	movf	___ftmul@f2+2,w,c
  3057  000BA0  1A35               	xorwf	___ftmul@sign,f,c
  3058  000BA2  0E80               	movlw	128
  3059  000BA4  1635               	andwf	___ftmul@sign,f,c
  3060  000BA6  8E28               	bsf	___ftmul@f1+1,7,c
  3061  000BA8  8E2B               	bsf	___ftmul@f2+1,7,c
  3062  000BAA  0EFF               	movlw	255
  3063  000BAC  162A               	andwf	___ftmul@f2,f,c
  3064  000BAE  0EFF               	movlw	255
  3065  000BB0  162B               	andwf	___ftmul@f2+1,f,c
  3066  000BB2  0E00               	movlw	0
  3067  000BB4  162C               	andwf	___ftmul@f2+2,f,c
  3068  000BB6  0E00               	movlw	0
  3069  000BB8  6E31               	movwf	___ftmul@f3_as_product,c
  3070  000BBA  0E00               	movlw	0
  3071  000BBC  6E32               	movwf	___ftmul@f3_as_product+1,c
  3072  000BBE  0E00               	movlw	0
  3073  000BC0  6E33               	movwf	___ftmul@f3_as_product+2,c
  3074  000BC2  0E07               	movlw	7
  3075  000BC4  6E34               	movwf	___ftmul@cntr,c
  3076  000BC6  A027               	btfss	___ftmul@f1,0,c
  3077  000BC8  D006               	goto	l554
  3078  000BCA  502A               	movf	___ftmul@f2,w,c
  3079  000BCC  2631               	addwf	___ftmul@f3_as_product,f,c
  3080  000BCE  502B               	movf	___ftmul@f2+1,w,c
  3081  000BD0  2232               	addwfc	___ftmul@f3_as_product+1,f,c
  3082  000BD2  502C               	movf	___ftmul@f2+2,w,c
  3083  000BD4  2233               	addwfc	___ftmul@f3_as_product+2,f,c
  3084  000BD6                     l554:
  3085  000BD6  90D8               	bcf	status,0,c
  3086  000BD8  3229               	rrcf	___ftmul@f1+2,f,c
  3087  000BDA  3228               	rrcf	___ftmul@f1+1,f,c
  3088  000BDC  3227               	rrcf	___ftmul@f1,f,c
  3089  000BDE  90D8               	bcf	status,0,c
  3090  000BE0  362A               	rlcf	___ftmul@f2,f,c
  3091  000BE2  362B               	rlcf	___ftmul@f2+1,f,c
  3092  000BE4  362C               	rlcf	___ftmul@f2+2,f,c
  3093  000BE6  2E34               	decfsz	___ftmul@cntr,f,c
  3094  000BE8  D7EE               	goto	l553
  3095  000BEA  0E09               	movlw	9
  3096  000BEC  6E34               	movwf	___ftmul@cntr,c
  3097  000BEE  A027               	btfss	___ftmul@f1,0,c
  3098  000BF0  D006               	goto	l557
  3099  000BF2  502A               	movf	___ftmul@f2,w,c
  3100  000BF4  2631               	addwf	___ftmul@f3_as_product,f,c
  3101  000BF6  502B               	movf	___ftmul@f2+1,w,c
  3102  000BF8  2232               	addwfc	___ftmul@f3_as_product+1,f,c
  3103  000BFA  502C               	movf	___ftmul@f2+2,w,c
  3104  000BFC  2233               	addwfc	___ftmul@f3_as_product+2,f,c
  3105  000BFE                     l557:
  3106  000BFE  90D8               	bcf	status,0,c
  3107  000C00  3229               	rrcf	___ftmul@f1+2,f,c
  3108  000C02  3228               	rrcf	___ftmul@f1+1,f,c
  3109  000C04  3227               	rrcf	___ftmul@f1,f,c
  3110  000C06  90D8               	bcf	status,0,c
  3111  000C08  3233               	rrcf	___ftmul@f3_as_product+2,f,c
  3112  000C0A  3232               	rrcf	___ftmul@f3_as_product+1,f,c
  3113  000C0C  3231               	rrcf	___ftmul@f3_as_product,f,c
  3114  000C0E  2E34               	decfsz	___ftmul@cntr,f,c
  3115  000C10  D7EE               	goto	l556
  3116  000C12  C031  F013         	movff	___ftmul@f3_as_product,___ftpack@arg
  3117  000C16  C032  F014         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3118  000C1A  C033  F015         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3119  000C1E  C030  F016         	movff	___ftmul@exp,___ftpack@exp
  3120  000C22  C035  F017         	movff	___ftmul@sign,___ftpack@sign
  3121  000C26  EC8F  F006         	call	___ftpack	;wreg free
  3122  000C2A  C013  F027         	movff	?___ftpack,?___ftmul
  3123  000C2E  C014  F028         	movff	?___ftpack+1,?___ftmul+1
  3124  000C32  C015  F029         	movff	?___ftpack+2,?___ftmul+2
  3125  000C36  0012               	return	
  3126  000C38                     __end_of___ftmul:
  3127                           	opt stack 0
  3128                           tblptru	equ	0xFF8
  3129                           tblptrh	equ	0xFF7
  3130                           tblptrl	equ	0xFF6
  3131                           tablat	equ	0xFF5
  3132                           prodh	equ	0xFF4
  3133                           prodl	equ	0xFF3
  3134                           intcon	equ	0xFF2
  3135                           postinc0	equ	0xFEE
  3136                           wreg	equ	0xFE8
  3137                           postdec1	equ	0xFE5
  3138                           plusw1	equ	0xFE3
  3139                           fsr1l	equ	0xFE1
  3140                           indf2	equ	0xFDF
  3141                           plusw2	equ	0xFDB
  3142                           fsr2h	equ	0xFDA
  3143                           fsr2l	equ	0xFD9
  3144                           status	equ	0xFD8
  3145                           
  3146 ;; *************** function ___ftdiv *****************
  3147 ;; Defined at:
  3148 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;  f1              3   53[COMRAM] float 
  3151 ;;  f2              3   56[COMRAM] float 
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;  f3              3   63[COMRAM] float 
  3154 ;;  sign            1   67[COMRAM] unsigned char 
  3155 ;;  exp             1   66[COMRAM] unsigned char 
  3156 ;;  cntr            1   62[COMRAM] unsigned char 
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  3   53[COMRAM] float 
  3159 ;; Registers used:
  3160 ;;		wreg, status,2, status,0, cstack
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMRAM   BANK0   BANK1
  3166 ;;      Params:         6       0       0
  3167 ;;      Locals:         6       0       0
  3168 ;;      Temps:          3       0       0
  3169 ;;      Totals:        15       0       0
  3170 ;;Total ram usage:       15 bytes
  3171 ;; Hardware stack levels used:    1
  3172 ;; Hardware stack levels required when called:    2
  3173 ;; This function calls:
  3174 ;;		___ftpack
  3175 ;; This function is called by:
  3176 ;;		_main
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           	psect	text13
  3181  000C38                     __ptext13:
  3182                           	opt stack 0
  3183  000C38                     ___ftdiv:
  3184                           	opt stack 28
  3185                           
  3186                           ;incstack = 0
  3187  000C38  C038  F03C         	movff	___ftdiv@f1+2,??___ftdiv
  3188  000C3C  6A3D               	clrf	(??___ftdiv+1)& (0+255),c
  3189  000C3E  6A3E               	clrf	(??___ftdiv+2)& (0+255),c
  3190  000C40  3437               	rlcf	___ftdiv@f1+1,w,c
  3191  000C42  363C               	rlcf	??___ftdiv& (0+255),f,c
  3192  000C44  E301               	bnc	u2711
  3193  000C46  803D               	bsf	(??___ftdiv+1)& (0+255),0,c
  3194  000C48                     u2711:
  3195  000C48  503C               	movf	??___ftdiv,w,c
  3196  000C4A  6E43               	movwf	___ftdiv@exp,c
  3197  000C4C  5043               	movf	___ftdiv@exp,w,c
  3198  000C4E  A4D8               	btfss	status,2,c
  3199  000C50  D007               	goto	l535
  3200  000C52  0E00               	movlw	0
  3201  000C54  6E36               	movwf	?___ftdiv,c
  3202  000C56  0E00               	movlw	0
  3203  000C58  6E37               	movwf	?___ftdiv+1,c
  3204  000C5A  0E00               	movlw	0
  3205  000C5C  6E38               	movwf	?___ftdiv+2,c
  3206  000C5E  0012               	return	
  3207  000C60                     l535:
  3208  000C60  C03B  F03C         	movff	___ftdiv@f2+2,??___ftdiv
  3209  000C64  6A3D               	clrf	(??___ftdiv+1)& (0+255),c
  3210  000C66  6A3E               	clrf	(??___ftdiv+2)& (0+255),c
  3211  000C68  343A               	rlcf	___ftdiv@f2+1,w,c
  3212  000C6A  363C               	rlcf	??___ftdiv& (0+255),f,c
  3213  000C6C  E301               	bnc	u2731
  3214  000C6E  803D               	bsf	(??___ftdiv+1)& (0+255),0,c
  3215  000C70                     u2731:
  3216  000C70  503C               	movf	??___ftdiv,w,c
  3217  000C72  6E44               	movwf	___ftdiv@sign,c
  3218  000C74  5044               	movf	___ftdiv@sign,w,c
  3219  000C76  A4D8               	btfss	status,2,c
  3220  000C78  D007               	goto	l537
  3221  000C7A  0E00               	movlw	0
  3222  000C7C  6E36               	movwf	?___ftdiv,c
  3223  000C7E  0E00               	movlw	0
  3224  000C80  6E37               	movwf	?___ftdiv+1,c
  3225  000C82  0E00               	movlw	0
  3226  000C84  6E38               	movwf	?___ftdiv+2,c
  3227  000C86  0012               	return	
  3228  000C88                     l537:
  3229  000C88  0E00               	movlw	0
  3230  000C8A  6E40               	movwf	___ftdiv@f3,c
  3231  000C8C  0E00               	movlw	0
  3232  000C8E  6E41               	movwf	___ftdiv@f3+1,c
  3233  000C90  0E00               	movlw	0
  3234  000C92  6E42               	movwf	___ftdiv@f3+2,c
  3235  000C94  5044               	movf	___ftdiv@sign,w,c
  3236  000C96  0F89               	addlw	137
  3237  000C98  5E43               	subwf	___ftdiv@exp,f,c
  3238  000C9A  C038  F044         	movff	___ftdiv@f1+2,___ftdiv@sign
  3239  000C9E  503B               	movf	___ftdiv@f2+2,w,c
  3240  000CA0  1A44               	xorwf	___ftdiv@sign,f,c
  3241  000CA2  0E80               	movlw	128
  3242  000CA4  1644               	andwf	___ftdiv@sign,f,c
  3243  000CA6  8E37               	bsf	___ftdiv@f1+1,7,c
  3244  000CA8  0EFF               	movlw	255
  3245  000CAA  1636               	andwf	___ftdiv@f1,f,c
  3246  000CAC  0EFF               	movlw	255
  3247  000CAE  1637               	andwf	___ftdiv@f1+1,f,c
  3248  000CB0  0E00               	movlw	0
  3249  000CB2  1638               	andwf	___ftdiv@f1+2,f,c
  3250  000CB4  8E3A               	bsf	___ftdiv@f2+1,7,c
  3251  000CB6  0EFF               	movlw	255
  3252  000CB8  1639               	andwf	___ftdiv@f2,f,c
  3253  000CBA  0EFF               	movlw	255
  3254  000CBC  163A               	andwf	___ftdiv@f2+1,f,c
  3255  000CBE  0E00               	movlw	0
  3256  000CC0  163B               	andwf	___ftdiv@f2+2,f,c
  3257  000CC2  0E18               	movlw	24
  3258  000CC4  6E3F               	movwf	___ftdiv@cntr,c
  3259  000CC6  90D8               	bcf	status,0,c
  3260  000CC8  3640               	rlcf	___ftdiv@f3,f,c
  3261  000CCA  3641               	rlcf	___ftdiv@f3+1,f,c
  3262  000CCC  3642               	rlcf	___ftdiv@f3+2,f,c
  3263  000CCE  5039               	movf	___ftdiv@f2,w,c
  3264  000CD0  5C36               	subwf	___ftdiv@f1,w,c
  3265  000CD2  503A               	movf	___ftdiv@f2+1,w,c
  3266  000CD4  5837               	subwfb	___ftdiv@f1+1,w,c
  3267  000CD6  503B               	movf	___ftdiv@f2+2,w,c
  3268  000CD8  5838               	subwfb	___ftdiv@f1+2,w,c
  3269  000CDA  A0D8               	btfss	status,0,c
  3270  000CDC  D007               	goto	l539
  3271  000CDE  5039               	movf	___ftdiv@f2,w,c
  3272  000CE0  5E36               	subwf	___ftdiv@f1,f,c
  3273  000CE2  503A               	movf	___ftdiv@f2+1,w,c
  3274  000CE4  5A37               	subwfb	___ftdiv@f1+1,f,c
  3275  000CE6  503B               	movf	___ftdiv@f2+2,w,c
  3276  000CE8  5A38               	subwfb	___ftdiv@f1+2,f,c
  3277  000CEA  8040               	bsf	___ftdiv@f3,0,c
  3278  000CEC                     l539:
  3279  000CEC  90D8               	bcf	status,0,c
  3280  000CEE  3636               	rlcf	___ftdiv@f1,f,c
  3281  000CF0  3637               	rlcf	___ftdiv@f1+1,f,c
  3282  000CF2  3638               	rlcf	___ftdiv@f1+2,f,c
  3283  000CF4  2E3F               	decfsz	___ftdiv@cntr,f,c
  3284  000CF6  D7E7               	goto	l538
  3285  000CF8  C040  F013         	movff	___ftdiv@f3,___ftpack@arg
  3286  000CFC  C041  F014         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3287  000D00  C042  F015         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3288  000D04  C043  F016         	movff	___ftdiv@exp,___ftpack@exp
  3289  000D08  C044  F017         	movff	___ftdiv@sign,___ftpack@sign
  3290  000D0C  EC8F  F006         	call	___ftpack	;wreg free
  3291  000D10  C013  F036         	movff	?___ftpack,?___ftdiv
  3292  000D14  C014  F037         	movff	?___ftpack+1,?___ftdiv+1
  3293  000D18  C015  F038         	movff	?___ftpack+2,?___ftdiv+2
  3294  000D1C  0012               	return	
  3295  000D1E                     __end_of___ftdiv:
  3296                           	opt stack 0
  3297                           tblptru	equ	0xFF8
  3298                           tblptrh	equ	0xFF7
  3299                           tblptrl	equ	0xFF6
  3300                           tablat	equ	0xFF5
  3301                           prodh	equ	0xFF4
  3302                           prodl	equ	0xFF3
  3303                           intcon	equ	0xFF2
  3304                           postinc0	equ	0xFEE
  3305                           wreg	equ	0xFE8
  3306                           postdec1	equ	0xFE5
  3307                           plusw1	equ	0xFE3
  3308                           fsr1l	equ	0xFE1
  3309                           indf2	equ	0xFDF
  3310                           plusw2	equ	0xFDB
  3311                           fsr2h	equ	0xFDA
  3312                           fsr2l	equ	0xFD9
  3313                           status	equ	0xFD8
  3314                           
  3315 ;; *************** function ___ftadd *****************
  3316 ;; Defined at:
  3317 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  3318 ;; Parameters:    Size  Location     Type
  3319 ;;  f1              3   26[COMRAM] float 
  3320 ;;  f2              3   29[COMRAM] float 
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;  exp1            1   37[COMRAM] unsigned char 
  3323 ;;  exp2            1   36[COMRAM] unsigned char 
  3324 ;;  sign            1   35[COMRAM] unsigned char 
  3325 ;; Return value:  Size  Location     Type
  3326 ;;                  3   26[COMRAM] float 
  3327 ;; Registers used:
  3328 ;;		wreg, status,2, status,0, cstack
  3329 ;; Tracked objects:
  3330 ;;		On entry : 0/0
  3331 ;;		On exit  : 0/0
  3332 ;;		Unchanged: 0/0
  3333 ;; Data sizes:     COMRAM   BANK0   BANK1
  3334 ;;      Params:         6       0       0
  3335 ;;      Locals:         3       0       0
  3336 ;;      Temps:          3       0       0
  3337 ;;      Totals:        12       0       0
  3338 ;;Total ram usage:       12 bytes
  3339 ;; Hardware stack levels used:    1
  3340 ;; Hardware stack levels required when called:    2
  3341 ;; This function calls:
  3342 ;;		___ftpack
  3343 ;; This function is called by:
  3344 ;;		_main
  3345 ;; This function uses a non-reentrant model
  3346 ;;
  3347                           
  3348                           	psect	text14
  3349  0008A4                     __ptext14:
  3350                           	opt stack 0
  3351  0008A4                     ___ftadd:
  3352                           	opt stack 28
  3353                           
  3354                           ;incstack = 0
  3355  0008A4  C01D  F021         	movff	___ftadd@f1+2,??___ftadd
  3356  0008A8  6A22               	clrf	(??___ftadd+1)& (0+255),c
  3357  0008AA  6A23               	clrf	(??___ftadd+2)& (0+255),c
  3358  0008AC  341C               	rlcf	___ftadd@f1+1,w,c
  3359  0008AE  3621               	rlcf	??___ftadd& (0+255),f,c
  3360  0008B0  E301               	bnc	u2501
  3361  0008B2  8022               	bsf	(??___ftadd+1)& (0+255),0,c
  3362  0008B4                     u2501:
  3363  0008B4  5021               	movf	??___ftadd,w,c
  3364  0008B6  6E26               	movwf	___ftadd@exp1,c
  3365  0008B8  C020  F021         	movff	___ftadd@f2+2,??___ftadd
  3366  0008BC  6A22               	clrf	(??___ftadd+1)& (0+255),c
  3367  0008BE  6A23               	clrf	(??___ftadd+2)& (0+255),c
  3368  0008C0  341F               	rlcf	___ftadd@f2+1,w,c
  3369  0008C2  3621               	rlcf	??___ftadd& (0+255),f,c
  3370  0008C4  E301               	bnc	u2511
  3371  0008C6  8022               	bsf	(??___ftadd+1)& (0+255),0,c
  3372  0008C8                     u2511:
  3373  0008C8  5021               	movf	??___ftadd,w,c
  3374  0008CA  6E25               	movwf	___ftadd@exp2,c
  3375  0008CC  5026               	movf	___ftadd@exp1,w,c
  3376  0008CE  B4D8               	btfsc	status,2,c
  3377  0008D0  D00B               	goto	u2540
  3378  0008D2  5025               	movf	___ftadd@exp2,w,c
  3379  0008D4  5C26               	subwf	___ftadd@exp1,w,c
  3380  0008D6  B0D8               	btfsc	status,0,c
  3381  0008D8  D00E               	goto	l502
  3382  0008DA  5026               	movf	___ftadd@exp1,w,c
  3383  0008DC  0800               	sublw	0
  3384  0008DE  2425               	addwf	___ftadd@exp2,w,c
  3385  0008E0  6E21               	movwf	??___ftadd& (0+255),c
  3386  0008E2  0E18               	movlw	24
  3387  0008E4  6421               	cpfsgt	??___ftadd,c
  3388  0008E6  D007               	goto	l502
  3389  0008E8                     u2540:
  3390  0008E8  C01E  F01B         	movff	___ftadd@f2,?___ftadd
  3391  0008EC  C01F  F01C         	movff	___ftadd@f2+1,?___ftadd+1
  3392  0008F0  C020  F01D         	movff	___ftadd@f2+2,?___ftadd+2
  3393  0008F4  0012               	return	
  3394  0008F6                     l502:
  3395  0008F6  5025               	movf	___ftadd@exp2,w,c
  3396  0008F8  B4D8               	btfsc	status,2,c
  3397  0008FA  D00B               	goto	u2570
  3398  0008FC  5026               	movf	___ftadd@exp1,w,c
  3399  0008FE  5C25               	subwf	___ftadd@exp2,w,c
  3400  000900  B0D8               	btfsc	status,0,c
  3401  000902  D00E               	goto	l506
  3402  000904  5025               	movf	___ftadd@exp2,w,c
  3403  000906  0800               	sublw	0
  3404  000908  2426               	addwf	___ftadd@exp1,w,c
  3405  00090A  6E21               	movwf	??___ftadd& (0+255),c
  3406  00090C  0E18               	movlw	24
  3407  00090E  6421               	cpfsgt	??___ftadd,c
  3408  000910  D007               	goto	l506
  3409  000912                     u2570:
  3410  000912  C01B  F01B         	movff	___ftadd@f1,?___ftadd
  3411  000916  C01C  F01C         	movff	___ftadd@f1+1,?___ftadd+1
  3412  00091A  C01D  F01D         	movff	___ftadd@f1+2,?___ftadd+2
  3413  00091E  0012               	return	
  3414  000920                     l506:
  3415  000920  0E06               	movlw	6
  3416  000922  6E24               	movwf	___ftadd@sign,c
  3417  000924  BE1D               	btfsc	___ftadd@f1+2,7,c
  3418  000926  8E24               	bsf	___ftadd@sign,7,c
  3419  000928  BE20               	btfsc	___ftadd@f2+2,7,c
  3420  00092A  8C24               	bsf	___ftadd@sign,6,c
  3421  00092C  8E1C               	bsf	___ftadd@f1+1,7,c
  3422  00092E  0EFF               	movlw	255
  3423  000930  161B               	andwf	___ftadd@f1,f,c
  3424  000932  0EFF               	movlw	255
  3425  000934  161C               	andwf	___ftadd@f1+1,f,c
  3426  000936  0E00               	movlw	0
  3427  000938  161D               	andwf	___ftadd@f1+2,f,c
  3428  00093A  8E1F               	bsf	___ftadd@f2+1,7,c
  3429  00093C  0EFF               	movlw	255
  3430  00093E  161E               	andwf	___ftadd@f2,f,c
  3431  000940  0EFF               	movlw	255
  3432  000942  161F               	andwf	___ftadd@f2+1,f,c
  3433  000944  0E00               	movlw	0
  3434  000946  1620               	andwf	___ftadd@f2+2,f,c
  3435  000948  5025               	movf	___ftadd@exp2,w,c
  3436  00094A  5C26               	subwf	___ftadd@exp1,w,c
  3437  00094C  B0D8               	btfsc	status,0,c
  3438  00094E  D01B               	goto	l511
  3439  000950                     u2600:
  3440  000950  90D8               	bcf	status,0,c
  3441  000952  361E               	rlcf	___ftadd@f2,f,c
  3442  000954  361F               	rlcf	___ftadd@f2+1,f,c
  3443  000956  3620               	rlcf	___ftadd@f2+2,f,c
  3444  000958  0625               	decf	___ftadd@exp2,f,c
  3445  00095A  5026               	movf	___ftadd@exp1,w,c
  3446  00095C  1825               	xorwf	___ftadd@exp2,w,c
  3447  00095E  B4D8               	btfsc	status,2,c
  3448  000960  D00D               	goto	l516
  3449  000962  0624               	decf	___ftadd@sign,f,c
  3450  000964  C024  F021         	movff	___ftadd@sign,??___ftadd
  3451  000968  0E07               	movlw	7
  3452  00096A  1621               	andwf	??___ftadd,f,c
  3453  00096C  B4D8               	btfsc	status,2,c
  3454  00096E  D006               	goto	l516
  3455  000970  D7EF               	goto	u2600
  3456  000972  90D8               	bcf	status,0,c
  3457  000974  321D               	rrcf	___ftadd@f1+2,f,c
  3458  000976  321C               	rrcf	___ftadd@f1+1,f,c
  3459  000978  321B               	rrcf	___ftadd@f1,f,c
  3460  00097A  2A26               	incf	___ftadd@exp1,f,c
  3461  00097C                     l516:
  3462  00097C  5025               	movf	___ftadd@exp2,w,c
  3463  00097E  1826               	xorwf	___ftadd@exp1,w,c
  3464  000980  B4D8               	btfsc	status,2,c
  3465  000982  D01F               	goto	u2670
  3466  000984  D7F6               	goto	l517
  3467  000986                     l511:
  3468  000986  5026               	movf	___ftadd@exp1,w,c
  3469  000988  5C25               	subwf	___ftadd@exp2,w,c
  3470  00098A  B0D8               	btfsc	status,0,c
  3471  00098C  D01A               	goto	u2670
  3472  00098E                     u2640:
  3473  00098E  90D8               	bcf	status,0,c
  3474  000990  361B               	rlcf	___ftadd@f1,f,c
  3475  000992  361C               	rlcf	___ftadd@f1+1,f,c
  3476  000994  361D               	rlcf	___ftadd@f1+2,f,c
  3477  000996  0626               	decf	___ftadd@exp1,f,c
  3478  000998  5026               	movf	___ftadd@exp1,w,c
  3479  00099A  1825               	xorwf	___ftadd@exp2,w,c
  3480  00099C  B4D8               	btfsc	status,2,c
  3481  00099E  D00D               	goto	l525
  3482  0009A0  0624               	decf	___ftadd@sign,f,c
  3483  0009A2  C024  F021         	movff	___ftadd@sign,??___ftadd
  3484  0009A6  0E07               	movlw	7
  3485  0009A8  1621               	andwf	??___ftadd,f,c
  3486  0009AA  B4D8               	btfsc	status,2,c
  3487  0009AC  D006               	goto	l525
  3488  0009AE  D7EF               	goto	u2640
  3489  0009B0  90D8               	bcf	status,0,c
  3490  0009B2  3220               	rrcf	___ftadd@f2+2,f,c
  3491  0009B4  321F               	rrcf	___ftadd@f2+1,f,c
  3492  0009B6  321E               	rrcf	___ftadd@f2,f,c
  3493  0009B8  2A25               	incf	___ftadd@exp2,f,c
  3494  0009BA                     l525:
  3495  0009BA  5025               	movf	___ftadd@exp2,w,c
  3496  0009BC  1826               	xorwf	___ftadd@exp1,w,c
  3497  0009BE  A4D8               	btfss	status,2,c
  3498  0009C0  D7F7               	goto	l526
  3499  0009C2                     u2670:
  3500  0009C2  AE24               	btfss	___ftadd@sign,7,c
  3501  0009C4  D00C               	goto	l528
  3502  0009C6  0EFF               	movlw	255
  3503  0009C8  1A1B               	xorwf	___ftadd@f1,f,c
  3504  0009CA  0EFF               	movlw	255
  3505  0009CC  1A1C               	xorwf	___ftadd@f1+1,f,c
  3506  0009CE  0EFF               	movlw	255
  3507  0009D0  1A1D               	xorwf	___ftadd@f1+2,f,c
  3508  0009D2  0E01               	movlw	1
  3509  0009D4  261B               	addwf	___ftadd@f1,f,c
  3510  0009D6  0E00               	movlw	0
  3511  0009D8  221C               	addwfc	___ftadd@f1+1,f,c
  3512  0009DA  0E00               	movlw	0
  3513  0009DC  221D               	addwfc	___ftadd@f1+2,f,c
  3514  0009DE                     l528:
  3515  0009DE  AC24               	btfss	___ftadd@sign,6,c
  3516  0009E0  D00C               	goto	l529
  3517  0009E2  0EFF               	movlw	255
  3518  0009E4  1A1E               	xorwf	___ftadd@f2,f,c
  3519  0009E6  0EFF               	movlw	255
  3520  0009E8  1A1F               	xorwf	___ftadd@f2+1,f,c
  3521  0009EA  0EFF               	movlw	255
  3522  0009EC  1A20               	xorwf	___ftadd@f2+2,f,c
  3523  0009EE  0E01               	movlw	1
  3524  0009F0  261E               	addwf	___ftadd@f2,f,c
  3525  0009F2  0E00               	movlw	0
  3526  0009F4  221F               	addwfc	___ftadd@f2+1,f,c
  3527  0009F6  0E00               	movlw	0
  3528  0009F8  2220               	addwfc	___ftadd@f2+2,f,c
  3529  0009FA                     l529:
  3530  0009FA  0E00               	movlw	0
  3531  0009FC  6E24               	movwf	___ftadd@sign,c
  3532  0009FE  501B               	movf	___ftadd@f1,w,c
  3533  000A00  261E               	addwf	___ftadd@f2,f,c
  3534  000A02  501C               	movf	___ftadd@f1+1,w,c
  3535  000A04  221F               	addwfc	___ftadd@f2+1,f,c
  3536  000A06  501D               	movf	___ftadd@f1+2,w,c
  3537  000A08  2220               	addwfc	___ftadd@f2+2,f,c
  3538  000A0A  AE20               	btfss	___ftadd@f2+2,7,c
  3539  000A0C  D00E               	goto	l530
  3540  000A0E  0EFF               	movlw	255
  3541  000A10  1A1E               	xorwf	___ftadd@f2,f,c
  3542  000A12  0EFF               	movlw	255
  3543  000A14  1A1F               	xorwf	___ftadd@f2+1,f,c
  3544  000A16  0EFF               	movlw	255
  3545  000A18  1A20               	xorwf	___ftadd@f2+2,f,c
  3546  000A1A  0E01               	movlw	1
  3547  000A1C  261E               	addwf	___ftadd@f2,f,c
  3548  000A1E  0E00               	movlw	0
  3549  000A20  221F               	addwfc	___ftadd@f2+1,f,c
  3550  000A22  0E00               	movlw	0
  3551  000A24  2220               	addwfc	___ftadd@f2+2,f,c
  3552  000A26  0E01               	movlw	1
  3553  000A28  6E24               	movwf	___ftadd@sign,c
  3554  000A2A                     l530:
  3555  000A2A  C01E  F013         	movff	___ftadd@f2,___ftpack@arg
  3556  000A2E  C01F  F014         	movff	___ftadd@f2+1,___ftpack@arg+1
  3557  000A32  C020  F015         	movff	___ftadd@f2+2,___ftpack@arg+2
  3558  000A36  C026  F016         	movff	___ftadd@exp1,___ftpack@exp
  3559  000A3A  C024  F017         	movff	___ftadd@sign,___ftpack@sign
  3560  000A3E  EC8F  F006         	call	___ftpack	;wreg free
  3561  000A42  C013  F01B         	movff	?___ftpack,?___ftadd
  3562  000A46  C014  F01C         	movff	?___ftpack+1,?___ftadd+1
  3563  000A4A  C015  F01D         	movff	?___ftpack+2,?___ftadd+2
  3564  000A4E  0012               	return	
  3565  000A50                     __end_of___ftadd:
  3566                           	opt stack 0
  3567                           tblptru	equ	0xFF8
  3568                           tblptrh	equ	0xFF7
  3569                           tblptrl	equ	0xFF6
  3570                           tablat	equ	0xFF5
  3571                           prodh	equ	0xFF4
  3572                           prodl	equ	0xFF3
  3573                           intcon	equ	0xFF2
  3574                           postinc0	equ	0xFEE
  3575                           wreg	equ	0xFE8
  3576                           postdec1	equ	0xFE5
  3577                           plusw1	equ	0xFE3
  3578                           fsr1l	equ	0xFE1
  3579                           indf2	equ	0xFDF
  3580                           plusw2	equ	0xFDB
  3581                           fsr2h	equ	0xFDA
  3582                           fsr2l	equ	0xFD9
  3583                           status	equ	0xFD8
  3584                           
  3585 ;; *************** function ___ftpack *****************
  3586 ;; Defined at:
  3587 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  3588 ;; Parameters:    Size  Location     Type
  3589 ;;  arg             3   18[COMRAM] unsigned um
  3590 ;;  exp             1   21[COMRAM] unsigned char 
  3591 ;;  sign            1   22[COMRAM] unsigned char 
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;		None
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  3   18[COMRAM] float 
  3596 ;; Registers used:
  3597 ;;		wreg, status,2, status,0
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMRAM   BANK0   BANK1
  3603 ;;      Params:         5       0       0
  3604 ;;      Locals:         0       0       0
  3605 ;;      Temps:          3       0       0
  3606 ;;      Totals:         8       0       0
  3607 ;;Total ram usage:        8 bytes
  3608 ;; Hardware stack levels used:    1
  3609 ;; Hardware stack levels required when called:    1
  3610 ;; This function calls:
  3611 ;;		Nothing
  3612 ;; This function is called by:
  3613 ;;		___ftadd
  3614 ;;		___ftdiv
  3615 ;;		___ftmul
  3616 ;;		___lltoft
  3617 ;; This function uses a non-reentrant model
  3618 ;;
  3619                           
  3620                           	psect	text15
  3621  000D1E                     __ptext15:
  3622                           	opt stack 0
  3623  000D1E                     ___ftpack:
  3624                           	opt stack 28
  3625                           
  3626                           ;incstack = 0
  3627  000D1E  5016               	movf	___ftpack@exp,w,c
  3628  000D20  B4D8               	btfsc	status,2,c
  3629  000D22  D005               	goto	u2080
  3630  000D24  5013               	movf	___ftpack@arg,w,c
  3631  000D26  1014               	iorwf	___ftpack@arg+1,w,c
  3632  000D28  1015               	iorwf	___ftpack@arg+2,w,c
  3633  000D2A  A4D8               	btfss	status,2,c
  3634  000D2C  D00C               	goto	l471
  3635  000D2E                     u2080:
  3636  000D2E  0E00               	movlw	0
  3637  000D30  6E13               	movwf	?___ftpack,c
  3638  000D32  0E00               	movlw	0
  3639  000D34  6E14               	movwf	?___ftpack+1,c
  3640  000D36  0E00               	movlw	0
  3641  000D38  6E15               	movwf	?___ftpack+2,c
  3642  000D3A  0012               	return	
  3643  000D3C  2A16               	incf	___ftpack@exp,f,c
  3644  000D3E  90D8               	bcf	status,0,c
  3645  000D40  3215               	rrcf	___ftpack@arg+2,f,c
  3646  000D42  3214               	rrcf	___ftpack@arg+1,f,c
  3647  000D44  3213               	rrcf	___ftpack@arg,f,c
  3648  000D46                     l471:
  3649  000D46  0E00               	movlw	0
  3650  000D48  1413               	andwf	___ftpack@arg,w,c
  3651  000D4A  6E18               	movwf	??___ftpack& (0+255),c
  3652  000D4C  0E00               	movlw	0
  3653  000D4E  1414               	andwf	___ftpack@arg+1,w,c
  3654  000D50  6E19               	movwf	(??___ftpack+1)& (0+255),c
  3655  000D52  0EFE               	movlw	254
  3656  000D54  1415               	andwf	___ftpack@arg+2,w,c
  3657  000D56  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  3658  000D58  5018               	movf	??___ftpack,w,c
  3659  000D5A  1019               	iorwf	??___ftpack+1,w,c
  3660  000D5C  101A               	iorwf	??___ftpack+2,w,c
  3661  000D5E  B4D8               	btfsc	status,2,c
  3662  000D60  D00C               	goto	l474
  3663  000D62  D7EC               	goto	l472
  3664  000D64  2A16               	incf	___ftpack@exp,f,c
  3665  000D66  0E01               	movlw	1
  3666  000D68  2613               	addwf	___ftpack@arg,f,c
  3667  000D6A  0E00               	movlw	0
  3668  000D6C  2214               	addwfc	___ftpack@arg+1,f,c
  3669  000D6E  0E00               	movlw	0
  3670  000D70  2215               	addwfc	___ftpack@arg+2,f,c
  3671  000D72  90D8               	bcf	status,0,c
  3672  000D74  3215               	rrcf	___ftpack@arg+2,f,c
  3673  000D76  3214               	rrcf	___ftpack@arg+1,f,c
  3674  000D78  3213               	rrcf	___ftpack@arg,f,c
  3675  000D7A                     l474:
  3676  000D7A  0E00               	movlw	0
  3677  000D7C  1413               	andwf	___ftpack@arg,w,c
  3678  000D7E  6E18               	movwf	??___ftpack& (0+255),c
  3679  000D80  0E00               	movlw	0
  3680  000D82  1414               	andwf	___ftpack@arg+1,w,c
  3681  000D84  6E19               	movwf	(??___ftpack+1)& (0+255),c
  3682  000D86  0EFF               	movlw	255
  3683  000D88  1415               	andwf	___ftpack@arg+2,w,c
  3684  000D8A  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  3685  000D8C  5018               	movf	??___ftpack,w,c
  3686  000D8E  1019               	iorwf	??___ftpack+1,w,c
  3687  000D90  101A               	iorwf	??___ftpack+2,w,c
  3688  000D92  B4D8               	btfsc	status,2,c
  3689  000D94  D006               	goto	l477
  3690  000D96  D7E6               	goto	l475
  3691  000D98  0616               	decf	___ftpack@exp,f,c
  3692  000D9A  90D8               	bcf	status,0,c
  3693  000D9C  3613               	rlcf	___ftpack@arg,f,c
  3694  000D9E  3614               	rlcf	___ftpack@arg+1,f,c
  3695  000DA0  3615               	rlcf	___ftpack@arg+2,f,c
  3696  000DA2                     l477:
  3697  000DA2  BE14               	btfsc	___ftpack@arg+1,7,c
  3698  000DA4  D003               	goto	u2120
  3699  000DA6  0E02               	movlw	2
  3700  000DA8  6016               	cpfslt	___ftpack@exp,c
  3701  000DAA  D7F6               	goto	l478
  3702  000DAC                     u2120:
  3703  000DAC  A016               	btfss	___ftpack@exp,0,c
  3704  000DAE  9E14               	bcf	___ftpack@arg+1,7,c
  3705  000DB0  90D8               	bcf	status,0,c
  3706  000DB2  3216               	rrcf	___ftpack@exp,f,c
  3707  000DB4  5016               	movf	___ftpack@exp,w,c
  3708  000DB6  1215               	iorwf	___ftpack@arg+2,f,c
  3709  000DB8  5017               	movf	___ftpack@sign,w,c
  3710  000DBA  A4D8               	btfss	status,2,c
  3711  000DBC  8E15               	bsf	___ftpack@arg+2,7,c
  3712  000DBE  C013  F013         	movff	___ftpack@arg,?___ftpack
  3713  000DC2  C014  F014         	movff	___ftpack@arg+1,?___ftpack+1
  3714  000DC6  C015  F015         	movff	___ftpack@arg+2,?___ftpack+2
  3715  000DCA  0012               	return	
  3716  000DCC                     __end_of___ftpack:
  3717                           	opt stack 0
  3718                           tblptru	equ	0xFF8
  3719                           tblptrh	equ	0xFF7
  3720                           tblptrl	equ	0xFF6
  3721                           tablat	equ	0xFF5
  3722                           prodh	equ	0xFF4
  3723                           prodl	equ	0xFF3
  3724                           intcon	equ	0xFF2
  3725                           postinc0	equ	0xFEE
  3726                           wreg	equ	0xFE8
  3727                           postdec1	equ	0xFE5
  3728                           plusw1	equ	0xFE3
  3729                           fsr1l	equ	0xFE1
  3730                           indf2	equ	0xFDF
  3731                           plusw2	equ	0xFDB
  3732                           fsr2h	equ	0xFDA
  3733                           fsr2l	equ	0xFD9
  3734                           status	equ	0xFD8
  3735                           
  3736 ;; *************** function _UART_Write *****************
  3737 ;; Defined at:
  3738 ;;		line 387 in file "test.c"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;  info            2   24[COMRAM] PTR unsigned char 
  3741 ;;		 -> STR_2(25), STR_1(10), measuringDisplay(13), bpmDisplay(25), 
  3742 ;;		 -> sysDisplay(20), diasDisplay(21), 
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;  i               2   28[COMRAM] int 
  3745 ;; Return value:  Size  Location     Type
  3746 ;;                  1    wreg      void 
  3747 ;; Registers used:
  3748 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMRAM   BANK0   BANK1
  3754 ;;      Params:         2       0       0
  3755 ;;      Locals:         2       0       0
  3756 ;;      Temps:          2       0       0
  3757 ;;      Totals:         6       0       0
  3758 ;;Total ram usage:        6 bytes
  3759 ;; Hardware stack levels used:    1
  3760 ;; Hardware stack levels required when called:    2
  3761 ;; This function calls:
  3762 ;;		_UART_TX_Busy
  3763 ;;		_strlen
  3764 ;; This function is called by:
  3765 ;;		_main
  3766 ;; This function uses a non-reentrant model
  3767 ;;
  3768                           
  3769                           	psect	text16
  3770  000F76                     __ptext16:
  3771                           	opt stack 0
  3772  000F76                     _UART_Write:
  3773                           	opt stack 28
  3774                           
  3775                           ;test.c: 388: int i;
  3776                           ;test.c: 389: for (i = 0; i < strlen(info); i++) {
  3777                           
  3778                           ;incstack = 0
  3779  000F76  0E00               	movlw	0
  3780  000F78  6E1E               	movwf	UART_Write@i+1,c
  3781  000F7A  0E00               	movlw	0
  3782  000F7C  6E1D               	movwf	UART_Write@i,c
  3783  000F7E  D01E               	goto	l239
  3784  000F80                     
  3785                           ;test.c: 390: TXREG = info[i];
  3786  000F80  501D               	movf	UART_Write@i,w,c
  3787  000F82  2419               	addwf	UART_Write@info,w,c
  3788  000F84  6E1B               	movwf	??_UART_Write& (0+255),c
  3789  000F86  501E               	movf	UART_Write@i+1,w,c
  3790  000F88  201A               	addwfc	UART_Write@info+1,w,c
  3791  000F8A  6E1C               	movwf	(??_UART_Write+1)& (0+255),c
  3792  000F8C  C01B  FFF6         	movff	??_UART_Write,tblptrl
  3793  000F90  C01C  FFF7         	movff	??_UART_Write+1,tblptrh
  3794  000F94  6AF8               	clrf	tblptru,c
  3795  000F96  0E01               	movlw	(high __ramtop+-1)
  3796  000F98  64F7               	cpfsgt	tblptrh,c
  3797  000F9A  D003               	bra	u2327
  3798  000F9C  0008               	tblrd		*
  3799  000F9E  50F5               	movf	tablat,w,c
  3800  000FA0  D005               	bra	u2320
  3801  000FA2                     u2327:
  3802  000FA2  CFF6 FFE9          	movff	tblptrl,fsr0l
  3803  000FA6  CFF7 FFEA          	movff	tblptrh,fsr0h
  3804  000FAA  50EF               	movf	indf0,w,c
  3805  000FAC                     u2320:
  3806  000FAC  6EAD               	movwf	4013,c	;volatile
  3807  000FAE  EC1B  F009         	call	_UART_TX_Busy	;wreg free
  3808  000FB2  0900               	iorlw	0
  3809  000FB4  A4D8               	btfss	status,2,c
  3810  000FB6  D7FB               	goto	l242
  3811  000FB8  4A1D               	infsnz	UART_Write@i,f,c
  3812  000FBA  2A1E               	incf	UART_Write@i+1,f,c
  3813  000FBC                     l239:
  3814  000FBC  C019  F013         	movff	UART_Write@info,strlen@s
  3815  000FC0  C01A  F014         	movff	UART_Write@info+1,strlen@s+1
  3816  000FC4  ECA5  F008         	call	_strlen	;wreg free
  3817  000FC8  5013               	movf	?_strlen,w,c
  3818  000FCA  5C1D               	subwf	UART_Write@i,w,c
  3819  000FCC  5014               	movf	?_strlen+1,w,c
  3820  000FCE  581E               	subwfb	UART_Write@i+1,w,c
  3821  000FD0  B0D8               	btfsc	status,0,c
  3822  000FD2  0012               	return	
  3823  000FD4  D7D5               	goto	l240
  3824  000FD6                     __end_of_UART_Write:
  3825                           	opt stack 0
  3826                           tblptru	equ	0xFF8
  3827                           tblptrh	equ	0xFF7
  3828                           tblptrl	equ	0xFF6
  3829                           tablat	equ	0xFF5
  3830                           prodh	equ	0xFF4
  3831                           prodl	equ	0xFF3
  3832                           intcon	equ	0xFF2
  3833                           indf0	equ	0xFEF
  3834                           postinc0	equ	0xFEE
  3835                           fsr0h	equ	0xFEA
  3836                           fsr0l	equ	0xFE9
  3837                           wreg	equ	0xFE8
  3838                           postdec1	equ	0xFE5
  3839                           plusw1	equ	0xFE3
  3840                           fsr1l	equ	0xFE1
  3841                           indf2	equ	0xFDF
  3842                           plusw2	equ	0xFDB
  3843                           fsr2h	equ	0xFDA
  3844                           fsr2l	equ	0xFD9
  3845                           status	equ	0xFD8
  3846                           
  3847 ;; *************** function _strlen *****************
  3848 ;; Defined at:
  3849 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
  3850 ;; Parameters:    Size  Location     Type
  3851 ;;  s               2   18[COMRAM] PTR const unsigned char 
  3852 ;;		 -> appendUnits@data2(5), STR_2(25), STR_1(10), measuringDisplay(13), 
  3853 ;;		 -> bpmDisplay(25), sysDisplay(20), diasDisplay(21), 
  3854 ;; Auto vars:     Size  Location     Type
  3855 ;;  cp              2   22[COMRAM] PTR const unsigned char 
  3856 ;;		 -> appendUnits@data2(5), STR_2(25), STR_1(10), measuringDisplay(13), 
  3857 ;;		 -> bpmDisplay(25), sysDisplay(20), diasDisplay(21), 
  3858 ;; Return value:  Size  Location     Type
  3859 ;;                  2   18[COMRAM] unsigned int 
  3860 ;; Registers used:
  3861 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  3862 ;; Tracked objects:
  3863 ;;		On entry : 0/0
  3864 ;;		On exit  : 0/0
  3865 ;;		Unchanged: 0/0
  3866 ;; Data sizes:     COMRAM   BANK0   BANK1
  3867 ;;      Params:         2       0       0
  3868 ;;      Locals:         2       0       0
  3869 ;;      Temps:          2       0       0
  3870 ;;      Totals:         6       0       0
  3871 ;;Total ram usage:        6 bytes
  3872 ;; Hardware stack levels used:    1
  3873 ;; Hardware stack levels required when called:    1
  3874 ;; This function calls:
  3875 ;;		Nothing
  3876 ;; This function is called by:
  3877 ;;		_appendUnits
  3878 ;;		_UART_Write
  3879 ;; This function uses a non-reentrant model
  3880 ;;
  3881                           
  3882                           	psect	text17
  3883  00114A                     __ptext17:
  3884                           	opt stack 0
  3885  00114A                     _strlen:
  3886                           	opt stack 28
  3887                           
  3888                           ;incstack = 0
  3889  00114A  C013  F017         	movff	strlen@s,strlen@cp
  3890  00114E  C014  F018         	movff	strlen@s+1,strlen@cp+1
  3891  001152  D002               	goto	l804
  3892  001154  4A17               	infsnz	strlen@cp,f,c
  3893  001156  2A18               	incf	strlen@cp+1,f,c
  3894  001158                     l804:
  3895  001158  C017  FFF6         	movff	strlen@cp,tblptrl
  3896  00115C  C018  FFF7         	movff	strlen@cp+1,tblptrh
  3897  001160  6AF8               	clrf	tblptru,c
  3898  001162  0E01               	movlw	(high __ramtop+-1)
  3899  001164  64F7               	cpfsgt	tblptrh,c
  3900  001166  D003               	bra	u2057
  3901  001168  0008               	tblrd		*
  3902  00116A  50F5               	movf	tablat,w,c
  3903  00116C  D005               	bra	u2050
  3904  00116E                     u2057:
  3905  00116E  CFF6 FFE9          	movff	tblptrl,fsr0l
  3906  001172  CFF7 FFEA          	movff	tblptrh,fsr0h
  3907  001176  50EF               	movf	indf0,w,c
  3908  001178                     u2050:
  3909  001178  0900               	iorlw	0
  3910  00117A  A4D8               	btfss	status,2,c
  3911  00117C  D7EB               	goto	l805
  3912  00117E  C013  F015         	movff	strlen@s,??_strlen
  3913  001182  C014  F016         	movff	strlen@s+1,??_strlen+1
  3914  001186  1E15               	comf	??_strlen,f,c
  3915  001188  1E16               	comf	??_strlen+1,f,c
  3916  00118A  4A15               	infsnz	??_strlen,f,c
  3917  00118C  2A16               	incf	??_strlen+1,f,c
  3918  00118E  5017               	movf	strlen@cp,w,c
  3919  001190  2415               	addwf	??_strlen,w,c
  3920  001192  6E13               	movwf	?_strlen,c
  3921  001194  5018               	movf	strlen@cp+1,w,c
  3922  001196  2016               	addwfc	??_strlen+1,w,c
  3923  001198  6E14               	movwf	?_strlen+1,c
  3924  00119A  0012               	return	
  3925  00119C                     __end_of_strlen:
  3926                           	opt stack 0
  3927                           tblptru	equ	0xFF8
  3928                           tblptrh	equ	0xFF7
  3929                           tblptrl	equ	0xFF6
  3930                           tablat	equ	0xFF5
  3931                           prodh	equ	0xFF4
  3932                           prodl	equ	0xFF3
  3933                           intcon	equ	0xFF2
  3934                           indf0	equ	0xFEF
  3935                           postinc0	equ	0xFEE
  3936                           fsr0h	equ	0xFEA
  3937                           fsr0l	equ	0xFE9
  3938                           wreg	equ	0xFE8
  3939                           postdec1	equ	0xFE5
  3940                           plusw1	equ	0xFE3
  3941                           fsr1l	equ	0xFE1
  3942                           indf2	equ	0xFDF
  3943                           plusw2	equ	0xFDB
  3944                           fsr2h	equ	0xFDA
  3945                           fsr2l	equ	0xFD9
  3946                           status	equ	0xFD8
  3947                           
  3948 ;; *************** function _UART_TX_Busy *****************
  3949 ;; Defined at:
  3950 ;;		line 379 in file "test.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;		None
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;		None
  3955 ;; Return value:  Size  Location     Type
  3956 ;;                  1    wreg      unsigned char 
  3957 ;; Registers used:
  3958 ;;		wreg
  3959 ;; Tracked objects:
  3960 ;;		On entry : 0/0
  3961 ;;		On exit  : 0/0
  3962 ;;		Unchanged: 0/0
  3963 ;; Data sizes:     COMRAM   BANK0   BANK1
  3964 ;;      Params:         0       0       0
  3965 ;;      Locals:         0       0       0
  3966 ;;      Temps:          0       0       0
  3967 ;;      Totals:         0       0       0
  3968 ;;Total ram usage:        0 bytes
  3969 ;; Hardware stack levels used:    1
  3970 ;; Hardware stack levels required when called:    1
  3971 ;; This function calls:
  3972 ;;		Nothing
  3973 ;; This function is called by:
  3974 ;;		_appendUnits
  3975 ;;		_printNewLine
  3976 ;;		_printData
  3977 ;;		_UART_Write
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           
  3981                           	psect	text18
  3982  001236                     __ptext18:
  3983                           	opt stack 0
  3984  001236                     _UART_TX_Busy:
  3985                           	opt stack 28
  3986                           
  3987                           ;test.c: 380: return (char) !TXSTAbits.TRMT;
  3988                           
  3989                           ;incstack = 0
  3990  001236  B2AC               	btfsc	4012,1,c	;volatile
  3991  001238  D002               	goto	u2030
  3992  00123A  0E01               	movlw	1
  3993  00123C  0012               	return	
  3994  00123E                     u2030:
  3995  00123E  0E00               	movlw	0
  3996  001240  0012               	return	
  3997  001242                     __end_of_UART_TX_Busy:
  3998                           	opt stack 0
  3999                           tblptru	equ	0xFF8
  4000                           tblptrh	equ	0xFF7
  4001                           tblptrl	equ	0xFF6
  4002                           tablat	equ	0xFF5
  4003                           prodh	equ	0xFF4
  4004                           prodl	equ	0xFF3
  4005                           intcon	equ	0xFF2
  4006                           indf0	equ	0xFEF
  4007                           postinc0	equ	0xFEE
  4008                           fsr0h	equ	0xFEA
  4009                           fsr0l	equ	0xFE9
  4010                           wreg	equ	0xFE8
  4011                           postdec1	equ	0xFE5
  4012                           plusw1	equ	0xFE3
  4013                           fsr1l	equ	0xFE1
  4014                           indf2	equ	0xFDF
  4015                           plusw2	equ	0xFDB
  4016                           fsr2h	equ	0xFDA
  4017                           fsr2l	equ	0xFD9
  4018                           status	equ	0xFD8
  4019                           
  4020 ;; *************** function _UART_Open *****************
  4021 ;; Defined at:
  4022 ;;		line 354 in file "test.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;  baudrate        4   18[COMRAM] const long 
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;		None
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  1    wreg      void 
  4029 ;; Registers used:
  4030 ;;		wreg, status,2
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMRAM   BANK0   BANK1
  4036 ;;      Params:         4       0       0
  4037 ;;      Locals:         0       0       0
  4038 ;;      Temps:          0       0       0
  4039 ;;      Totals:         4       0       0
  4040 ;;Total ram usage:        4 bytes
  4041 ;; Hardware stack levels used:    1
  4042 ;; Hardware stack levels required when called:    1
  4043 ;; This function calls:
  4044 ;;		Nothing
  4045 ;; This function is called by:
  4046 ;;		_main
  4047 ;; This function uses a non-reentrant model
  4048 ;;
  4049                           
  4050                           	psect	text19
  4051  00121C                     __ptext19:
  4052                           	opt stack 0
  4053  00121C                     _UART_Open:
  4054                           	opt stack 29
  4055                           
  4056                           ;test.c: 356: BAUDCONbits.BRG16 = 0;
  4057                           
  4058                           ;incstack = 0
  4059  00121C  96B8               	bcf	4024,3,c	;volatile
  4060                           
  4061                           ;test.c: 357: SPBRG = 12;
  4062  00121E  0E0C               	movlw	12
  4063  001220  6EAF               	movwf	4015,c	;volatile
  4064                           
  4065                           ;test.c: 358: TXSTAbits.SYNC = 0;
  4066  001222  98AC               	bcf	4012,4,c	;volatile
  4067                           
  4068                           ;test.c: 359: TRISCbits.RC7 = 1;
  4069  001224  8E94               	bsf	3988,7,c	;volatile
  4070                           
  4071                           ;test.c: 360: TRISCbits.RC6 = 1;
  4072  001226  8C94               	bsf	3988,6,c	;volatile
  4073                           
  4074                           ;test.c: 361: RCSTAbits.CREN = 1;
  4075  001228  88AB               	bsf	4011,4,c	;volatile
  4076                           
  4077                           ;test.c: 362: TXSTAbits.TXEN = 1;
  4078  00122A  8AAC               	bsf	4012,5,c	;volatile
  4079                           
  4080                           ;test.c: 363: RCSTAbits.SPEN = 1;
  4081  00122C  8EAB               	bsf	4011,7,c	;volatile
  4082                           
  4083                           ;test.c: 366: PIE1bits.RCIE = 1;
  4084  00122E  8A9D               	bsf	3997,5,c	;volatile
  4085                           
  4086                           ;test.c: 367: INTCONbits.GIE = 1;
  4087  001230  8EF2               	bsf	intcon,7,c	;volatile
  4088                           
  4089                           ;test.c: 368: INTCONbits.PEIE = 1;
  4090  001232  8CF2               	bsf	intcon,6,c	;volatile
  4091  001234  0012               	return		;funcret
  4092  001236                     __end_of_UART_Open:
  4093                           	opt stack 0
  4094                           tblptru	equ	0xFF8
  4095                           tblptrh	equ	0xFF7
  4096                           tblptrl	equ	0xFF6
  4097                           tablat	equ	0xFF5
  4098                           prodh	equ	0xFF4
  4099                           prodl	equ	0xFF3
  4100                           intcon	equ	0xFF2
  4101                           indf0	equ	0xFEF
  4102                           postinc0	equ	0xFEE
  4103                           fsr0h	equ	0xFEA
  4104                           fsr0l	equ	0xFE9
  4105                           wreg	equ	0xFE8
  4106                           postdec1	equ	0xFE5
  4107                           plusw1	equ	0xFE3
  4108                           fsr1l	equ	0xFE1
  4109                           indf2	equ	0xFDF
  4110                           plusw2	equ	0xFDB
  4111                           fsr2h	equ	0xFDA
  4112                           fsr2l	equ	0xFD9
  4113                           status	equ	0xFD8
  4114                           
  4115 ;; *************** function _UART_Close *****************
  4116 ;; Defined at:
  4117 ;;		line 371 in file "test.c"
  4118 ;; Parameters:    Size  Location     Type
  4119 ;;		None
  4120 ;; Auto vars:     Size  Location     Type
  4121 ;;		None
  4122 ;; Return value:  Size  Location     Type
  4123 ;;                  1    wreg      void 
  4124 ;; Registers used:
  4125 ;;		None
  4126 ;; Tracked objects:
  4127 ;;		On entry : 0/0
  4128 ;;		On exit  : 0/0
  4129 ;;		Unchanged: 0/0
  4130 ;; Data sizes:     COMRAM   BANK0   BANK1
  4131 ;;      Params:         0       0       0
  4132 ;;      Locals:         0       0       0
  4133 ;;      Temps:          0       0       0
  4134 ;;      Totals:         0       0       0
  4135 ;;Total ram usage:        0 bytes
  4136 ;; Hardware stack levels used:    1
  4137 ;; Hardware stack levels required when called:    1
  4138 ;; This function calls:
  4139 ;;		Nothing
  4140 ;; This function is called by:
  4141 ;;		_main
  4142 ;; This function uses a non-reentrant model
  4143 ;;
  4144                           
  4145                           	psect	text20
  4146  001242                     __ptext20:
  4147                           	opt stack 0
  4148  001242                     _UART_Close:
  4149                           	opt stack 29
  4150                           
  4151                           ;test.c: 372: RCSTAbits.SPEN = 0;
  4152                           
  4153                           ;incstack = 0
  4154  001242  9EAB               	bcf	4011,7,c	;volatile
  4155  001244  0012               	return		;funcret
  4156  001246                     __end_of_UART_Close:
  4157                           	opt stack 0
  4158                           tblptru	equ	0xFF8
  4159                           tblptrh	equ	0xFF7
  4160                           tblptrl	equ	0xFF6
  4161                           tablat	equ	0xFF5
  4162                           prodh	equ	0xFF4
  4163                           prodl	equ	0xFF3
  4164                           intcon	equ	0xFF2
  4165                           indf0	equ	0xFEF
  4166                           postinc0	equ	0xFEE
  4167                           fsr0h	equ	0xFEA
  4168                           fsr0l	equ	0xFE9
  4169                           wreg	equ	0xFE8
  4170                           postdec1	equ	0xFE5
  4171                           plusw1	equ	0xFE3
  4172                           fsr1l	equ	0xFE1
  4173                           indf2	equ	0xFDF
  4174                           plusw2	equ	0xFDB
  4175                           fsr2h	equ	0xFDA
  4176                           fsr2l	equ	0xFD9
  4177                           status	equ	0xFD8
  4178                           
  4179 ;; *************** function _YourHighPriorityISR *****************
  4180 ;; Defined at:
  4181 ;;		line 335 in file "test.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;		None
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;		None
  4186 ;; Return value:  Size  Location     Type
  4187 ;;                  1    wreg      void 
  4188 ;; Registers used:
  4189 ;;		wreg, status,2, status,0
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMRAM   BANK0   BANK1
  4195 ;;      Params:         0       0       0
  4196 ;;      Locals:         0       0       0
  4197 ;;      Temps:         18       0       0
  4198 ;;      Totals:        18       0       0
  4199 ;;Total ram usage:       18 bytes
  4200 ;; Hardware stack levels used:    1
  4201 ;; This function calls:
  4202 ;;		Nothing
  4203 ;; This function is called by:
  4204 ;;		Interrupt level 2
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           	psect	intcode
  4209  000008                     __pintcode:
  4210                           	opt stack 0
  4211  000008                     _YourHighPriorityISR:
  4212                           	opt stack 28
  4213                           
  4214                           ;incstack = 0
  4215  000008  826D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4216  00000A  CFFA F001          	movff	pclath,??_YourHighPriorityISR
  4217  00000E  CFFB F002          	movff	pclatu,??_YourHighPriorityISR+1
  4218  000012  CFE9 F003          	movff	fsr0l,??_YourHighPriorityISR+2
  4219  000016  CFEA F004          	movff	fsr0h,??_YourHighPriorityISR+3
  4220  00001A  CFE1 F005          	movff	fsr1l,??_YourHighPriorityISR+4
  4221  00001E  CFE2 F006          	movff	fsr1h,??_YourHighPriorityISR+5
  4222  000022  CFD9 F007          	movff	fsr2l,??_YourHighPriorityISR+6
  4223  000026  CFDA F008          	movff	fsr2h,??_YourHighPriorityISR+7
  4224  00002A  CFF3 F009          	movff	prodl,??_YourHighPriorityISR+8
  4225  00002E  CFF4 F00A          	movff	prodh,??_YourHighPriorityISR+9
  4226  000032  CFF6 F00B          	movff	tblptrl,??_YourHighPriorityISR+10
  4227  000036  CFF7 F00C          	movff	tblptrh,??_YourHighPriorityISR+11
  4228  00003A  CFF8 F00D          	movff	tblptru,??_YourHighPriorityISR+12
  4229  00003E  CFF5 F00E          	movff	tablat,??_YourHighPriorityISR+13
  4230  000042  C06D  F00F         	movff	btemp,??_YourHighPriorityISR+14
  4231  000046  C06E  F010         	movff	btemp+1,??_YourHighPriorityISR+15
  4232  00004A  C06F  F011         	movff	btemp+2,??_YourHighPriorityISR+16
  4233  00004E  C070  F012         	movff	btemp+3,??_YourHighPriorityISR+17
  4234                           
  4235                           ;test.c: 337: if (TMR0IE && TMR0IF)
  4236  000052  BAF2               	btfsc	intcon,5,c	;volatile
  4237  000054  A4F2               	btfss	intcon,2,c	;volatile
  4238  000056  D005               	goto	i2l218
  4239                           
  4240                           ;test.c: 338: {
  4241                           ;test.c: 339: TMR0 -= 250;
  4242  000058  0EFA               	movlw	250
  4243  00005A  5ED6               	subwf	4054,f,c	;volatile
  4244  00005C  0E00               	movlw	0
  4245  00005E  5AD7               	subwfb	4055,f,c	;volatile
  4246                           
  4247                           ;test.c: 340: TMR0IF=0;
  4248  000060  94F2               	bcf	intcon,2,c	;volatile
  4249  000062                     i2l218:
  4250                           
  4251                           ;test.c: 345: }
  4252                           ;test.c: 346: if (PIR1bits.RCIF )
  4253  000062  AA9E               	btfss	3998,5,c	;volatile
  4254  000064  D009               	goto	i2l220
  4255                           
  4256                           ;test.c: 347: {
  4257                           ;test.c: 348: PIR1bits.RCIF = 0;
  4258  000066  9A9E               	bcf	3998,5,c	;volatile
  4259                           
  4260                           ;test.c: 349: if(RCREG == 0x31)
  4261  000068  0E31               	movlw	49
  4262  00006A  18AE               	xorwf	4014,w,c	;volatile
  4263  00006C  A4D8               	btfss	status,2,c
  4264  00006E  D004               	goto	i2l220
  4265                           
  4266                           ;test.c: 350: state = 0;
  4267  000070  0E00               	movlw	0
  4268  000072  6E62               	movwf	_state+1,c
  4269  000074  0E00               	movlw	0
  4270  000076  6E61               	movwf	_state,c
  4271  000078                     i2l220:
  4272  000078  C012  F070         	movff	??_YourHighPriorityISR+17,btemp+3
  4273  00007C  C011  F06F         	movff	??_YourHighPriorityISR+16,btemp+2
  4274  000080  C010  F06E         	movff	??_YourHighPriorityISR+15,btemp+1
  4275  000084  C00F  F06D         	movff	??_YourHighPriorityISR+14,btemp
  4276  000088  C00E  FFF5         	movff	??_YourHighPriorityISR+13,tablat
  4277  00008C  C00D  FFF8         	movff	??_YourHighPriorityISR+12,tblptru
  4278  000090  C00C  FFF7         	movff	??_YourHighPriorityISR+11,tblptrh
  4279  000094  C00B  FFF6         	movff	??_YourHighPriorityISR+10,tblptrl
  4280  000098  C00A  FFF4         	movff	??_YourHighPriorityISR+9,prodh
  4281  00009C  C009  FFF3         	movff	??_YourHighPriorityISR+8,prodl
  4282  0000A0  C008  FFDA         	movff	??_YourHighPriorityISR+7,fsr2h
  4283  0000A4  C007  FFD9         	movff	??_YourHighPriorityISR+6,fsr2l
  4284  0000A8  C006  FFE2         	movff	??_YourHighPriorityISR+5,fsr1h
  4285  0000AC  C005  FFE1         	movff	??_YourHighPriorityISR+4,fsr1l
  4286  0000B0  C004  FFEA         	movff	??_YourHighPriorityISR+3,fsr0h
  4287  0000B4  C003  FFE9         	movff	??_YourHighPriorityISR+2,fsr0l
  4288  0000B8  C002  FFFB         	movff	??_YourHighPriorityISR+1,pclatu
  4289  0000BC  C001  FFFA         	movff	??_YourHighPriorityISR,pclath
  4290  0000C0  926D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4291  0000C2  0011               	retfie		f
  4292  0000C4                     __end_of_YourHighPriorityISR:
  4293                           	opt stack 0
  4294                           pclatu	equ	0xFFB
  4295                           pclath	equ	0xFFA
  4296                           tblptru	equ	0xFF8
  4297                           tblptrh	equ	0xFF7
  4298                           tblptrl	equ	0xFF6
  4299                           tablat	equ	0xFF5
  4300                           prodh	equ	0xFF4
  4301                           prodl	equ	0xFF3
  4302                           intcon	equ	0xFF2
  4303                           indf0	equ	0xFEF
  4304                           postinc0	equ	0xFEE
  4305                           fsr0h	equ	0xFEA
  4306                           fsr0l	equ	0xFE9
  4307                           wreg	equ	0xFE8
  4308                           postdec1	equ	0xFE5
  4309                           plusw1	equ	0xFE3
  4310                           fsr1h	equ	0xFE2
  4311                           fsr1l	equ	0xFE1
  4312                           indf2	equ	0xFDF
  4313                           plusw2	equ	0xFDB
  4314                           fsr2h	equ	0xFDA
  4315                           fsr2l	equ	0xFD9
  4316                           status	equ	0xFD8
  4317                           pclatu	equ	0xFFB
  4318                           pclath	equ	0xFFA
  4319                           tblptru	equ	0xFF8
  4320                           tblptrh	equ	0xFF7
  4321                           tblptrl	equ	0xFF6
  4322                           tablat	equ	0xFF5
  4323                           prodh	equ	0xFF4
  4324                           prodl	equ	0xFF3
  4325                           intcon	equ	0xFF2
  4326                           indf0	equ	0xFEF
  4327                           postinc0	equ	0xFEE
  4328                           fsr0h	equ	0xFEA
  4329                           fsr0l	equ	0xFE9
  4330                           wreg	equ	0xFE8
  4331                           postdec1	equ	0xFE5
  4332                           plusw1	equ	0xFE3
  4333                           fsr1h	equ	0xFE2
  4334                           fsr1l	equ	0xFE1
  4335                           indf2	equ	0xFDF
  4336                           plusw2	equ	0xFDB
  4337                           fsr2h	equ	0xFDA
  4338                           fsr2l	equ	0xFD9
  4339                           status	equ	0xFD8
  4340                           
  4341                           	psect	rparam
  4342  0000                     pclatu	equ	0xFFB
  4343                           pclath	equ	0xFFA
  4344                           tblptru	equ	0xFF8
  4345                           tblptrh	equ	0xFF7
  4346                           tblptrl	equ	0xFF6
  4347                           tablat	equ	0xFF5
  4348                           prodh	equ	0xFF4
  4349                           prodl	equ	0xFF3
  4350                           intcon	equ	0xFF2
  4351                           indf0	equ	0xFEF
  4352                           postinc0	equ	0xFEE
  4353                           fsr0h	equ	0xFEA
  4354                           fsr0l	equ	0xFE9
  4355                           wreg	equ	0xFE8
  4356                           postdec1	equ	0xFE5
  4357                           plusw1	equ	0xFE3
  4358                           fsr1h	equ	0xFE2
  4359                           fsr1l	equ	0xFE1
  4360                           indf2	equ	0xFDF
  4361                           plusw2	equ	0xFDB
  4362                           fsr2h	equ	0xFDA
  4363                           fsr2l	equ	0xFD9
  4364                           status	equ	0xFD8
  4365                           
  4366                           	psect	temp
  4367  00006D                     btemp:
  4368                           	opt stack 0
  4369  00006D                     	ds	1
  4370  0000                     int$flags	set	btemp
  4371  0000                     wtemp6	set	btemp+1
  4372                           pclatu	equ	0xFFB
  4373                           pclath	equ	0xFFA
  4374                           tblptru	equ	0xFF8
  4375                           tblptrh	equ	0xFF7
  4376                           tblptrl	equ	0xFF6
  4377                           tablat	equ	0xFF5
  4378                           prodh	equ	0xFF4
  4379                           prodl	equ	0xFF3
  4380                           intcon	equ	0xFF2
  4381                           indf0	equ	0xFEF
  4382                           postinc0	equ	0xFEE
  4383                           fsr0h	equ	0xFEA
  4384                           fsr0l	equ	0xFE9
  4385                           wreg	equ	0xFE8
  4386                           postdec1	equ	0xFE5
  4387                           plusw1	equ	0xFE3
  4388                           fsr1h	equ	0xFE2
  4389                           fsr1l	equ	0xFE1
  4390                           indf2	equ	0xFDF
  4391                           plusw2	equ	0xFDB
  4392                           fsr2h	equ	0xFDA
  4393                           fsr2l	equ	0xFD9
  4394                           status	equ	0xFD8


Data Sizes:
    Strings     35
    Constant    0
    Data        94
    BSS         47
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     89     108
    BANK0           128      4     126
    BANK1           256     14      14

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 25
		 -> appendUnits@data2(COMRAM[5]), STR_2(CODE[25]), STR_1(CODE[10]), measuringDisplay(BANK0[13]), 
		 -> bpmDisplay(BANK0[25]), sysDisplay(BANK0[20]), diasDisplay(BANK0[21]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 25
		 -> appendUnits@data2(COMRAM[5]), STR_2(CODE[25]), STR_1(CODE[10]), measuringDisplay(BANK0[13]), 
		 -> bpmDisplay(BANK0[25]), sysDisplay(BANK0[20]), diasDisplay(BANK0[21]), 

    UART_Write@info	PTR unsigned char  size(2) Largest target is 25
		 -> STR_2(CODE[25]), STR_1(CODE[10]), measuringDisplay(BANK0[13]), bpmDisplay(BANK0[25]), 
		 -> sysDisplay(BANK0[20]), diasDisplay(BANK0[21]), 

    measurePointer	PTR unsigned char  size(2) Largest target is 13
		 -> measuringDisplay(BANK0[13]), 

    bpmPointer	PTR unsigned char  size(2) Largest target is 25
		 -> bpmDisplay(BANK0[25]), 

    sysPointer	PTR unsigned char  size(2) Largest target is 20
		 -> sysDisplay(BANK0[20]), 

    diasPointer	PTR unsigned char  size(2) Largest target is 21
		 -> diasDisplay(BANK0[21]), 


Critical Paths under _main in COMRAM

    _main->_printData
    _printData->___awdiv
    ___fttol->___ftdiv
    ___awdiv->___fttol
    _appendUnits->_strlen
    ___lltoft->___ftpack
    ___ftmul->___ftadd
    ___ftdiv->___ftmul
    ___ftadd->___ftpack
    _UART_Write->_strlen

Critical Paths under _YourHighPriorityISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _printData->___awdiv

Critical Paths under _YourHighPriorityISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printData

Critical Paths under _YourHighPriorityISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   22607
                                              7 BANK1      7     7      0
                         _UART_Close
                          _UART_Open
                         _UART_Write
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lltoft
                          _adcConfig
                     _adcReadChannel
                        _appendUnits
                          _printData
                       _printNewLine
                        _timerConfig
 ---------------------------------------------------------------------------------
 (1) _timerConfig                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printNewLine                                         0     0      0       0
                       _UART_TX_Busy
 ---------------------------------------------------------------------------------
 (1) _printData                                            9     6      3    4190
                                             87 COMRAM     2     2      0
                                              0 BANK1      7     4      3
                       _UART_TX_Busy
                            ___awdiv
                             ___ftge
                            ___fttol
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     592
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     911
                                             68 COMRAM    15    11      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     918
                                             18 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     985
                                             83 COMRAM     4     0      4
                                              0 BANK0      4     4      0
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) _appendUnits                                          5     5      0     381
                                             24 COMRAM     5     5      0
                       _UART_TX_Busy
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _adcReadChannel                                       4     2      2     124
                                             18 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _adcConfig                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lltoft                                             9     5      4    3265
                                             26 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    4241
                                             38 COMRAM    15     9      6
                            ___ftadd (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    3633
                                             53 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             12     6      6    4758
                                             26 COMRAM    12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2893
                                             18 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           6     4      2     980
                                             24 COMRAM     6     4      2
                       _UART_TX_Busy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     310
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _UART_TX_Busy                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Open                                            4     0      4      90
                                             18 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _UART_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _YourHighPriorityISR                                 18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Close
   _UART_Open
   _UART_Write
     _UART_TX_Busy
     _strlen
   ___ftadd
     ___ftpack
   ___ftdiv
     ___ftmul (ARG)
       ___ftadd (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lltoft (ARG)
       ___ftpack
   ___ftmul
     ___ftadd (ARG)
       ___ftpack
     ___ftpack (ARG)
     ___ftpack (ARG)
     ___lltoft (ARG)
       ___ftpack
   ___fttol
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___ftadd (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___lltoft (ARG)
       ___ftpack
   ___lltoft
     ___ftpack
   _adcConfig
   _adcReadChannel
   _appendUnits
     _UART_TX_Busy
     _strlen
   _printData
     _UART_TX_Busy
     ___awdiv
       ___fttol (ARG)
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___lltoft (ARG)
           ___ftpack
     ___ftge
     ___fttol
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___lltoft (ARG)
         ___ftpack
     ___wmul
   _printNewLine
     _UART_TX_Busy
   _timerConfig

 _YourHighPriorityISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      E       E       6        5.5%
BITBANK0            80      0       0       3        0.0%
BANK0               80      4      7E       4       98.4%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     59      6C       1       85.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F8       7        0.0%
DATA                 0      0      F8       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri May 04 18:03:36 2018

                           _i 0063                  ___awdiv@sign 00FB           ___wmul@multiplicand 0015  
                 __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                ___ftadd@exp1 0026                  ___ftadd@exp2 0025                  ___ftadd@sign 0024  
                         l205 0E52                           l141 025E                           l150 04B6  
                         l142 027E                           l151 03FE                           l143 0368  
                         l240 0F80                           l152 0440                           l144 02D2  
                         l153 04AE                           l242 0FAE                           l154 04AE  
                         l146 02F0                           l171 106A                           l147 0356  
                         l156 064C                           l148 03F2                           l181 11F2  
                         l149 05A2                           l502 08F6                           l239 0FBC  
                         l511 0986                           l431 0F54                           l191 0762  
                         l168 1078                           l432 0F5E                           l424 0F06  
                         l169 105A                           l433 0F6C                           l425 0F16  
                         l530 0A2A                           l506 0920                           l186 07CC  
                         l427 0F34                           l516 097C                           l428 0F2C  
                         l196 0838                           l188 0722                           l525 09BA  
                         l517 0972                           l526 09B0                           l550 0B6C  
                         l471 0D46                           l535 0C60                           l543 0E90  
                         l199 0892                           l472 0D3C                           l528 09DE  
                         l552 0B94                           l544 0EC0                           l529 09FA  
                         l537 0C88                           l553 0BC6                           l474 0D7A  
                         l538 0CC6                           l554 0BD6                           l475 0D64  
                         l539 0CEC                           l571 0A7C                           l804 1158  
                         l556 0BEE                           l628 1100                           l580 0B0A  
                         l805 1154                           l477 0DA2                           l557 0BFE  
                         l629 10F4                           l573 0AF2                           l478 0D98  
                         l582 0B32                           l574 0AE2                           l579 0B16  
                __CFG_CPB$OFF 000000                           _MAP 005A                  __CFG_CPD$OFF 000000  
                __CFG_BOR$OFF 000000                           _bpm 00E0                           wreg 000FE8  
              _adcReadChannel 0DCC                  __CFG_LVP$OFF 000000                  ___ftdiv@cntr 003F  
                ___ftdiv@sign 0044                  __CFG_WDT$OFF 000000                          l2144 0EEC  
                        l2718 04C6                          STR_1 021A                          STR_2 0201  
                        u2030 123E                          u2120 0DAC                          u2050 1178  
                        u2300 0B1C                          u2320 0FAC                          u2080 0D2E  
                        u2057 116E                          u2241 0A60                          u3017 035E  
                        u3027 05B8                          u2180 0F38                          u2260 0A9A  
                        u2501 08B4                          u3037 0E48                          u2327 0FA2  
                        u2511 08C8                          u2600 0950                          u2265 0A92  
                        u2540 08E8                          u2711 0C48                          u2471 1048  
                        u2640 098E                          u2570 0912                          u2731 0C70  
                        u2670 09C2                          u2910 0418                          u2761 0B54  
                        u2940 044C                          u2781 0B7C                          u2870 030A  
                        u2880 0332                          u2970 04AC                          _RCIF 007CF5  
                        u2885 0326                          _TMR0 000FD6                  __CFG_WDTPS$1 000000  
           _diastolicPressure 00E8                          _main 0226                  ___ftpack@arg 0013  
                ___ftpack@exp 0016                          fsr0h 000FEA                          fsr1h 000FE2  
                        indf0 000FEF                          fsr2h 000FDA                          fsr0l 000FE9  
                        indf2 000FDF                          fsr1l 000FE1                          fsr2l 000FD9  
                        btemp 006D                          prodh 000FF4                          prodl 000FF3  
                        start 00C4                 __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000  
                ___ftmul@cntr 0034                  ___param_bank 000000                  ___ftmul@sign 0035  
                ___fttol@exp1 0053                  ___fttol@lval 004F                         ?_main 0001  
             __end_of___awdiv 0F76                         _ADRES 000FC3               __end_of___ftadd 0A50  
             __end_of___ftdiv 0D1E               __end_of___ftmul 0C38                         _T0CON 000FD5  
             ___awdiv@divisor 0056               __end_of___fttol 0B44                         i2l220 0078  
                       i2l218 0062               ___awdiv@counter 00FA                         _RCREG 000FAE  
      __end_of_adcReadChannel 0E60                         _TMR0H 000FD7                         _TMR0L 000FD6  
                       _SPBRG 000FAF                   ?_UART_Close 0001                         _TXREG 000FAD  
               __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
                ___lltoft@exp 0023                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                   ?_UART_Write 0019            __size_of_UART_Open 001A  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000             UART_Open@baudrate 0013                         _count 005F  
               ___ftpack@sign 0017                         _state 0061                         pclath 000FFA  
                       tablat 000FF5               _prevMeasurement 00F1                         plusw1 000FE3  
                       plusw2 000FDB                         status 000FD8                         wtemp6 006E  
             __initialization 0FD6                  __end_of_main 06AE                        ??_main 0107  
               ___fttol@sign1 004E                 __activetblptr 000002               ?_adcReadChannel 0013  
             __CFG_CCP2MX$RC1 000000                        _ADCON0 000FC2                        _ADCON1 000FC1  
            ___awdiv@dividend 0054              __end_of___ftpack 0DCC              __end_of___lltoft 114A  
                      _TMR0IE 007F95                        _TMR0IF 007F92          __size_of_appendUnits 005E  
              __CFG_XINST$OFF 000000           __size_of_UART_Close 0004             __end_of_UART_Open 1236  
                      ___ftge 0E60           __size_of_UART_Write 0060                        ___wmul 119C  
                   ??___awdiv 0058                     ??___ftadd 0021                __CFG_STVREN$ON 000000  
                   ??___ftdiv 003C                     ??___ftmul 002D                     ??___fttol 0049  
                      clear_0 1014                        clear_1 1020              ___awdiv@quotient 00FC  
                      _strlen 114A         ___ftmul@f3_as_product 0031                  ?_timerConfig 0001  
                __pdataCOMRAM 006B                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8            __size_of_adcConfig 001A  
                  __accesstop 0080       __end_of__initialization 1026               __CFG_PBADEN$ANA 000000  
                  ___ftadd@f1 001B                    ___ftadd@f2 001E                    ___ftge@ff1 0013  
                  ___ftge@ff2 0016                 ___rparam_used 000001                    ___ftdiv@f1 0036  
                  ___ftdiv@f2 0039                    ___ftdiv@f3 0040  __size_of_YourHighPriorityISR 00BC  
                  ___ftmul@f1 0027                    ___ftmul@f2 002A                    ___fttol@f1 0045  
              __pcstackCOMRAM 0001                  __pidataBANK0 1092                    ___lltoft@c 001B  
             __CFG_OSC$INTIO1 000000                    __pbssBANK0 00DC                    _bpmDisplay 008D  
                     ?___ftge 0013                       ?___wmul 0013                    _bpmPointer 0087  
           __end_of_adcConfig 121C                     ?___ftpack 0013                    _heartFloat 00EB  
                   ?___lltoft 001B                       ?_strlen 0013              __CFG_BBSIZ$BB256 000000  
                ??_UART_Close 0013            __size_of_printData 01F6                  ??_UART_Write 001B  
               ?_UART_TX_Busy 0001                       __Hparam 0000                       __Lparam 0000  
          __end_of_UART_Close 1246                       _adcData 0069               __size_of___ftge 0090  
                     ___awdiv 0EF0                       ___ftadd 08A4                       _adcPrev 006B  
                     ___ftdiv 0C38               __size_of___wmul 0026            __end_of_UART_Write 0FD6  
                     ___ftmul 0B44                       ___fttol 0A50                  __psmallconst 0200  
            ??_adcReadChannel 0015                       __pcinit 0FD6                    ??___ftpack 0018  
                     _avgData 00F8                       __ramtop 0200                    ??___lltoft 001F  
                     __ptext0 0226                       __ptext1 11C2                       __ptext2 11E4  
                     __ptext3 06AE                       __ptext4 119C                       __ptext5 0A50  
                     __ptext6 0E60                       __ptext7 0EF0                       __ptext8 1034  
                     __ptext9 0DCC                     _T0CONbits 000FD5                       _maxData 0067  
             __size_of_strlen 0052          __size_of_timerConfig 0022                   UART_Write@i 001D  
              ??_UART_TX_Busy 0013                       _sysComp 00DC          end_of_initialization 1026  
              _measurePointer 0085                 __Lmediumconst 0000             __end_of_printData 08A4  
                   _RCSTAbits 000FAB                       postdec1 000FE5                       postinc0 000FEE  
               ?_printNewLine 0001                       strlen@s 0013                     _UART_Open 121C  
              UART_Write@info 0019           _YourHighPriorityISR 0008                     _TRISAbits 000F92  
                   _TRISBbits 000F93                     _TRISCbits 000F94                 ??_appendUnits 0019  
                 ___ftdiv@exp 0043                     _TXSTAbits 000FAC                    _sysDisplay 00BB  
        ?_YourHighPriorityISR 0001                    _sysMeasure 00F4                   ___ftmul@exp 0030  
                  _sysPointer 0089                ??_printNewLine 0013                __end_of___ftge 0EF0  
              __end_of___wmul 11C2                   _BAUDCONbits 000FB8                 __pidataCOMRAM 1246  
                  ?_UART_Open 0013                __end_of_strlen 119C           start_initialization 0FD6  
       ??_YourHighPriorityISR 0001           __end_of_appendUnits 1092                      ??___ftge 0019  
                    ??___wmul 0017          __end_of_UART_TX_Busy 1242                   __pdataBANK0 0080  
            __CFG_LPT1OSC$OFF 000000                      ??_strlen 0015                     _adcConfig 1202  
           __size_of___ftpack 00AE   adcReadChannel@channelNumber 0016             __size_of___lltoft 005C  
                 __pbssCOMRAM 005A                 __pcstackBANK0 00FA                 __pcstackBANK1 0100  
                 _diasDisplay 00A6                   _diasPointer 008B                     _main$1527 010B  
                   __pintcode 0008                      ?___awdiv 0054                      ?___ftadd 001B  
                    ?___ftdiv 0036                      ?___ftmul 0027                      ?___fttol 0045  
                 ??_UART_Open 0017                    ?_adcConfig 0001                   __smallconst 0200  
        __end_of_printNewLine 1202              _systolicPressure 00EE                   _appendUnits 1034  
              ___wmul@product 0017                      _LATAbits 000F89                      _LATCbits 000F8B  
                    _PIE1bits 000F9D                      _PIR1bits 000F9E                      _RCONbits 000FD0  
                   _timerComp 00E4                     _printData 06AE                    _ADCON0bits 000FC2  
                  _ADCON2bits 000FC0             ___wmul@multiplier 0013                 ??_timerConfig 0013  
                   copy_data0 0FEA         __size_of_UART_TX_Busy 000C                      __Hrparam 0000  
                    __Lrparam 0000                    ?_printData 0100              __size_of___awdiv 0086  
            __size_of___ftadd 01AC              __size_of___ftdiv 00E6              __size_of___ftmul 00F4  
            __size_of___fttol 00F4                      ___ftpack 0D1E                      ___lltoft 10EE  
                 ??_adcConfig 0013                      _avgCount 005D       __size_of_adcReadChannel 0094  
                    __ptext10 1202                      __ptext11 10EE                      __ptext20 1242  
                    __ptext12 0B44                      __ptext13 0C38                      __ptext14 08A4  
                    __ptext15 0D1E                      __ptext16 0F76                      __ptext17 114A  
                    __ptext18 1236                      __ptext19 121C           __end_of_timerConfig 11E4  
                _UART_TX_Busy 1236              appendUnits@F2916 0080                 __size_of_main 0488  
            appendUnits@data2 0019                      _timerInt 0065                      int$flags 006D  
                    _pressure 00F6              _measuringDisplay 00CF                    _INTCONbits 000FF2  
       __size_of_printNewLine 001E   __end_of_YourHighPriorityISR 00C4                      intlevel2 0000  
                  _OSCCONbits 000FD3                   ??_printData 0103                  _printNewLine 11E4  
                 _timerConfig 11C2                    _UART_Close 1242                      strlen@cp 0017  
                  _UART_Write 0F76                  ?_appendUnits 0001               printData@sender 0058  
               printData@data 0100  
